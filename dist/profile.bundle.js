!function(e){var t={};function n(a){if(t[a])return t[a].exports;var o=t[a]={i:a,l:!1,exports:{}};return e[a].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(a,o,function(t){return e[t]}.bind(null,o));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=89)}({1:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};function o(e,t){for(var n=t.split("."),o=e;n.length;){var i=n.shift().trim();if(!("object"===(void 0===o?"undefined":a(o))&&i in o))return null;o=o[i]}return o}function i(e,t){var n=e,a=o(t,n.getAttribute("tc-data-model"));"INPUT"===n.nodeName||"SELECT"===n.nodeName||"TEXTAREA"===n.nodeName?n.value=a||"":n.innerHTML=a}function r(e,t){return e.test(t)}function l(e){return function(t,n){return o(e,n)}}t.htmlToElement=function(e){var t=document.createElement("template");return t.innerHTML=e.trim(),t.content.firstChild},t.getValue=o,t.bindPropertiesToElement=function(e,t){if(!t)return;for(var n=0;n<e.length;n+=1)i(e[n],t)},t.requiresSubstitution=r,t.getSubstituteValue=l,t.formatter=function(e,t){var n=/{{([^{]*?)}}/g,a=e;r(n,e)&&(a=e.replace(n,l(t)));return a},t.stopAlertTime=c,t.showAlert=function(e,t){c();var n=document.getElementById("alert");if(!n)return;n.className="",n.classList.add("alert"),n.classList.add(t);var a=n.querySelector(".alert-msg"),o=n.querySelector(".close-btn"),i=function(){return function(){n.style.display="none"}}();a.innerHTML=e,n.style.display="block",o.onclick=i,s=setTimeout(i,8e3)},t.getFieldsAsObject=function(e){var t={};return e.querySelectorAll("input").forEach(function(e){var n=e.getAttribute("name");t[n]=e.value}),e.querySelectorAll("select").forEach(function(e){var n=e.getAttribute("name");t[n]=e.options[e.selectedIndex].value}),t},t.showToast=function(e,t){clearTimeout(d);var n=document.getElementById("toast");if(!n)return;n.className="",n.classList.add("toast");var a=n.querySelector(".alert-msg"),o=n.querySelector(".close-btn"),i=function(){return function(){n.classList.remove("show"),n.classList.add("dismiss")}}();a.innerHTML=e,n.classList.add("show"),n.classList.remove("dismiss"),n.classList.add(t),o.onclick=i,d=setTimeout(i,8e3)},t.trimDate=function(e){return e.substring(0,e.length-5).trim()};var s=null;function c(){clearTimeout(s)}var d=null},2:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.modalBoxTemplate='\n<div id="modal-box" class="modal">\n    <div class="modal-content"></div>\n</div>',t.deleteDialogTemple='\n        <div class="modal-header">\n            <span class="modal-header-title" role="heading">\n                Confirm Delete\n            </span>\n            <span tc-data-dismiss="modal"  class="action-btn close" role="button" tabindex="0" aria-label="Close"></span>\n        </div>\n        <div tc-data-model="message" class="modal-body">This action delete entry from database. Are you sure you want to continue?\n        </div>\n        <div class="modal-footer">\n            <button tc-data-action="ok" name="ok" class="btn-ok">OK</button>\n            <button tc-data-dismiss="cancel"  name="cancel">Cancel</button>\n        </div>',t.entryListHeader='\n        <div class="header">\n            <span class="title">Your Diary Entries</span>\n            <div class="add-entry">\n                <a id="addEntry" title="Add Entry" class="btn create" role="button">Add Diary Entry</a>\n            </div>\n        </div>',t.entryListItemTemplate='\n            <div class="entry">\n                <p class="title" tc-data-model="title"></p>\n                <div class="content line-clamp">\n                    <p class="block-with-text" tc-data-model="content"></p>\n                </div>\n                <div class="footer">\n                    <div>\n                        <span>Last Modified:</span>&nbsp;\n                        <span tc-data-model="lastModified"></span>\n                    </div>\n                    <div class="dropdown">\n                        <a data-index="" tc-data-action="dropdown-toggle"\n                           class="dropdown-toggle-icon"></a>\n                        <ul class="dropdown-menu">\n                            <li><a tc-data-action="view">View</a></li>\n                            <li><a tc-data-action="edit">Edit</a></li>\n                            <li><a tc-data-action="delete">Delete</a></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>',t.createEntryTemplate='       \n    <div class="flexbox-parent scrollable">\n      <div id="alert" class="alert error">\n          <p class="alert-msg"></p>\n          <a href="javascript:void(0);" class="close-btn">&times;</a>\n      </div>\n      <div class="modal-header">\n          <div id="modal-header-title">\n              <p tc-data-model="lastModified"></p>\n              <input tc-data-model="title" placeholder="Title" class="form-input modal-header-input">\n              \x3c!--<span tc-data-model="title" class="modal-header-title"></span>--\x3e\n          </div>\n          <span tc-data-dismiss="modal" class="action-btn close" role="button" tabindex="0" aria-label="Close"></span>\n      </div>\n      <div class="grow-body modal-body">\n          <div class="create-entry">\n              <textarea placeholder="Dear Diary, " id="entry" autofocus></textarea>\n          </div>\n      </div>\n      <div class="modal-footer">\n        <button tc-data-action="save" type="button" class="btn-save">Save</button>\n        <button tc-data-dismiss="cancel" type="button" class="btn-cancel">Cancel</button>\n    </div>\n    </div>\n',t.viewEntryTemplate='\n     <div  class="scrollable">                \n        <div class="modal-header">\n            <div id="modal-header-title">\n                <p tc-data-model="lastModified"></p>\n                <span tc-data-model="title" class="modal-header-title"></span>\n            </div>\n            <span tc-data-dismiss="modal"  class="action-btn close" role="button" tabindex="0" aria-label="Close"></span>\n        </div>               \n        <div class="grow-body modal-body"> \n            <div class="content-container"></div>                \n        </div>  \n     </div>\n',t.loadingTemplate='\n    <div class="loading-container loading-bg">\n        <div class="loading-ring">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    </div>',t.emptyListTemple='<div class="empty-list"><span>No Entry</span></div>',t.navbarHeaderTemplate=' \n    <div>\n      <div class="nav-container">\n          <header class="nav-header">\n          <a class="navicon">\n            <svg xmlns="http://www.w3.org/2000/svg" width="23" height="19" viewBox="0 0 23 19">\n                      <g fill="none">\n                          <g fill="#555">\n                              <rect y="16" width="23" height="3" rx="1.5"></rect>\n                              <rect width="23" height="3" rx="1.5"></rect>\n                              <rect y="8" width="23" height="3" rx="1.5"></rect>\n                          </g>\n                      </g>\n                  </svg>\n          </a>\n          <a href="index.html" class="header-logo">\n              <span class="logo-img"></span>            \n          </a>\n          <div class="nav">\n              <ul class="logged-in">\n                  <li>\n                      <a href="dashboard.html">Dashboard</a>\n                  </li>\n                  <li>\n                      <a href="profile.html">Profile</a>\n                  </li>\n                  <li>\n                      <a class="logout-js">Logout</a>\n                  </li>\n              </ul>\n              <ul class="logged-out">\n                  <li>\n                      <a href="signin.html">Sign In</a>\n                  </li>\n                  <li>\n                      <a class="btn signup" href="signup.html">Sign Up</a>\n                  </li>\n              </ul>            \n          </div>\n      </header>     \n      </div>\n      <div class="side-nav">\n        <div class="nav">\n            <span tc-data-dismiss="side-nav"  class="action-btn close" role="button" tabindex="0" aria-label="Close"></span>\n            <ul class="logged-in">\n                <li>\n                    <a href="dashboard.html">Dashboard</a>\n                </li>\n                <li>\n                    <a href="profile.html">Profile</a>\n                </li>\n                <li>\n                    <a class="logout-js">Logout</a>\n                </li>\n            </ul>\n            <ul class="logged-out" style="display: none;">\n                <li>\n                    <a href="signin.html">Sign In</a>\n                </li>\n                <li>\n                    <a href="signup.html">Sign Up</a>\n                </li>\n            </ul>\n        </div>\n    </div>\n    </div>\n',t.floatingButton='\n    <a title="Add Entry" role="button">\n      <div class="floating-button show-on-mobile">\n          <span title="Add Entry" role="button" class="plus">&plus;</span>\n      </div>\n    </a>'},3:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getEntryUrlByID=function(e){return r+"/"+e};var a=t.baseUrl="https://shielded-waters-94006.herokuapp.com",o=t.apiVersion="/api/v1",i=t.apiUrl=a+o,r=(t.userProfile=i+"/account/me/detailed",t.changePassword=i+"/account/change-password",t.reminderUrl=i+"/account/user/reminder/settings",t.registrationEndpoint=i+"/auth/signup",t.authenticationEndpoint=i+"/auth/login",t.entriesEndpoint=i+"/entries")},4:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();var o=new(function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}return a(e,[{key:"request",value:function(){return function(e,t,n){var a={method:e,body:JSON.stringify(n),headers:{"Content-Type":"application/json"}};return localStorage.authenticationToken&&(a.headers["X-Access-Token"]=localStorage.authenticationToken),fetch(t,a).then(function(e){var t=e.status;if(401===t&&(localStorage.clear(),location.replace("signin.html")),t<400||t>=600){var n=e.headers.get("X-Access-Token");return n&&(localStorage.authenticationToken=n),Promise.resolve(e)}return Promise.resolve(e.json()).then(function(e){return Promise.reject(new Error(e.message))})}).then(function(e){return e.json()})}}()},{key:"get",value:function(){return function(e){return this.request("GET",e)}}()},{key:"post",value:function(){return function(e,t){return this.request("POST",e,t)}}()},{key:"put",value:function(){return function(e,t){return this.request("PUT",e,t)}}()},{key:"delete",value:function(){return function(e,t){return this.request("DELETE",e,t)}}()}]),e}());t.default=o},8:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=n(1),i=n(2);var r=function(){function e(){var t=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.vieewElement=document.getElementById("navbar"),this.vieewElement.style.display="none",this.vieewElement.appendChild((0,o.htmlToElement)(i.navbarHeaderTemplate));var n=this.vieewElement.querySelectorAll(".logout-js");n[0].onclick=e.logoutHandle,n[1].onclick=e.logoutHandle,this.vieewElement.querySelector('[tc-data-dismiss="side-nav"]').onclick=function(){t.hideOrShowSideNav("hide")},this.vieewElement.querySelector(".navicon").onclick=function(){t.hideOrShowSideNav("show")},this.vieewElement.querySelector(".side-nav").onclick=function(e){e.target.classList.contains("nav")||t.hideOrShowSideNav("hide")}}return a(e,null,[{key:"logoutHandle",value:function(){return function(){localStorage.clear("authenticationToken"),window.location.replace("index.html")}}()}]),a(e,[{key:"render",value:function(){return function(){this.vieewElement.style.display="flex";var e=this.vieewElement.querySelectorAll(".logged-out"),t=this.vieewElement.querySelectorAll(".logged-in");localStorage.authenticationToken?(t[0].style.display="flex",e[0].style.display="none",t[1].style.display="block",e[1].style.display="none"):(t[0].style.display="none",e[0].style.display="flex",t[1].style.display="none",e[1].style.display="block")}}()},{key:"hideOrShowSideNav",value:function(){return function(e){var t=this.vieewElement.querySelector(".side-nav"),n=t.querySelector(".nav");"hide"===e?(t.style.width="0",n.style.width="0"):(t.style.width="100vw",n.style.width="250px")}}()}]),e}();t.default=r},89:function(e,t,n){"use strict";var a=function(){return function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],a=!0,o=!1,i=void 0;try{for(var r,l=e[Symbol.iterator]();!(a=(r=l.next()).done)&&(n.push(r.value),!t||n.length!==t);a=!0);}catch(e){o=!0,i=e}finally{try{!a&&l.return&&l.return()}finally{if(o)throw i}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),o=n(1),i=n(3),r=s(n(8)),l=s(n(4));function s(e){return e&&e.__esModule?e:{default:e}}function c(e){var t=Number(e);return t>=0&&t<10&&(t="0"+t),t}function d(e,t,n){var a=e;return a<t?a=t:a>n&&(a=n),a}function u(e){var t=e.target,n=t.getAttribute("data-unit"),a=t.value;n&&"hours"===n?a=d(a,0,23):n&&"minutes"===n&&(a=d(a,0,59)),t.value=parseInt(a,10)}function v(e){var t=document.getElementById("hours"),n=document.getElementById("minutes"),a=e.target;n.classList.remove("hasFocus"),t.classList.remove("hasFocus"),a.classList.add("hasFocus")}function m(e){var t=e.target,n=t.value;t.value=c(n)}function f(){var e=document.getElementById("minutes"),t=document.querySelector(".hasFocus");return t||(e.focus(),t=e),t}function p(e){return e<0?23:e>23?"00":c(e)}function h(e){var t=document.getElementById("hours"),n=f(),a=function(e,t){var n=0;if(!e)return n;"up"===e?n=t%15==0?t+15:15*(parseInt(t/15,10)+1):"down"===e&&(n=t%15==0?t-15:15*parseInt((0===t?60:t)/15,10));return n}(e.getAttribute("data-direction"),Number(n.value)),o=Number(t.value);a<=0?(n.value=59,o-=1,t.value=p(o)):a>=60?(n.value="00",o+=1,t.value=p(o)):n.value=c(a)}function y(e){var t=e.target,n=f();"minutes"===n.id?h(t):"hours"===n.id&&function(e){var t=e.getAttribute("data-direction"),n=f(),a=Number(n.value);t&&"down"===t?a-=1:t&&"up"===t&&(a+=1),n.value=p(a)}(t)}function g(e){e.then(function(e){(0,o.showToast)(e.message,"success")}).catch(function(e){(0,o.showToast)(e.message,"error")})}function b(e){e.preventDefault();var t=document.getElementById("changePassword"),n=(0,o.getFieldsAsObject)(t);n.newPassword===n.matchPassword?g(l.default.post(i.changePassword,n)):(0,o.showToast)("Password doesn't match","error")}function w(e){e.preventDefault();var t=document.getElementById("reminderForm"),n=(0,o.getFieldsAsObject)(t);n.time=n.hours+":"+n.minutes,g(l.default.put(i.reminderUrl,n))}document.addEventListener("DOMContentLoaded",function(){var e=new r.default;"undefined"!=typeof Storage&&(localStorage.authenticationToken?(e.render(),function(){var e=document.getElementById("hours"),t=document.getElementById("minutes");e.onkeyup=u,e.onchange=u,e.onpaste=u,e.oncut=u,t.onkeyup=u,t.onchange=u,t.onpaste=u,t.oncut=u,e.onblur=m,t.onblur=m,e.onfocus=v,t.onfocus=v;for(var n=document.querySelectorAll(".time-controller-btn"),a=0;a<n.length;a+=1)n[a].onclick=y}(),l.default.get(i.userProfile).then(function(e){var t=e.data,n=t.user,i=t.reminder,r=t.entry;!function(e){if(!e)return null;var t=document.getElementById("profile").querySelectorAll("[tc-data-model]");(0,o.bindPropertiesToElement)(t,e)}(n),function(e){if(e.time){var t=e.time,n=e.from,i=e.to,r=t.split(":"),l=a(r,2),s=l[0],c=l[1],d=document.getElementById("reminder").querySelectorAll("[tc-data-model]");(0,o.bindPropertiesToElement)(d,{hours:s,minutes:c,from:n,to:i})}}(i),function(e){if(!e)return null;var t=e;t.lastModified=(0,o.trimDate)(t.lastModified);var n=document.getElementById("entrySummary").querySelectorAll("[tc-data-model]");(0,o.bindPropertiesToElement)(n,e)}(r),document.getElementById("changePassword").querySelector("[tc-data-action]").onclick=b,document.getElementById("reminderForm").querySelector("[tc-data-action]").onclick=w}).catch(function(e){(0,o.showToast)(e.message,"error")})):window.location.replace("signin.html"))})}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,