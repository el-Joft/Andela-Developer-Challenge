!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=26)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){if(!("string"==typeof e||e instanceof String))throw new TypeError("This library (validator.js) validates strings only")},e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.windowInterface=t.DOMDoc=void 0;var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t.htmlToElement=a,t.getValue=u,t.bindPropertiesToElement=s,t.requiresSubstitution=d,t.getSubstituteValue=c,t.formatter=function(e,t){var n=/{{([^{]*?)}}/g,r=e;d(n,e)&&(r=e.replace(n,c(t)));return r},t.stopAlertTime=v,t.showAlert=p,t.getFormFieldsAsObject=function(e){var t={};return e.querySelectorAll("input").forEach(function(e){var n=e.getAttribute("name");t[n]=e.value}),e.querySelectorAll("select").forEach(function(e){var n=e.getAttribute("name");t[n]=e.options[e.selectedIndex].value}),t},t.showToast=function(e,t){clearTimeout(h);var n=o.getElementById("toast");if(!n)return;n.className="",n.classList.add("toast");var r=n.querySelector(".alert-msg");e.message?r.style.display="block":r.style.display="none";var i=n.querySelector(".close-btn"),a=function(){return function(){n.classList.remove("show"),n.classList.add("dismiss")}}();s(n.querySelectorAll("[tc-data-model]"),e),n.classList.add("show"),n.classList.remove("dismiss"),n.classList.add(t),i.onclick=a,h=setTimeout(a,8e3)},t.trimDate=function(e){return e?e.substring(0,e.length-5).trim():null},t.storeToken=function(e){m.authenticationToken=e},t.clearToken=function(){m.clear()},t.getToken=function(){if("undefined"!=typeof Storage&&m.authenticationToken)return m.authenticationToken;return null},t.gotoUrl=function(e){window.location.replace(e)},t.showLoadingAnim=function(e,t){var n=e.children,r="hidden",o="0";"remove"===t&&(r="visible",o="1");for(var u=0;u<n.length;u+=1){var l=n[u];l.style.visibility=r,l.style.opacity=o}"remove"===t?e.removeChild(e.querySelector("#loading")):e.appendChild(a(i.loadingButtonTemplate))},t.validateForm=function(e){for(var t=!0,n=e.querySelectorAll("input"),r=n.length-1;r>=0;r-=1){var i=n[r],o=i.value;"password"!==i.type&&(o=o.trim()),""===o&&(i.className+=" invalid",t=!1,p("Input Field(s) cannot be empty","error"),i.focus(),i.oninput=function(e){e.target.classList.remove("invalid")})}return t},t.matchPassword=function(e){var t=!0,n=e.querySelector("#match-password");if(n){var r=e.querySelector("#password");n.value!==r.value&&(p("Please input a matching password","error"),t=!1)}return t};var i=n(2),o=t.DOMDoc=document;t.windowInterface=window;function a(e){var t=o.createElement("template");return t.innerHTML=e.trim(),t.content.firstChild}function u(e,t){for(var n=t.split("."),i=e;n.length;){var o=n.shift().trim();if(!("object"===(void 0===i?"undefined":r(i))&&o in i))return null;i=i[o]}return i}function l(e,t){var n=e,r=u(t,n.getAttribute("tc-data-model"));0===r&&(r="0"),"INPUT"===n.nodeName||"SELECT"===n.nodeName||"TEXTAREA"===n.nodeName?n.value=r||"":n.innerHTML=r}function s(e,t){if(t)for(var n=0;n<e.length;n+=1)l(e[n],t)}function d(e,t){return e.test(t)}function c(e){return function(t,n){return u(e,n)}}var f=null;function v(){clearTimeout(f)}function p(e,t){v();var n=o.getElementById("alert");if(n){n.className="",n.classList.add("alert"),n.classList.add(t);var r=n.querySelector(".alert-msg"),i=n.querySelector(".close-btn"),a=function(){return function(){n.style.display="none"}}();r.innerHTML=e,n.style.display="block",i.onclick=a,f=setTimeout(a,8e3)}}var h=null;var m=localStorage},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.modalBoxTemplate='\n<div id="modal-box" class="modal">\n    <div class="modal-content"></div>\n</div>',t.deleteDialogTemple='\n        <div class="modal-header">\n            <span class="modal-header-title" role="heading">\n                Confirm Delete\n            </span>\n            <span tc-data-dismiss="modal"  class="action-btn close" role="button" tabindex="0" aria-label="Close"></span>\n        </div>\n        <div tc-data-model="message" class="modal-body">This action delete entry from database. Are you sure you want to continue?\n        </div>\n        <div class="modal-footer">\n            <button tc-data-action="ok" name="ok" class="btn-ok">OK</button>\n            <button tc-data-dismiss="cancel"  name="cancel">Cancel</button>\n        </div>',t.entryListPageTemplate='\n  <div class="main">   \n    <div id="navbar"></div>\n    <div id="entries" class="entries-container">\n      <div>\n        <div class="header">\n            <span class="title">Your Diary Entries</span>\n            <div class="add-entry">\n                <a id="addEntry" title="Add Entry" class="btn create add-btn-js" role="button">Add Diary Entry</a>\n            </div>\n        </div>\n        <div id="paginationTop"></div>\n      </div>\n      <div class="entry-list"></div>   \n        <div id="paginationBottom"></div>   \n      <a id="floatBtn" class=" add-btn-js" title="Add Entry" role="button">\n        <div class="floating-button show-on-mobile">\n            <span title="Add Entry" role="button" class="plus">&plus;</span>\n        </div>\n      </a>\n    </div>\n    <div id="footer"></div> \n  </div>\n',t.entryListHeader='\n        <div>\n          <div class="header">\n              <span class="title">Your Diary Entries</span>\n              <div class="add-entry">\n                  <a id="addEntry" title="Add Entry" class="btn create" role="button">Add Diary Entry</a>\n              </div>\n          </div>\n          <div id="pagination"></div>\n        </div>',t.entryListItemTemplate='\n            <div class="entry">\n                <p class="title" tc-data-model="title"></p>\n                <div class="content line-clamp">\n                    <p class="block-with-text" tc-data-model="content"></p>\n                </div>\n                <div class="footer">\n                    <div>\n                        <span>Last Modified:</span>&nbsp;\n                        <span tc-data-model="lastModified"></span>\n                    </div>\n                    <div class="dropdown">\n                        <a data-index="" tc-data-action="dropdown-toggle"\n                           class="dropdown-toggle-icon"></a>\n                        <ul class="dropdown-menu">\n                            <li><a tc-data-action="view">View</a></li>\n                            <li><a tc-data-action="edit">Edit</a></li>\n                            <li><a tc-data-action="delete">Delete</a></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>',t.createEntryTemplate='       \n    <div class="flexbox-parent scrollable">\n      <div id="alert" class="alert error">\n          <p class="alert-msg"></p>\n          <a href="javascript:void(0);" class="close-btn">&times;</a>\n      </div>\n      <div class="modal-header">\n          <div id="modal-header-title">\n              <p tc-data-model="lastModified"></p>\n              <input tc-data-model="title" placeholder="Title" class="form-input modal-header-input">\n              \x3c!--<span tc-data-model="title" class="modal-header-title"></span>--\x3e\n          </div>\n          <span tc-data-dismiss="modal" class="action-btn close" role="button" tabindex="0" aria-label="Close"></span>\n      </div>\n      <div class="grow-body modal-body">\n          <div class="create-entry">\n              <textarea placeholder="Dear Diary, " id="entry" autofocus></textarea>\n          </div>\n      </div>\n      <div class="modal-footer">\n        <button tc-data-action="save" type="button" class="btn-save">Save</button>\n        <button tc-data-dismiss="cancel" type="button" class="btn-cancel">Cancel</button>\n    </div>\n    </div>\n',t.viewEntryTemplate='\n     <div  class="scrollable">                \n        <div class="modal-header">\n            <div id="modal-header-title">\n                <p tc-data-model="lastModified"></p>\n                <span tc-data-model="title" class="modal-header-title"></span>\n            </div>\n            <span tc-data-dismiss="modal"  class="action-btn close" role="button" tabindex="0" aria-label="Close"></span>\n        </div>               \n        <div class="grow-body modal-body"> \n            <div class="content-container"></div>                \n        </div>  \n     </div>\n',t.loadingTemplate='\n    <div id="loader" class="center-in-page loading-bg">\n        <div class="loading-ring">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    </div>',t.emptyListTemple='<div class="empty-list"><span>No Entry</span></div>',t.navbarHeaderTemplate=' \n    <div>\n      <div class="nav-container">\n          <header class="nav-header">\n          <a class="navicon">\n            <svg xmlns="http://www.w3.org/2000/svg" width="23" height="19" viewBox="0 0 23 19">\n                      <g fill="none">\n                          <g fill="#555">\n                              <rect y="16" width="23" height="3" rx="1.5"></rect>\n                              <rect width="23" height="3" rx="1.5"></rect>\n                              <rect y="8" width="23" height="3" rx="1.5"></rect>\n                          </g>\n                      </g>\n                  </svg>\n          </a>\n          <a href="#/" class="header-logo">\n              <span class="logo-img"></span>            \n          </a>\n          <div class="nav">\n              <ul class="logged-in">\n                  <li>\n                      <a href="#/dashboard">Dashboard</a>\n                  </li>\n                  <li>\n                      <a href="#/profile">Profile</a>\n                  </li>\n                  <li>\n                      <a class="logout-js">Logout</a>\n                  </li>\n              </ul>\n              <ul class="logged-out">\n                  <li>\n                      <a href="#/signin">Sign In</a>\n                  </li>\n                  <li>\n                      <a class="btn signup" href="#/signup">Sign Up</a>\n                  </li>\n              </ul>            \n          </div>\n      </header>     \n      </div>\n      <div class="side-nav">\n        <div class="nav">\n            <span tc-data-dismiss="side-nav"  class="action-btn close" role="button" tabindex="0" aria-label="Close"></span>\n            <ul class="logged-in">\n                <li>\n                    <a href="#/dashboard">Dashboard</a>\n                </li>\n                <li>\n                    <a href="#/profile">Profile</a>\n                </li>\n                <li>\n                    <a class="logout-js">Logout</a>\n                </li>\n            </ul>\n            <ul class="logged-out" style="display: none;">\n                <li>\n                    <a href="#/signin">Sign In</a>\n                </li>\n                <li>\n                    <a href="#/signup">Sign Up</a>\n                </li>\n            </ul>\n        </div>\n    </div>\n    </div>\n',t.floatingButton='\n    <a id="floatBtn" title="Add Entry" role="button">\n      <div class="floating-button show-on-mobile">\n          <span title="Add Entry" role="button" class="plus">&plus;</span>\n      </div>\n    </a>',t.loadingButtonTemplate='\n    <div id="loading" class="loading-ball-container">     \n        <span class="loading-ball">\n       <span></span>\n       <span></span>\n       <span></span>\n     </span>\n    </div>\n',t.signInPageTemplate='\n    <div class="bg bgimg-1">\n          <div class="overlay">\n              <div class="container signin-top">\n                  <div class="card form-container signin">\n                      <div class="form-login-header">\n                          <a href="#/"><img class="logo" src="images/logo-preview.gif"></a>\n                      </div>\n                      <form method="post" id="signinForm" name="signinForm">\n                          <div class="form-title">\n                              <span>Welcome, please sign in</span>\n                          </div>\n                          <hr>\n                          <div>\n                              <div id="alert" class="alert error">\n                                  <p class="alert-msg"></p>\n                                  <a href="javascript:void(0);" class="close-btn">&times;</a>\n                              </div>\n                              <label for="email"><b>Username</b></label>\n                              <input class="form-input" id="email" type="email" placeholder="Enter Email" name="email"\n                                     required>\n  \n                              <label for="password"><b>Password</b></label>\n                              <input class="form-input" id="password" type="password" placeholder="Enter Password"\n                                     name="password"\n                                     required>\n                              <button class="btn fit" type="button">                          \n                                  <span>Login</span>\n                              </button>\n                          </div>\n                          <div class="form-footer">\n                              <p>Don\'t have an account? <a href="#/signup">Sign up</a>.</p>\n                          </div>\n                      </form>\n                  </div>\n              </div>\n              <div id="footer" class="fixed-bottom white"></div> \n          </div>\n      </div>\n',t.signUpPageTemplate='\n    <div class="bg bgimg-1">\n          <div class="overlay">\n            <div class="container signin-top">\n                <div class="form-container card">\n                    <form method="post" id="signupForm" name="signupForm">\n                        <div class="form-title">\n                            <span>Create Account</span>\n                        </div>\n                        <hr>\n                        <div>\n                            <div id="alert" class="alert error">\n                                <p class="alert-msg">Alert Message</p>\n                                <a href="javascript:void(0);" class="close-btn">&times;</a>\n                            </div>\n                            <div class="row-col-2">\n                                <div>\n                                    <label for="first_name"><b>First name</b></label>\n                                    <input class="form-input" id="first_name" type="text" placeholder="First name"\n                                           name="firstName"\n                                           required>\n                                </div>\n                                <div>\n                                    <label for="last_name"><b>Last name</b></label>\n                                    <input class="form-input" id="last_name" type="text" placeholder="Last name"\n                                           name="lastName"\n                                           required>\n                                </div>\n                            </div>\n                            <label for="email"><b>Email</b></label>\n                            <input class="form-input" id="email" type="email" placeholder="Enter Email" name="email"\n                                   required>\n                            <label for="password"><b>Password</b></label>\n                            <input class="form-input" id="password" type="password" placeholder="Enter Password"\n                                   name="password"\n                                   required>\n                            <label for="match-password"><b>Confirm Password</b></label>\n                            <input class="form-input" id="match-password" type="password" placeholder="Confirm Password"\n                                   name="match-password" required>\n                            <hr>\n                            <button type="button" class="btn fit"><span>Register</span></button>\n                        </div>\n                        <div class="form-footer">\n                            <p>Already have an account? <a href="#/signin">Sign in</a>.</p>\n                        </div>\n                    </form>\n                </div>\n            </div>\n            <div id="footer" class="fixed-bottom white"></div>\n          </div> \n      </div>\n',t.homeTemplate=' \n <div>    \n    <div id="navbar"></div>\n    <div class="bg bgimg navbar-top-padding fade-in">\n        <div class="overlay">\n        <div class="about left">\n            <h1>MyDiary</h1>\n            <p>MyDiary is an online personal journal where users can pen down their thoughts and feelings, it\'s simple and convenient in use.</p>\n            <div>\n                <a class="btn get-started" href="#/signup">\n                    Get Started\n                </a>\n            </div>\n            <div class="show-on-mobile">\n                <a class="btn signin " href="#/signin">Sign In</a>\n            </div>\n        </div>\n    </div>\n    </div>\n    <div id="footer" class="fixed-bottom white"></div> \n </div>\n',t.profilePageTemplate=' \n    <div>     \n        <div id="navbar"></div>\n        <div class="main">        \n            <div class="container">\n          <div id="entrySummary" class="entry-summary">\n              <ul>\n                  <li>Total Entries: <span tc-data-model="count"></span></li>\n                  <li>Last Update: <span tc-data-model="lastModified"></span></li>\n              </ul>\n          </div>\n          <div class="section">\n              <section id="reminder">\n                  <div class="section-title">\n                      <span>Reminder Settings</span>\n                  </div>\n                  <hr>\n                  <div class="section-content">\n                      <form id="reminderForm" name="reminderForm">\n                          <div>\n                              <div class="sub-title">\n                                  <span>Set daily reminder</span>\n                              </div>\n                              <div class="row-col-2">\n                                  <div>\n                                      <label>\n                                          FROM\n                                          <select tc-data-model="from" class="form-input" id="from"\n                                                  name="from" required>\n                                              <option disabled selected>From</option>\n                                              <option value="MONDAY">Monday</option>\n                                              <option value="TUESDAY">Tuesday</option>\n                                              <option value="WEDNESDAY">Wednesday</option>\n                                              <option value="THURSDAY">Thursday</option>\n                                              <option value="FRIDAY">Friday</option>\n                                              <option value="SATURDAY">Saturday</option>\n                                              <option value="SUNDAY">Sunday</option>\n                                          </select>\n                                      </label>\n                                  </div>\n                                  <div>\n                                      <label>\n                                          TO\n                                          <select tc-data-model="to" class="form-input" id="to"\n                                                  name="to" required>\n                                              <option disabled selected>To</option>\n                                              <option value="MONDAY">Monday</option>\n                                              <option value="TUESDAY">Tuesday</option>\n                                              <option value="WEDNESDAY">Wednesday</option>\n                                              <option value="THURSDAY">Thursday</option>\n                                              <option value="FRIDAY">Friday</option>\n                                              <option value="SATURDAY">Saturday</option>\n                                              <option value="SUNDAY">Sunday</option>\n                                          </select>\n                                      </label>\n                                  </div>\n                              </div>\n                              <div>\n                                  <label class="show-on-mobile">TIME</label>\n                                  <div id="timeSwitcher"></div>\n                              </div>\n                              <div class="btn-container">\n                                  <button tc-data-action="reminder" type="button" class="btn right"><span> Update Reminder</span></button>\n                              </div>\n                          </div>\n                      </form>\n                  </div>\n              </section>\n              <section id="profile">\n                  <div class="section-title">\n                      <span>Manage Profile</span>\n                  </div>\n                  <hr>\n                  <div class="section-content">\n                      <form id="updateProfile" name="updateProfile">\n                          <div>\n                              <div class="row-col-2">\n                                  <div>\n                                      <label for="first_name"><b>First name</b></label>\n                                      <input tc-data-model="firstName" class="form-input" id="first_name" type="text"\n                                             placeholder="First name"\n                                             name="firstName"\n                                             required>\n                                  </div>\n                                  <div>\n                                      <label for="last_name"><b>Last name</b></label>\n                                      <input tc-data-model="lastName" class="form-input" id="last_name" type="text"\n                                             placeholder="Last name"\n                                             name="lastName"\n                                             required>\n                                  </div>\n                              </div>\n                              <label for="email"><b>Email</b></label>\n                              <input tc-data-model="email" class="form-input" id="email" type="email"\n                                     placeholder="Enter Email" name="email"\n                                     required>\n                              <div class="btn-container">\n                                  <button tc-data-action="update-profile" type="button" class="btn right"><span>Update Profile</span></button>\n                              </div>\n                          </div>\n                      </form>\n                  </div>\n              </section>  \n              <section id="changePassword">\n                  <div class="section-title">\n                      <span>Change Password</span>\n                  </div>\n                  <hr>\n                  <div class="section-content">\n                      <form id="changePasswordForm">\n                          <label for="password"><b>Old Password</b></label>\n                          <input class="form-input" id="prev-password" type="password" placeholder="Old Password"\n                                 name="oldPassword"\n                                 required>\n                          <label for="password"><b>New Password</b></label>\n                          <input class="form-input" id="password" type="password" placeholder="New Password"\n                                 name="newPassword"\n                                 required>\n                          <label for="match-password"><b>Confirm Password</b></label>\n                          <input class="form-input" id="match-password" type="password" placeholder="Confirm Password"\n                                 name="matchPassword" required>\n                          <div class="btn-container">\n                              <button tc-data-action="change-password" type="button" class="btn right"><span>Change Password</span> \n                              </button>\n                          </div>\n                      </form>\n                  </div>\n              </section>\n          </div>\n        </div>\n        </div>\n        <div id="footer"></div> \n    </div>\n',t.notFoundTemplate='\n  <div>\n    <div id="navbar"></div>    \n    <div class="center-in-page">\n        <div class="page-404">\n            <div>Page Not Found</div>\n        </div>\n    </div>\n    <div id="footer" class="fixed-bottom"></div> \n  </div>\n',t.footerTemplate='\n    <div class="page-footer">\n        <div>&copy; 2018 MyDiary </div>\n    </div>',t.paginationTopTemplate='\n    <div class="pagination-container">\n  <div tc-data-page-index="page">\n    <span tc-data-model="visibleEntries"></span>\n    &nbsp;<span>of</span> &nbsp;\n    <span tc-data-model="totalEntries"></span>\n  </div>\n  <div class="pagination">\n    <a data-direction="prev">❮</a>\n    <a data-direction="next">❯</a>\n  </div>\n</div>',t.paginationBottomTemplate='\n    <div class="center">\n    <div class="pagination">\n        <a data-direction="prev">❮</a>\n        <a tc-data-model="page" class="disable">0</a>\n        <a data-direction="next">❯</a>\n    </div>\n</div>\n',t.timeSwitcherTemplate='\n    <div class="time-spinner">\n    <input name="hours" tc-data-model="hours" id="hours" type="number" class="time-input hours" data-unit="hours"\n           placeholder="HH" autocomplete="off">\n    <span class="time-delimiter">&colon;</span>\n    <input name="minutes" tc-data-model="minutes" id="minutes" type="number" class="time-input minutes" placeholder="MM"\n           data-unit="minutes" autocomplete="off">\n    <div class="time-controller">\n        <span class="time-controller-btn up" data-direction="up"></span>\n        <span class="time-controller-btn down" data-direction="down"></span>\n    </div>\n</div>\n'},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var i=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.sender=t,this.listeners=[]}return r(e,[{key:"attach",value:function(){return function(e){this.listeners.push(e)}}()},{key:"notify",value:function(){return function(e){var t=void 0;for(t=0;t<this.listeners.length;t+=1)this.listeners[t](this.sender,e)}}()}]),e}();t.default=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.modalService=t.loginService=t.account=t.apiRequest=t.http=void 0;var r=l(n(28)),i=l(n(29)),o=l(n(31)),a=l(n(32)),u=l(n(33));function l(e){return e&&e.__esModule?e:{default:e}}var s=t.http=new r.default,d=t.apiRequest=new i.default(s),c=t.account=new a.default(d);t.loginService=new o.default(c,s,d),t.modalService=new u.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=we(n(10)),i=we(n(17)),o=we(n(44)),a=we(n(45)),u=we(n(46)),l=we(n(47)),s=we(n(48)),d=we(n(49)),c=we(n(50)),f=we(n(51)),v=we(n(13)),p=we(n(52)),h=we(n(12)),m=we(n(53)),y=we(n(54)),g=we(n(55)),b=we(n(56)),w=we(n(57)),_=we(n(58)),E=we(n(59)),M=we(n(60)),S=we(n(20)),A=we(n(21)),P=we(n(61)),T=we(n(62)),k=we(n(63)),O=we(n(19)),C=we(n(64)),x=we(n(65)),F=we(n(22)),D=we(n(66)),R=we(n(67)),j=we(n(68)),$=we(n(69)),L=we(n(70)),I=we(n(71)),V=we(n(72)),N=we(n(73)),B=we(n(18)),q=we(n(74)),U=we(n(75)),H=we(n(76)),Z=we(n(77)),G=we(n(78)),z=we(n(79)),K=we(n(80)),Y=we(n(81)),W=we(n(82)),J=we(n(83)),X=we(n(84)),Q=we(n(85)),ee=we(n(86)),te=we(n(87)),ne=we(n(88)),re=we(n(89)),ie=we(n(90)),oe=we(n(91)),ae=we(n(92)),ue=n(93),le=we(ue),se=we(n(23)),de=we(n(24)),ce=we(n(94)),fe=we(n(95)),ve=we(n(96)),pe=we(n(97)),he=we(n(98)),me=we(n(25)),ye=we(n(99)),ge=we(n(100)),be=we(n(11));function we(e){return e&&e.__esModule?e:{default:e}}var _e={version:"10.4.0",toDate:r.default,toFloat:i.default,toInt:o.default,toBoolean:a.default,equals:u.default,contains:l.default,matches:s.default,isEmail:d.default,isURL:c.default,isMACAddress:f.default,isIP:v.default,isIPRange:p.default,isFQDN:h.default,isBoolean:m.default,isAlpha:y.default,isAlphanumeric:g.default,isNumeric:b.default,isPort:w.default,isLowercase:_.default,isUppercase:E.default,isAscii:M.default,isFullWidth:S.default,isHalfWidth:A.default,isVariableWidth:P.default,isMultibyte:T.default,isSurrogatePair:k.default,isInt:O.default,isFloat:C.default,isDecimal:x.default,isHexadecimal:F.default,isDivisibleBy:D.default,isHexColor:R.default,isISRC:j.default,isMD5:$.default,isHash:L.default,isJSON:I.default,isEmpty:V.default,isLength:N.default,isByteLength:B.default,isUUID:q.default,isMongoId:U.default,isAfter:H.default,isBefore:Z.default,isIn:G.default,isCreditCard:z.default,isISIN:K.default,isISBN:Y.default,isISSN:W.default,isMobilePhone:J.default,isPostalCode:le.default,isPostalCodeLocales:ue.locales,isCurrency:X.default,isISO8601:Q.default,isRFC3339:ee.default,isISO31661Alpha2:te.default,isISO31661Alpha3:ne.default,isBase64:re.default,isDataURI:ie.default,isMimeType:oe.default,isLatLong:ae.default,ltrim:se.default,rtrim:de.default,trim:ce.default,escape:fe.default,unescape:ve.default,stripLow:pe.default,whitelist:he.default,blacklist:me.default,isWhitelisted:ye.default,normalizeEmail:ge.default,toString:be.default};t.default=_e,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments[1];for(var n in t)void 0===e[n]&&(e[n]=t[n]);return e},e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),o=n(2);var a=new(function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.viewElement=null,this.childView=(0,i.htmlToElement)(o.footerTemplate)}return r(e,[{key:"render",value:function(){return function(e){this.viewElement=e?e.querySelector("#footer"):i.DOMDoc.getElementById("footer"),this.viewElement&&this.viewElement.appendChild(this.childView)}}()},{key:"initialize",value:function(){return function(){this.render()}}()},{key:"getViewElement",value:function(){return function(){return this.childView}}()}]),e}());t.default=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),o=n(2),a=n(4);var u=new(function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.viewElement=null,this.childView=(0,i.htmlToElement)(o.navbarHeaderTemplate)}return r(e,null,[{key:"logoutHandle",value:function(){return function(){a.loginService.logout(),(0,i.gotoUrl)("#/")}}()}]),r(e,[{key:"init",value:function(){return function(){var t=this,n=this.childView.querySelectorAll(".logout-js");n[0].onclick=e.logoutHandle,n[1].onclick=e.logoutHandle,this.childView.querySelector('[tc-data-dismiss="side-nav"]').onclick=function(){t.hideOrShowSideNav("hide")},this.childView.querySelector(".navicon").onclick=function(){t.hideOrShowSideNav("show")},this.childView.querySelector(".side-nav").onclick=function(e){e.target.classList.contains("nav")||t.hideOrShowSideNav("hide")}}}()},{key:"render",value:function(){return function(e){if(this.viewElement=e?e.querySelector("#navbar"):i.DOMDoc.getElementById("navbar"),this.viewElement){this.childView.style.display="flex";var t=this.childView.querySelectorAll(".logged-out"),n=this.childView.querySelectorAll(".logged-in");a.account.isAuthenticated()?(n[0].style.display="flex",t[0].style.display="none",n[1].style.display="block",t[1].style.display="none"):(n[0].style.display="none",t[0].style.display="flex",n[1].style.display="none",t[1].style.display="block"),this.viewElement.innerHTML="",this.viewElement.appendChild(this.childView)}}}()},{key:"hideOrShowSideNav",value:function(){return function(e){var t=this.childView.querySelector(".side-nav"),n=t.querySelector(".nav");"hide"===e?(t.style.width="0",n.style.width="0"):(t.style.width="100vw",n.style.width="250px")}}()},{key:"initialize",value:function(){return function(){this.render()}}()},{key:"getViewElement",value:function(){return function(){return this.childView}}()}]),e}());u.init(),t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});for(var r,i=t.alpha={"en-US":/^[A-Z]+$/i,"bg-BG":/^[А-Я]+$/i,"cs-CZ":/^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,"da-DK":/^[A-ZÆØÅ]+$/i,"de-DE":/^[A-ZÄÖÜß]+$/i,"el-GR":/^[Α-ω]+$/i,"es-ES":/^[A-ZÁÉÍÑÓÚÜ]+$/i,"fr-FR":/^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,"it-IT":/^[A-ZÀÉÈÌÎÓÒÙ]+$/i,"nb-NO":/^[A-ZÆØÅ]+$/i,"nl-NL":/^[A-ZÁÉËÏÓÖÜÚ]+$/i,"nn-NO":/^[A-ZÆØÅ]+$/i,"hu-HU":/^[A-ZÁÉÍÓÖŐÚÜŰ]+$/i,"pl-PL":/^[A-ZĄĆĘŚŁŃÓŻŹ]+$/i,"pt-PT":/^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]+$/i,"ru-RU":/^[А-ЯЁ]+$/i,"sk-SK":/^[A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,"sr-RS@latin":/^[A-ZČĆŽŠĐ]+$/i,"sr-RS":/^[А-ЯЂЈЉЊЋЏ]+$/i,"sv-SE":/^[A-ZÅÄÖ]+$/i,"tr-TR":/^[A-ZÇĞİıÖŞÜ]+$/i,"uk-UA":/^[А-ЩЬЮЯЄIЇҐі]+$/i,ar:/^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/},o=t.alphanumeric={"en-US":/^[0-9A-Z]+$/i,"bg-BG":/^[0-9А-Я]+$/i,"cs-CZ":/^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,"da-DK":/^[0-9A-ZÆØÅ]+$/i,"de-DE":/^[0-9A-ZÄÖÜß]+$/i,"el-GR":/^[0-9Α-ω]+$/i,"es-ES":/^[0-9A-ZÁÉÍÑÓÚÜ]+$/i,"fr-FR":/^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,"it-IT":/^[0-9A-ZÀÉÈÌÎÓÒÙ]+$/i,"hu-HU":/^[0-9A-ZÁÉÍÓÖŐÚÜŰ]+$/i,"nb-NO":/^[0-9A-ZÆØÅ]+$/i,"nl-NL":/^[0-9A-ZÁÉËÏÓÖÜÚ]+$/i,"nn-NO":/^[0-9A-ZÆØÅ]+$/i,"pl-PL":/^[0-9A-ZĄĆĘŚŁŃÓŻŹ]+$/i,"pt-PT":/^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]+$/i,"ru-RU":/^[0-9А-ЯЁ]+$/i,"sk-SK":/^[0-9A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,"sr-RS@latin":/^[0-9A-ZČĆŽŠĐ]+$/i,"sr-RS":/^[0-9А-ЯЂЈЉЊЋЏ]+$/i,"sv-SE":/^[0-9A-ZÅÄÖ]+$/i,"tr-TR":/^[0-9A-ZÇĞİıÖŞÜ]+$/i,"uk-UA":/^[0-9А-ЩЬЮЯЄIЇҐі]+$/i,ar:/^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/},a=t.decimal={"en-US":".",ar:"٫"},u=t.englishLocales=["AU","GB","HK","IN","NZ","ZA","ZM"],l=0;l<u.length;l++)i[r="en-"+u[l]]=i["en-US"],o[r]=o["en-US"],a[r]=a["en-US"];for(var s,d=t.arabicLocales=["AE","BH","DZ","EG","IQ","JO","KW","LB","LY","MA","QM","QA","SA","SD","SY","TN","YE"],c=0;c<d.length;c++)i[s="ar-"+d[c]]=i.ar,o[s]=o.ar,a[s]=a.ar;for(var f=t.dotDecimal=[],v=t.commaDecimal=["bg-BG","cs-CZ","da-DK","de-DE","el-GR","es-ES","fr-FR","it-IT","hu-HU","nb-NO","nn-NO","nl-NL","pl-Pl","pt-PT","ru-RU","sr-RS@latin","sr-RS","sv-SE","tr-TR","uk-UA"],p=0;p<f.length;p++)a[f[p]]=a["en-US"];for(var h=0;h<v.length;h++)a[v[h]]=",";i["pt-BR"]=i["pt-PT"],o["pt-BR"]=o["pt-PT"],a["pt-BR"]=a["pt-PT"]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),e=Date.parse(e),isNaN(e)?null:new Date(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t.default=function(e){"object"===(void 0===e?"undefined":r(e))&&null!==e?e="function"==typeof e.toString?e.toString():"[object Object]":(null===e||void 0===e||isNaN(e)&&!e.length)&&(e="");return String(e)},e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){(0,r.default)(e),(t=(0,i.default)(t,a)).allow_trailing_dot&&"."===e[e.length-1]&&(e=e.substring(0,e.length-1));for(var n=e.split("."),o=0;o<n.length;o++)if(n[o].length>63)return!1;if(t.require_tld){var u=n.pop();if(!n.length||!/^([a-z\u00a1-\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(u))return!1;if(/[\s\u2002-\u200B\u202F\u205F\u3000\uFEFF\uDB40\uDC20]/.test(u))return!1}for(var l,s=0;s<n.length;s++){if(l=n[s],t.allow_underscores&&(l=l.replace(/_/g,"")),!/^[a-z\u00a1-\uffff0-9-]+$/i.test(l))return!1;if(/[\uff01-\uff5e]/.test(l))return!1;if("-"===l[0]||"-"===l[l.length-1])return!1}return!0};var r=o(n(0)),i=o(n(6));function o(e){return e&&e.__esModule?e:{default:e}}var a={require_tld:!0,allow_underscores:!1,allow_trailing_dot:!1};e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";(0,r.default)(t);n=String(n);if(!n)return e(t,4)||e(t,6);if("4"===n){if(!i.test(t))return!1;var a=t.split(".").sort(function(e,t){return e-t});return a[3]<=255}if("6"===n){var u=t.split(":"),l=!1,s=e(u[u.length-1],4),d=s?7:8;if(u.length>d)return!1;if("::"===t)return!0;"::"===t.substr(0,2)?(u.shift(),u.shift(),l=!0):"::"===t.substr(t.length-2)&&(u.pop(),u.pop(),l=!0);for(var c=0;c<u.length;++c)if(""===u[c]&&c>0&&c<u.length-1){if(l)return!1;l=!0}else if(s&&c===u.length-1);else if(!o.test(u[c]))return!1;return l?u.length>=1:u.length===d}return!1};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})$/,o=/^[0-9A-F]{1,4}$/i;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(e){return e&&e.__esModule?e:{default:e}}(n(3));var i=function(){return function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.valueChangeObserver=new r.default(null),Object.keys(t).forEach(function(e){var t=void 0;Object.defineProperty(n,e,{set:function(e){t=e,this.valueChangeObserver.notify()},get:function(){return t},enumerable:!0})}),Object.keys(t).forEach(function(e){n[e]=t[e]})}}();t.default=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),o=n(2);var a=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.childView=(0,i.htmlToElement)(o.loadingTemplate)}return r(e,[{key:"getViewElement",value:function(){return function(){return this.childView}}()}]),e}();t.default=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),o=u(n(7)),a=u(n(8));function u(e){return e&&e.__esModule?e:{default:e}}var l=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.template=t,this.viewElement=(0,i.htmlToElement)(t),a.default.render(this.viewElement),o.default.render(this.viewElement),this.registerPageEvent()}return r(e,[{key:"registerPageEvent",value:function(){return function(){throw new Error}}()},{key:"getViewElement",value:function(){return function(){return this.viewElement}}()}]),e}();t.default=l},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),parseFloat(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t.default=function(e,t){(0,i.default)(e);var n=void 0,o=void 0;"object"===(void 0===t?"undefined":r(t))?(n=t.min||0,o=t.max):(n=arguments[1],o=arguments[2]);var a=encodeURI(e).split(/%..|./).length-1;return a>=n&&(void 0===o||a<=o)};var i=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){(0,r.default)(e);var n=(t=t||{}).hasOwnProperty("allow_leading_zeroes")&&!t.allow_leading_zeroes?i:o,a=!t.hasOwnProperty("min")||e>=t.min,u=!t.hasOwnProperty("max")||e<=t.max,l=!t.hasOwnProperty("lt")||e<t.lt,s=!t.hasOwnProperty("gt")||e>t.gt;return n.test(e)&&a&&u&&l&&s};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^(?:[-+]?(?:0|[1-9][0-9]*))$/,o=/^[-+]?[0-9]+$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.fullWidth=void 0,t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=t.fullWidth=/[^\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.halfWidth=void 0,t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=t.halfWidth=/[\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^[0-9A-F]+$/i;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){(0,r.default)(e);var n=t?new RegExp("^["+t+"]+","g"):/^\s+/g;return e.replace(n,"")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){(0,r.default)(e);for(var n=t?new RegExp("["+t+"]"):/\s/,i=e.length-1;i>=0&&n.test(e[i]);i--);return i<e.length?e.substr(0,i+1):e};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,r.default)(e),e.replace(new RegExp("["+t+"]+","g"),"")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=y(n(27)),a=y(n(15)),u=n(1),l=y(n(34)),s=y(n(35)),d=y(n(36)),c=y(n(38)),f=n(4),v=y(n(39)),p=y(n(40)),h=y(n(41)),m=y(n(102));function y(e){return e&&e.__esModule?e:{default:e}}function g(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var b=function(){function e(){g(this,e),this.viewElement=u.DOMDoc.getElementById("main"),this.currentController=null}return i(e,[{key:"addChild",value:function(){return function(e){null!=e&&this.viewElement.appendChild(e)}}()},{key:"removeChild",value:function(){return function(e){try{null!==e&&this.viewElement.removeChild(e)}catch(e){console.error(e.message)}}}()},{key:"removeAllChildren",value:function(){return function(){for(var e=this.viewElement.children,t=0;t<e.length;t+=1)this.removeChild(e[t])}}()},{key:"getViewElement",value:function(){return function(){return this.viewElement}}()}]),e}(),w=new(function(){function e(t){g(this,e),this.mainView=t;var n={Type:m.default,params:null},r={Type:h.default,params:[n]},i={Type:o.default,params:[r]};this.loadingView=new a.default,l.default.registerRoutes("/dashboard",i,!0),l.default.registerRoutes("/profile",d.default,!0),l.default.registerRoutes("/signin",s.default,!1),l.default.registerRoutes("/signup",v.default,!1),l.default.registerRoutes("/",c.default,!1),l.default.registerRoutes("*",p.default,!1)}return i(e,[{key:"route",value:function(){return function(){var e=this;return function(){var t=u.windowInterface.location.hash.slice(1)||"/",n=l.default.routes[t]||l.default.routes["*"];if(n&&n.controller){e.removeController(),e.mainView.addChild(e.loadingView.getViewElement());var r=n.controller,i=n.requireAuth,o=e.createInstant(r);f.account.identify().then(function(){e.renderView(o)}).catch(function(){i?(0,u.gotoUrl)("#/signin"):e.renderView(o)})}}}}()},{key:"removeController",value:function(){return function(){u.windowInterface.scrollTo(0,0),this.currentController&&this.currentController.onRemove&&this.currentController.onRemove(),this.mainView.removeAllChildren()}}()},{key:"renderView",value:function(){return function(e){var t=this;e.onReady?e.onReady.attach(function(){t.addViewToMainView(e)}):this.addViewToMainView(e),e.initialize&&e.initialize(),this.currentController=e}}()},{key:"addViewToMainView",value:function(){return function(e){this.mainView.removeAllChildren(),this.mainView.addChild(e.getViewElement())}}()},{key:"getArguments",value:function(){return function(e){var t=this,n=[];if(!(e instanceof Array))throw Error("params must be an array ");return e.forEach(function(e){var i=null,o=void 0===e?"undefined":r(e);i="object"===o&&e.Type?t.createInstant(e):"function"===o?new e:e,n.push(i)}),n}}()},{key:"createInstant",value:function(){return function(e){var t=[],n=e.params,r=e.Type;return n&&(t=this.getArguments(n,t)),r&&"function"==typeof r?new(Function.prototype.bind.apply(r,[null].concat(function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(t)))):"function"==typeof e?new e:r||e}}()}]),e}())(new b);u.windowInterface.addEventListener("hashchange",w.route()),u.DOMDoc.addEventListener("DOMContentLoaded",w.route())},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),o=l(n(3)),a=l(n(14)),u=n(4);function l(e){return e&&e.__esModule?e:{default:e}}var s=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.page=1,this.size=10,this.entryListView=t,t.getPaginationView().onChangePage.attach(function(e,t){n.page=t.page,n.refreshEntriesList()}),t.refresh.attach(function(){n.refreshEntriesList()}),this.onReady=new o.default(this)}return r(e,[{key:"refreshEntriesList",value:function(){return function(){i.windowInterface.scrollTo(0,0),this.entryListView.onLoadEntries(),this.loadEntries({page:this.page,size:this.size})}}()},{key:"initialize",value:function(){return function(){this.loadEntries({page:this.page,size:this.size})}}()},{key:"loadEntries",value:function(){return function(e){var t=this,n=this.entryListView.getAdapter();u.apiRequest.getEntries(e).then(function(r){n.reset();for(var i=e.size,o=r.data,u=o.entries,l=o.page,s=o.totalEntries,d=[],c=0;c<u.length;c+=1)d.push(new a.default(u[c]));n.setPageInfo({page:l,totalEntries:s,size:i}),n.addItems(d),t.page=l,t.onReady.notify()}).catch(function(){t.onReady.notify()}),this.entryListView.render()}}()},{key:"getViewElement",value:function(){return function(){return this.entryListView.getViewElement()}}()},{key:"onRemove",value:function(){return function(){this.entryListView.onDestroy()}}()}]),e}();t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),o=function(e){return e&&e.__esModule?e:{default:e}}(n(3));var a=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.event=new o.default}return r(e,[{key:"request",value:function(){return function(e,t,n){var r=this,o={method:e,body:JSON.stringify(n),headers:{"Content-Type":"application/json"}};return(0,i.getToken)()&&(o.headers["X-Access-Token"]=(0,i.getToken)()),fetch(t,o).then(function(e){var t=e.status;if(401===t)return r.event.notify({});if(t<400||t>=600){var n=e.headers.get("X-Access-Token");return n&&(0,i.storeToken)(n),Promise.resolve(e)}return Promise.resolve(e.json()).then(function(e){return Promise.reject(new Error(e.message))})}).then(function(e){return e.json()})}}()},{key:"get",value:function(){return function(e,t){var n=encodeURIComponent,r="";t&&(r="?"+Object.keys(t).map(function(e){return n(e)+"="+n(t[e])}).join("&"));var i=""+e+r;return this.request("GET",i)}}()},{key:"post",value:function(){return function(e,t){return this.request("POST",e,t)}}()},{key:"put",value:function(){return function(e,t){return this.request("PUT",e,t)}}()},{key:"delete",value:function(){return function(e,t){return this.request("DELETE",e,t)}}()}]),e}();t.default=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(30);var o=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.httpClient=t}return r(e,[{key:"getUserDetails",value:function(){return function(){return this.httpClient.get(i.userProfileDetails)}}()},{key:"updateUserDetails",value:function(){return function(e){return this.httpClient.post(i.userProfile,e)}}()},{key:"changePassword",value:function(){return function(e){return this.httpClient.post(i.changePassword,e)}}()},{key:"updateReminder",value:function(){return function(e){return this.httpClient.put(i.reminderUrl,e)}}()},{key:"authenticateUser",value:function(){return function(e){return this.httpClient.post(i.authenticationEndpoint,e)}}()},{key:"createUser",value:function(){return function(e){return this.httpClient.post(i.registrationEndpoint,e)}}()},{key:"getEntries",value:function(){return function(e){return this.httpClient.get(i.entriesEndpoint,e)}}()},{key:"updateEntry",value:function(){return function(e,t){return this.httpClient.put((0,i.getEntryUrlByID)(e),t)}}()},{key:"createEntry",value:function(){return function(e){return this.httpClient.post(i.entriesEndpoint,e)}}()},{key:"deleteEntry",value:function(){return function(e){return this.httpClient.delete((0,i.getEntryUrlByID)(e))}}()}]),e}();t.default=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getEntryUrlByID=function(e){return a+"/"+e};var r=t.baseUrl="https://shielded-waters-94006.herokuapp.com",i=t.apiVersion="/api/v1",o=t.apiUrl=r+i,a=(t.userProfile=o+"/account",t.userProfileDetails=o+"/account/me/detailed",t.changePassword=o+"/account/change-password",t.reminderUrl=o+"/account/user/reminder/settings",t.registrationEndpoint=o+"/auth/signup",t.authenticationEndpoint=o+"/auth/login",t.entriesEndpoint=o+"/entries")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1);var o=function(){function e(t,n,r){var i=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.account=t,this.apiRequest=r,n.event.attach(function(){i.logout()})}return r(e,[{key:"logout",value:function(){return function(){(0,i.clearToken)(),this.account.authenticate(null)}}()},{key:"login",value:function(){return function(e){var t=this;return this.apiRequest.authenticateUser(e).then(function(e){return(0,i.storeToken)(e.token),t.account.identify(!0)})}}()}]),e}();t.default=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var i=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.apiRequest=t,this.account=null,this.authenticated=!1}return r(e,[{key:"authenticate",value:function(){return function(e){this.account=e,this.authenticated=null!==e}}()},{key:"identify",value:function(){return function(e){var t=this;return!0===e&&(this.account=void 0,this.authenticated=!1),this.account?Promise.resolve(this.account):this.apiRequest.getUserDetails().then(function(e){return t.account=e,t.authenticated=null!==t.account,Promise.resolve(t.account)})}}()},{key:"isAuthenticated",value:function(){return function(){return this.authenticated}}()}]),e}();t.default=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),o=n(2),a=function(e){return e&&e.__esModule?e:{default:e}}(n(3));function u(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var l=function(){function e(){u(this,e),this.childView=(0,i.htmlToElement)(o.modalBoxTemplate),this.onclickEvent=new a.default(this),this.onDismissEvent=new a.default(this);var t=this;this.childView.onclick=function(e){t.onclickEvent.notify(e)}}return r(e,[{key:"setContent",value:function(){return function(e){var t=this.childView.querySelector(".modal-content");t.innerHTML="",t.appendChild(e);for(var n=this,r=this.childView.querySelectorAll("[tc-data-dismiss]"),i=0;i<r.length;i+=1)r[i].onclick=function(){n.onDismissEvent.notify(),n.dismiss()}}}()},{key:"getViewElement",value:function(){return function(){return this.childView}}()},{key:"dismiss",value:function(){return function(){this.onDismissEvent.notify(),i.DOMDoc.body.removeChild(this.getViewElement())}}()}]),e}(),s=function(){function e(){u(this,e),this.modalVieew=new l}return r(e,[{key:"open",value:function(){return function(e){var t=e,n=this.modalVieew.getViewElement();n.style.display="block",t.modalView=this.modalVieew,this.modalVieew.setContent(t.getViewElement()),i.DOMDoc.body.appendChild(n)}}()},{key:"onDismiss",value:function(){return function(e){this.modalVieew.onDismissEvent.attach(e)}}()},{key:"getModalView",value:function(){return function(){return this.modalVieew}}()}]),e}();t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var i=new(function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.routes={}}return r(e,[{key:"registerRoutes",value:function(){return function(e,t,n){this.routes[e]={controller:t,requireAuth:n}}}()}]),e}());t.default=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),o=n(2),a=n(4),u=function(e){return e&&e.__esModule?e:{default:e}}(n(16));var l=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,o.signInPageTemplate))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,u["default"]),r(t,[{key:"registerPageEvent",value:function(){return function(){var e=this.viewElement.querySelector("#signinForm"),t=function(){var t=e.querySelector(".btn");if((0,i.validateForm)(e)){(0,i.showLoadingAnim)(t,"show");var n=(0,i.getFormFieldsAsObject)(e);a.loginService.login(n).then(function(){(0,i.gotoUrl)("#/dashboard")}).catch(function(){(0,i.showAlert)("Authentication Failed, check email or password","error")}).finally(function(){(0,i.showLoadingAnim)(t,"remove")})}};e&&(e.querySelector(".btn").onclick=t)}}()}]),t}();t.default=l},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){return function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,i=!1,o=void 0;try{for(var a,u=e[Symbol.iterator]();!(r=(a=u.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){i=!0,o=e}finally{try{!r&&u.return&&u.return()}finally{if(i)throw o}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(1),a=f(n(8)),u=n(4),l=n(2),s=f(n(3)),d=f(n(7)),c=f(n(37));function f(e){return e&&e.__esModule?e:{default:e}}var v=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.viewElement=(0,o.htmlToElement)(l.profilePageTemplate),this.timeSwitchView=new c.default,this.onReady=new s.default(this)}return i(e,null,[{key:"consumeAPIResult",value:function(){return function(e,t){t&&(0,o.showLoadingAnim)(t,"show"),e.then(function(e){(0,o.showToast)({title:e.message},"success"),u.account.identify(!0).then()}).catch(function(e){(0,o.showToast)({title:e.message},"error")}).finally(function(){t&&(0,o.showLoadingAnim)(t,"remove")})}}()}]),i(e,[{key:"bindProfile",value:function(){return function(e){if(!e)return null;var t=this.viewElement.querySelector("#profile").querySelectorAll("[tc-data-model]");return(0,o.bindPropertiesToElement)(t,e),t}}()},{key:"bindEntriesSummary",value:function(){return function(e){if(!e)return null;var t=e;t.lastModified=(0,o.trimDate)(t.lastModified);var n=this.viewElement.querySelector("#entrySummary").querySelectorAll("[tc-data-model]");return(0,o.bindPropertiesToElement)(n,e),n}}()},{key:"bindReminder",value:function(){return function(e){if(e.time){var t=e.time,n=e.from,i=e.to,a=t.split(":"),u=r(a,2),l={hours:u[0],minutes:u[1],from:n,to:i},s=this.viewElement.querySelector("#reminder").querySelectorAll("[tc-data-model]");(0,o.bindPropertiesToElement)(s,l),this.timeSwitchView.render(this.viewElement,l)}}}()},{key:"updatePasswordHandler",value:function(){return function(){var t=this;return function(n){n.preventDefault();var r=t.viewElement.querySelector("#changePassword"),i=(0,o.getFormFieldsAsObject)(r);i.newPassword===i.matchPassword?e.consumeAPIResult(u.apiRequest.changePassword(i),r.querySelector(".btn")):(0,o.showToast)({title:"Validation Error",message:"Password doesn't match"},"error")}}}()},{key:"updateReminderHandler",value:function(){return function(){var t=this;return function(n){n.preventDefault();var r=t.viewElement.querySelector("#reminderForm"),i=(0,o.getFormFieldsAsObject)(r);i.time=i.hours+":"+i.minutes,e.consumeAPIResult(u.apiRequest.updateReminder(i),r.querySelector(".btn"))}}}()},{key:"updateProfileHandler",value:function(){return function(){var t=this;return function(n){n.preventDefault();var r=t.viewElement.querySelector("#updateProfile"),i=(0,o.getFormFieldsAsObject)(r);e.consumeAPIResult(u.apiRequest.updateUserDetails(i),r.querySelector(".btn"))}}}()},{key:"registerPageEvent",value:function(){return function(){this.registerBtnHandler("changePassword",this.updatePasswordHandler()),this.registerBtnHandler("reminderForm",this.updateReminderHandler()),this.registerBtnHandler("updateProfile",this.updateProfileHandler())}}()},{key:"registerBtnHandler",value:function(){return function(e,t){this.viewElement.querySelector("#"+e).querySelector("[tc-data-action]").onclick=t}}()},{key:"initialize",value:function(){return function(){var e=this;this.timeSwitchView.initialize(),a.default.render(this.viewElement),d.default.render(this.viewElement),this.timeSwitchView.render(this.viewElement,null),u.account.identify().then(function(t){var n=t.data,r=n.user,i=n.reminder,o=n.entry;e.bindProfile(r),e.bindReminder(i),e.bindEntriesSummary(o),e.registerPageEvent(),e.onReady.notify({})}).catch(function(t){(0,o.showToast)({title:"Error",message:t.message},"error"),e.onReady.notify({})})}}()},{key:"render",value:function(){return function(){var e=o.DOMDoc.getElementById("main");e&&(e.appendChild(this.viewElement),this.initialize())}}()},{key:"getViewElement",value:function(){return function(){return this.viewElement}}()}]),e}();t.default=v},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),o=n(2);var a=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.viewElement=null,this.childView=(0,i.htmlToElement)(o.timeSwitcherTemplate)}return r(e,null,[{key:"padValue",value:function(){return function(e){var t=Number(e);return t>=0&&t<10&&(t="0"+t),t}}()},{key:"roundTime",value:function(){return function(e,t,n){var r=e;return r<t?r=t:r>n&&(r=n),r}}()},{key:"inputChangeHandler",value:function(){return function(t){var n=t.target,r=n.getAttribute("data-unit"),i=n.value;r&&"hours"===r?i=e.roundTime(i,0,23):r&&"minutes"===r&&(i=e.roundTime(i,0,59)),n.value=parseInt(i,10)}}()},{key:"blurHandler",value:function(){return function(t){var n=t.target,r=n.value;n.value=e.padValue(r)}}()},{key:"stepMinutesValue",value:function(){return function(e,t){var n=0;return e?("up"===e?n=this.calcUpStep(t,15):"down"===e&&(n=this.calcDownStep(t,15)),n):n}}()},{key:"calcDownStep",value:function(){return function(e,t){return e%t==0?e-t:t*parseInt(""+(0===e?60:e)/t,10)}}()},{key:"calcUpStep",value:function(){return function(e,t){return e%t==0?e+t:t*(parseInt(""+e/t,10)+1)}}()},{key:"roundAndPadValue",value:function(){return function(t){return t<0?23:t>23?"00":e.padValue(t)}}()}]),r(e,[{key:"getFocusedElement",value:function(){return function(){var e=this.viewElement.querySelector("#minutes"),t=this.viewElement.querySelector(".hasFocus");return t||(e.focus(),t=e),t}}()},{key:"minutesControlHandler",value:function(){return function(t){var n=this.viewElement.querySelector("#hours"),r=this.getFocusedElement(),i=t.getAttribute("data-direction"),o=e.stepMinutesValue(i,Number(r.value)),a=Number(n.value);o<=0?(r.value=59,a-=1,n.value=e.roundAndPadValue(a)):o>=60?(r.value="00",a+=1,n.value=e.roundAndPadValue(a)):r.value=e.padValue(o)}}()},{key:"hoursControlHandler",value:function(){return function(t){var n=t.getAttribute("data-direction"),r=this.getFocusedElement(),i=Number(r.value);n&&"down"===n?i-=1:n&&"up"===n&&(i+=1),r.value=e.roundAndPadValue(i)}}()},{key:"render",value:function(){return function(e,t){if(this.viewElement=e?e.querySelector("#timeSwitcher"):i.DOMDoc.getElementById("timeSwitcher"),this.viewElement){var n=this.childView.querySelectorAll("[tc-data-model]");(0,i.bindPropertiesToElement)(n,t),this.viewElement.innerHTML="",this.viewElement.appendChild(this.childView)}}}()},{key:"focusHandler",value:function(){return function(){var e=this;return function(t){var n=e.childView.querySelector("#hours"),r=e.childView.querySelector("#minutes"),i=t.target;r.classList.remove("hasFocus"),n.classList.remove("hasFocus"),i.classList.add("hasFocus")}}}()},{key:"controlHandler",value:function(){return function(){var e=this;return function(t){var n=t.target,r=e.getFocusedElement();"minutes"===r.id?e.minutesControlHandler(n):"hours"===r.id&&e.hoursControlHandler(n)}}}()},{key:"initialize",value:function(){return function(){var t=this.childView.querySelector("#hours"),n=this.childView.querySelector("#minutes");t.onkeyup=e.inputChangeHandler,t.onchange=e.inputChangeHandler,t.onpaste=e.inputChangeHandler,t.oncut=e.inputChangeHandler,n.onkeyup=e.inputChangeHandler,n.onchange=e.inputChangeHandler,n.onpaste=e.inputChangeHandler,n.oncut=e.inputChangeHandler,t.onblur=e.blurHandler,n.onblur=e.blurHandler,t.onfocus=this.focusHandler(),n.onfocus=this.focusHandler();for(var r=this.childView.querySelectorAll(".time-controller-btn"),i=0;i<r.length;i+=1)r[i].onclick=this.controlHandler()}}()}]),e}();t.default=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=d(n(8)),o=n(1),a=n(2),u=n(4),l=d(n(3)),s=d(n(7));function d(e){return e&&e.__esModule?e:{default:e}}var c=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.viewElement=null,this.onReady=new l.default(this)}return r(e,[{key:"render",value:function(){return function(){var e=o.DOMDoc.getElementById("main");e&&e.appendChild(this.viewElement)}}()},{key:"getViewElement",value:function(){return function(){return this.viewElement}}()},{key:"initialize",value:function(){return function(){var e=this;u.account.identify().then(function(){e.onReady.notify({}),(0,o.gotoUrl)("#/dashboard")}).catch(function(){e.viewElement=(0,o.htmlToElement)(a.homeTemplate),i.default.render(e.viewElement),s.default.render(e.viewElement),e.onReady.notify({})})}}()}]),e}();t.default=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),o=n(2),a=n(4),u=function(e){return e&&e.__esModule?e:{default:e}}(n(16));var l=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,o.signUpPageTemplate))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,u["default"]),r(t,[{key:"registerPageEvent",value:function(){return function(){var e=this.viewElement.querySelector("#signupForm"),t=function(){var t=e.querySelector(".btn");if((0,i.validateForm)(e)&&(0,i.matchPassword)(e)){(0,i.showLoadingAnim)(t,"show");var n=(0,i.getFormFieldsAsObject)(e);a.apiRequest.createUser(n).then(function(){(0,i.gotoUrl)("#/dashboard")}).catch(function(e){var t=e.message;(0,i.showAlert)("Registration Failed:<br>"+t,"error")}).finally(function(){(0,i.showLoadingAnim)(t,"remove")})}};e&&(e.querySelector(".btn").onclick=t)}}()}]),t}();t.default=l},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=l(n(8)),o=n(1),a=n(2),u=l(n(7));function l(e){return e&&e.__esModule?e:{default:e}}var s=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.viewElement=(0,o.htmlToElement)(a.notFoundTemplate)}return r(e,[{key:"initialize",value:function(){return function(){i.default.render(this.viewElement),u.default.render(this.viewElement)}}()},{key:"getViewElement",value:function(){return function(){return this.viewElement}}()}]),e}();t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(4),o=n(1),a=n(2),u=h(n(3)),l=h(n(42)),s=h(n(43)),d=h(n(101)),c=h(n(14)),f=h(n(8)),v=h(n(7)),p=h(n(15));function h(e){return e&&e.__esModule?e:{default:e}}var m=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.adapter=t,this.root=(0,o.htmlToElement)(a.entryListPageTemplate),this.addButtonClicked=new u.default(this),this.refresh=new u.default(this),this.paginationView=new l.default,this.floatBtn=this.root.querySelector("#floatBtn .floating-button "),this.floatBtn.style.transform="scale(1)",this.floatBtn.style.bottom="15px",this.adapter.registerChangeObserver(function(){n.render()}),this.registerAddBtnClicked(),this.scrollTimer=null,this.scrollEvent=this.handleScrollEvent(),o.DOMDoc.addEventListener("scroll",this.scrollEvent)}return r(e,null,[{key:"contains",value:function(){return function(e,t){return e.filter(function(e){return e.id===t.id}).length>0}}()},{key:"registerButtonLister",value:function(){return function(e){return function(t,n){var r=n.entry,o=e.model;o.title=r.title,o.content=r.content,o.lastModified=r.lastModified,o.createdDate=r.createdDate,i.modalService.getModalView().dismiss()}}}()}]),r(e,[{key:"handleScrollEvent",value:function(){return function(){var e=this;return function(){if(e.floatBtn){e.scrollTimer&&clearTimeout(e.scrollTimer),e.scrollTimer=setTimeout(function(){e.floatBtn.style.transform="scale(1)"},250),e.floatBtn.style.transform="scale(0)";var t=o.windowInterface.innerHeight,n=o.windowInterface.scrollY+t,r=o.DOMDoc.body.offsetHeight;e.floatBtn.style.bottom=n>r-43?n-r+43+"px":"15px"}}}}()},{key:"renderList",value:function(){return function(){var e=this.adapter,t=this.root.querySelector("#entries .entry-list");if(!t)return null;if(t.innerHTML="",e.getSize()>0)for(var n=0;n<e.getSize();n+=1){var r=e.getViewItem(n);this.registerViewItemEvents(r),t.appendChild(r.getViewElement())}else t.appendChild((0,o.htmlToElement)(a.emptyListTemple.trim()));return t}}()},{key:"registerViewItemEvents",value:function(){return function(t){var n=this;t.clickAction.attach(function(r,o){if(o&&"delete"===o.action)n.openConfirmationDialog(t);else{var a=new s.default(o.model,o.action);a.buttonClicked.attach(e.registerButtonLister(o)),i.modalService.open(a)}})}}()},{key:"openConfirmationDialog",value:function(){return function(e){var t=this,n=new d.default(e.getModel());n.actionButtonClicked.attach(function(n,r){if("ok"===r.action)if("success"===r.status)t.refresh.notify();else{var i={title:"Error",message:"Unable to delete "+e.getModel()};(0,o.showToast)(i,"error")}}),i.modalService.open(n)}}()},{key:"openCreateEntryView",value:function(){return function(){var e=this,t=new s.default;t.buttonClicked.attach(function(t,n){i.modalService.getModalView().dismiss(),e.adapter.addItems([new c.default(n.entry)]),e.refresh.notify()}),i.modalService.open(t)}}()},{key:"render",value:function(){return function(){this.paginationView.render(this.root,this.adapter.getPageInfo()),f.default.render(this.root),v.default.render(this.root),this.renderList()}}()},{key:"registerAddBtnClicked",value:function(){return function(){for(var e=this,t=function(){e.openCreateEntryView()},n=this.root.querySelectorAll(".add-btn-js"),r=0;r<n.length;r+=1)n[r].onclick=t}}()},{key:"getAdapter",value:function(){return function(){return this.adapter}}()},{key:"getViewElement",value:function(){return function(){return this.root}}()},{key:"getPaginationView",value:function(){return function(){return this.paginationView}}()},{key:"onLoadEntries",value:function(){return function(){var e=this.root.querySelector("#entries .entry-list");if(e){var t=new p.default;e.innerHTML="";var n=o.DOMDoc.createElement("div");n.style.position="relative",n.style.height="65vh",n.appendChild(t.getViewElement()),e.appendChild(n)}}}()},{key:"onDestroy",value:function(){return function(){o.DOMDoc.removeEventListener("scroll",this.scrollEvent)}}()}]),e}();t.default=m},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),o=n(2),a=function(e){return e&&e.__esModule?e:{default:e}}(n(3));var u=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.data=null,this.viewElementTop=(0,i.htmlToElement)(o.paginationTopTemplate),this.viewElementBottom=(0,i.htmlToElement)(o.paginationBottomTemplate),this.onChangePage=new a.default(this),this.registerPageChangeEvent(this.viewElementTop),this.registerPageChangeEvent(this.viewElementBottom)}return r(e,[{key:"registerPageChangeEvent",value:function(){return function(e){this.nextButton=e.querySelector('[data-direction="next"]'),this.prevButton=e.querySelector('[data-direction="prev"]'),this.nextButton.onclick=this.handlePageChange(),this.prevButton.onclick=this.handlePageChange()}}()},{key:"render",value:function(){return function(e,t){var n=e.querySelector("#paginationTop"),r=e.querySelector("#paginationBottom");t&&e&&(n||r)&&(this.data=t,this.renderTop(t,e),this.renderBottom(t,e))}}()},{key:"renderBottom",value:function(){return function(e,t){var n=e.page,r=e.size,o=e.totalEntries,a=Math.ceil(o/r),u=t.querySelector("#paginationBottom");u&&(u.innerHTML="",u.appendChild(this.viewElementBottom),(0,i.bindPropertiesToElement)(this.viewElementBottom.querySelectorAll("[tc-data-model]"),{page:"Page "+n+" of "+a}))}}()},{key:"renderTop",value:function(){return function(e,t){var n=t.querySelector("#paginationTop"),r=e.totalEntries,o=e.page,a=e.size,u=o*a,l=(o-1)*a+1+" - "+(u=u>r?r:u);this.viewElementTop.querySelector("[tc-data-page-index]").setAttribute("tc-data-page-index",o),(0,i.bindPropertiesToElement)(this.viewElementTop.querySelectorAll("[tc-data-model]"),{totalEntries:r,visibleEntries:l,page:o}),n&&(n.innerHTML="",n.appendChild(this.viewElementTop))}}()},{key:"handlePageChange",value:function(){return function(){var e=this;return function(t){var n=t.target.getAttribute("data-direction"),r=parseInt(e.viewElementTop.querySelector("[tc-data-page-index]").getAttribute("tc-data-page-index"),10);"next"===n?r+=1:r-=1,e.onChangePage.notify({page:r})}}}()},{key:"getViewElement",value:function(){return function(){return this.viewElementTop}}()}]),e}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),o=n(2),a=function(e){return e&&e.__esModule?e:{default:e}}(n(3)),u=n(4),l=n(104);var s=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.mode=n||"create",this.viewElement="view"===this.mode?(0,i.htmlToElement)(o.viewEntryTemplate.trim()):(0,i.htmlToElement)(o.createEntryTemplate.trim()),this.buttonClicked=new a.default(this),this.model=t,this.prepareView(),this.registerViewEvents()}return r(e,[{key:"prepareView",value:function(){return function(){var e=Object.assign({},this.model),t=e&&e.lastModified?e.lastModified:(0,l.getTimeString)(new Date);e.lastModified=(0,i.trimDate)(t),this.attachDataToView(e)}}()},{key:"attachDataToView",value:function(){return function(e){var t=this.viewElement.querySelectorAll("[tc-data-model]");if((0,i.bindPropertiesToElement)(t,e),"view"!==this.mode){var n=this.viewElement.querySelector("textarea");n.value=e&&e.content?e.content:"",n.focus()}else this.renderInViewMode(e)}}()},{key:"renderInViewMode",value:function(){return function(e){for(var t=this.viewElement.querySelector(".content-container"),n=e.content.split(/[\r\n]+/),r=0;r<n.length;r+=1){var o=i.DOMDoc.createElement("p");o.innerHTML=n[r],t.appendChild(o)}}}()},{key:"registerViewEvents",value:function(){return function(){var e=this.viewElement.querySelector('[tc-data-action="save"]');e&&(e.onclick=this.buttonClickHandler())}}()},{key:"getViewElement",value:function(){return function(){return this.viewElement}}()},{key:"consumeApiResult",value:function(){return function(e,t){var n=this;e.then(function(e){t&&(0,i.showToast)({title:"Entry updated"},"success"),n.buttonClicked.notify(e)}).catch(function(e){var n=t?"Unable to update entry":"Unable to save entry";(0,i.showToast)({title:n,message:e.message},"error")})}}()},{key:"buttonClickHandler",value:function(){return function(){var e=this;return function(){var t=e.viewElement.querySelector("textarea").value,n=e.viewElement.querySelector('[tc-data-model="title"]').value;if("edit"===e.mode){var r=Object.assign({},e.model),i=r.id;r.content=t,r.title=n,e.consumeApiResult(u.apiRequest.updateEntry(i,r),!0)}else"create"===e.mode?e.consumeApiResult(u.apiRequest.createEntry({content:t,title:n}),!1):e.buttonClicked.notify()}}}()}]),e}();t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,r.default)(e),parseInt(e,t||10)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if((0,r.default)(e),t)return"1"===e||"true"===e;return"0"!==e&&"false"!==e&&""!==e};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,r.default)(e),e===t};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,r.default)(e),e.indexOf((0,i.default)(t))>=0};var r=o(n(0)),i=o(n(11));function o(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){(0,r.default)(e),"[object RegExp]"!==Object.prototype.toString.call(t)&&(t=new RegExp(t,n));return t.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if((0,r.default)(e),(t=(0,i.default)(t,l)).require_display_name||t.allow_display_name){var n=e.match(s);if(n)e=n[1];else if(t.require_display_name)return!1}var u=e.split("@"),h=u.pop(),m=u.join("@"),y=h.toLowerCase();if("gmail.com"===y||"googlemail.com"===y){var g=(m=m.toLowerCase()).split("+")[0];if(!(0,o.default)(g.replace(".",""),{min:6,max:30}))return!1;for(var b=g.split("."),w=0;w<b.length;w++)if(!c.test(b[w]))return!1}if(!(0,o.default)(m,{max:64})||!(0,o.default)(h,{max:254}))return!1;if(!(0,a.default)(h,{require_tld:t.require_tld}))return!1;if('"'===m[0])return m=m.slice(1,m.length-1),t.allow_utf8_local_part?p.test(m):f.test(m);for(var _=t.allow_utf8_local_part?v:d,E=m.split("."),M=0;M<E.length;M++)if(!_.test(E[M]))return!1;return!0};var r=u(n(0)),i=u(n(6)),o=u(n(18)),a=u(n(12));function u(e){return e&&e.__esModule?e:{default:e}}var l={allow_display_name:!1,require_display_name:!1,allow_utf8_local_part:!0,require_tld:!0},s=/^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\.\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\,\.\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]*<(.+)>$/i,d=/^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~]+$/i,c=/^[a-z\d]+$/,f=/^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f]))*$/i,v=/^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+$/i,p=/^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*$/i;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if((0,r.default)(e),!e||e.length>=2083||/[\s<>]/.test(e))return!1;if(0===e.indexOf("mailto:"))return!1;t=(0,a.default)(t,l);var n=void 0,u=void 0,d=void 0,f=void 0,v=void 0,p=void 0,h=void 0,m=void 0;if(h=e.split("#"),e=h.shift(),h=e.split("?"),e=h.shift(),(h=e.split("://")).length>1){if(n=h.shift(),t.require_valid_protocol&&-1===t.protocols.indexOf(n))return!1}else{if(t.require_protocol)return!1;t.allow_protocol_relative_urls&&"//"===e.substr(0,2)&&(h[0]=e.substr(2))}if(""===(e=h.join("://")))return!1;if(h=e.split("/"),""===(e=h.shift())&&!t.require_host)return!0;if((h=e.split("@")).length>1&&(u=h.shift()).indexOf(":")>=0&&u.split(":").length>2)return!1;f=h.join("@"),p=null,m=null;var y=f.match(s);y?(d="",m=y[1],p=y[2]||null):(h=f.split(":"),d=h.shift(),h.length&&(p=h.join(":")));if(null!==p&&(v=parseInt(p,10),!/^[0-9]+$/.test(p)||v<=0||v>65535))return!1;if(!((0,o.default)(d)||(0,i.default)(d,t)||m&&(0,o.default)(m,6)))return!1;if(d=d||m,t.host_whitelist&&!c(d,t.host_whitelist))return!1;if(t.host_blacklist&&c(d,t.host_blacklist))return!1;return!0};var r=u(n(0)),i=u(n(12)),o=u(n(13)),a=u(n(6));function u(e){return e&&e.__esModule?e:{default:e}}var l={protocols:["http","https","ftp"],require_tld:!0,require_protocol:!1,require_host:!0,require_valid_protocol:!0,allow_underscores:!1,allow_trailing_dot:!1,allow_protocol_relative_urls:!1},s=/^\[([^\]]+)\](?::([0-9]+))?$/;function d(e){return"[object RegExp]"===Object.prototype.toString.call(e)}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];if(e===r||d(r)&&r.test(e))return!0}return!1}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){(0,r.default)(e);var t=e.split("/");if(2!==t.length)return!1;if(!a.test(t[1]))return!1;if(t[1].length>1&&t[1].startsWith("0"))return!1;return(0,i.default)(t[0],4)&&t[1]<=32&&t[1]>=0};var r=o(n(0)),i=o(n(13));function o(e){return e&&e.__esModule?e:{default:e}}var a=/^\d{1,2}$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),["true","false","1","0"].indexOf(e)>=0};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"en-US";if((0,r.default)(e),t in i.alpha)return i.alpha[t].test(e);throw new Error("Invalid locale '"+t+"'")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0)),i=n(9);e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"en-US";if((0,r.default)(e),t in i.alphanumeric)return i.alphanumeric[t].test(e);throw new Error("Invalid locale '"+t+"'")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0)),i=n(9);e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^[+-]?([0-9]*[.])?[0-9]+$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e,{min:0,max:65535})};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(19));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),e===e.toLowerCase()};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),e===e.toUpperCase()};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^[\x00-\x7F]+$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.fullWidth.test(e)&&o.halfWidth.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0)),i=n(20),o=n(21);e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/[^\x00-\x7F]/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/[\uD800-\uDBFF][\uDC00-\uDFFF]/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){(0,r.default)(e),t=t||{};var n=new RegExp("^(?:[-+])?(?:[0-9]+)?(?:\\"+(t.locale?i.decimal[t.locale]:".")+"[0-9]*)?(?:[eE][\\+\\-]?(?:[0-9]+))?$");if(""===e||"."===e||"-"===e||"+"===e)return!1;var o=parseFloat(e.replace(",","."));return n.test(e)&&(!t.hasOwnProperty("min")||o>=t.min)&&(!t.hasOwnProperty("max")||o<=t.max)&&(!t.hasOwnProperty("lt")||o<t.lt)&&(!t.hasOwnProperty("gt")||o>t.gt)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0)),i=n(9);e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if((0,i.default)(e),(t=(0,r.default)(t,u)).locale in o.decimal)return!l.includes(e.replace(/ /g,""))&&function(e){return new RegExp("^[-+]?([0-9]+)?(\\"+o.decimal[e.locale]+"[0-9]{"+e.decimal_digits+"})"+(e.force_decimal?"":"?")+"$")}(t).test(e);throw new Error("Invalid locale '"+t.locale+"'")};var r=a(n(6)),i=a(n(0)),o=n(9);function a(e){return e&&e.__esModule?e:{default:e}}var u={force_decimal:!1,decimal_digits:"1,",locale:"en-US"},l=["","-","+"];e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,r.default)(e),(0,i.default)(e)%parseInt(t,10)==0};var r=o(n(0)),i=o(n(17));function o(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^[A-Z]{2}[0-9A-Z]{3}\d{2}\d{5}$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^[a-f0-9]{32}$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,r.default)(e),new RegExp("^[a-f0-9]{"+i[t]+"}$").test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i={md5:32,md4:32,sha1:40,sha256:64,sha384:96,sha512:128,ripemd128:32,ripemd160:40,tiger128:32,tiger160:40,tiger192:48,crc32:8,crc32b:8};e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t.default=function(e){(0,i.default)(e);try{var t=JSON.parse(e);return!!t&&"object"===(void 0===t?"undefined":r(t))}catch(e){}return!1};var i=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),0===e.length};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t.default=function(e,t){(0,i.default)(e);var n=void 0,o=void 0;"object"===(void 0===t?"undefined":r(t))?(n=t.min||0,o=t.max):(n=arguments[1],o=arguments[2]);var a=e.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g)||[],u=e.length-a.length;return u>=n&&(void 0===o||u<=o)};var i=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"all";(0,r.default)(e);var n=i[t];return n&&n.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i={3:/^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,4:/^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,5:/^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,all:/^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i};e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),(0,i.default)(e)&&24===e.length};var r=o(n(0)),i=o(n(22));function o(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:String(new Date);(0,r.default)(e);var n=(0,i.default)(t),o=(0,i.default)(e);return!!(o&&n&&o>n)};var r=o(n(0)),i=o(n(10));function o(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:String(new Date);(0,r.default)(e);var n=(0,i.default)(t),o=(0,i.default)(e);return!!(o&&n&&o<n)};var r=o(n(0)),i=o(n(10));function o(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t.default=function(e,t){(0,i.default)(e);var n=void 0;if("[object Array]"===Object.prototype.toString.call(t)){var a=[];for(n in t)({}).hasOwnProperty.call(t,n)&&(a[n]=(0,o.default)(t[n]));return a.indexOf(e)>=0}if("object"===(void 0===t?"undefined":r(t)))return t.hasOwnProperty(e);if(t&&"function"==typeof t.indexOf)return t.indexOf(e)>=0;return!1};var i=a(n(0)),o=a(n(11));function a(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){(0,r.default)(e);var t=e.replace(/[- ]+/g,"");if(!i.test(t))return!1;for(var n=0,o=void 0,a=void 0,u=void 0,l=t.length-1;l>=0;l--)o=t.substring(l,l+1),a=parseInt(o,10),n+=u&&(a*=2)>=10?a%10+1:a,u=!u;return!(n%10!=0||!t)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11}|6[27][0-9]{14})$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){if((0,r.default)(e),!i.test(e))return!1;for(var t=e.replace(/[A-Z]/g,function(e){return parseInt(e,36)}),n=0,o=void 0,a=void 0,u=!0,l=t.length-2;l>=0;l--)o=t.substring(l,l+1),a=parseInt(o,10),n+=u&&(a*=2)>=10?a+1:a,u=!u;return parseInt(e.substr(e.length-1),10)===(1e4-n)%10};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";(0,r.default)(t);n=String(n);if(!n)return e(t,10)||e(t,13);var u=t.replace(/[\s-]+/g,"");var l=0;var s=void 0;if("10"===n){if(!i.test(u))return!1;for(s=0;s<9;s++)l+=(s+1)*u.charAt(s);if("X"===u.charAt(9)?l+=100:l+=10*u.charAt(9),l%11==0)return!!u}else if("13"===n){if(!o.test(u))return!1;for(s=0;s<12;s++)l+=a[s%2]*u.charAt(s);if(u.charAt(12)-(10-l%10)%10==0)return!!u}return!1};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^(?:[0-9]{9}X|[0-9]{10})$/,o=/^(?:[0-9]{13})$/,a=[1,3];e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};(0,r.default)(e);var n=i;if(n=t.require_hyphen?n.replace("?",""):n,!(n=t.case_sensitive?new RegExp(n):new RegExp(n,"i")).test(e))return!1;for(var o=e.replace("-","").toUpperCase(),a=0,u=0;u<o.length;u++){var l=o[u];a+=("X"===l?10:+l)*(8-u)}return a%11==0};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i="^\\d{4}-?\\d{3}[\\dX]$";e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if((0,r.default)(e),n&&n.strictMode&&!e.startsWith("+"))return!1;if(Array.isArray(t))return t.some(function(t){if(i.hasOwnProperty(t)){var n=i[t];if(n.test(e))return!0}return!1});if(t in i)return i[t].test(e);if("any"===t){for(var o in i)if(i.hasOwnProperty(o)){var a=i[o];if(a.test(e))return!0}return!1}throw new Error("Invalid locale '"+t+"'")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i={"ar-AE":/^((\+?971)|0)?5[024568]\d{7}$/,"ar-DZ":/^(\+?213|0)(5|6|7)\d{8}$/,"ar-EG":/^((\+?20)|0)?1[012]\d{8}$/,"ar-JO":/^(\+?962|0)?7[789]\d{7}$/,"ar-KW":/^(\+?965)[569]\d{7}$/,"ar-SA":/^(!?(\+?966)|0)?5\d{8}$/,"ar-SY":/^(!?(\+?963)|0)?9\d{8}$/,"ar-TN":/^(\+?216)?[2459]\d{7}$/,"be-BY":/^(\+?375)?(24|25|29|33|44)\d{7}$/,"bg-BG":/^(\+?359|0)?8[789]\d{7}$/,"cs-CZ":/^(\+?420)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,"da-DK":/^(\+?45)?\s?\d{2}\s?\d{2}\s?\d{2}\s?\d{2}$/,"de-DE":/^(\+?49[ \.\-]?)?([\(]{1}[0-9]{1,6}[\)])?([0-9 \.\-\/]{3,20})((x|ext|extension)[ ]?[0-9]{1,4})?$/,"el-GR":/^(\+?30|0)?(69\d{8})$/,"en-AU":/^(\+?61|0)4\d{8}$/,"en-GB":/^(\+?44|0)7\d{9}$/,"en-HK":/^(\+?852\-?)?[456789]\d{3}\-?\d{4}$/,"en-IN":/^(\+?91|0)?[6789]\d{9}$/,"en-KE":/^(\+?254|0)?[7]\d{8}$/,"en-NG":/^(\+?234|0)?[789]\d{9}$/,"en-NZ":/^(\+?64|0)2\d{7,9}$/,"en-PK":/^((\+92)|(0092))-{0,1}\d{3}-{0,1}\d{7}$|^\d{11}$|^\d{4}-\d{7}$/,"en-RW":/^(\+?250|0)?[7]\d{8}$/,"en-SG":/^(\+65)?[89]\d{7}$/,"en-TZ":/^(\+?255|0)?[67]\d{8}$/,"en-UG":/^(\+?256|0)?[7]\d{8}$/,"en-US":/^(\+?1)?[2-9]\d{2}[2-9](?!11)\d{6}$/,"en-ZA":/^(\+?27|0)\d{9}$/,"en-ZM":/^(\+?26)?09[567]\d{7}$/,"es-ES":/^(\+?34)?(6\d{1}|7[1234])\d{7}$/,"et-EE":/^(\+?372)?\s?(5|8[1-4])\s?([0-9]\s?){6,7}$/,"fa-IR":/^(\+?98[\-\s]?|0)9[0-39]\d[\-\s]?\d{3}[\-\s]?\d{4}$/,"fi-FI":/^(\+?358|0)\s?(4(0|1|2|4|5|6)?|50)\s?(\d\s?){4,8}\d$/,"fo-FO":/^(\+?298)?\s?\d{2}\s?\d{2}\s?\d{2}$/,"fr-FR":/^(\+?33|0)[67]\d{8}$/,"he-IL":/^(\+972|0)([23489]|5[012345689]|77)[1-9]\d{6}/,"hu-HU":/^(\+?36)(20|30|70)\d{7}$/,"id-ID":/^(\+?62|0[1-9])[\s|\d]+$/,"it-IT":/^(\+?39)?\s?3\d{2} ?\d{6,7}$/,"ja-JP":/^(\+?81|0)[789]0[ \-]?[1-9]\d{2}[ \-]?\d{5}$/,"kk-KZ":/^(\+?7|8)?7\d{9}$/,"kl-GL":/^(\+?299)?\s?\d{2}\s?\d{2}\s?\d{2}$/,"ko-KR":/^((\+?82)[ \-]?)?0?1([0|1|6|7|8|9]{1})[ \-]?\d{3,4}[ \-]?\d{4}$/,"lt-LT":/^(\+370|8)\d{8}$/,"ms-MY":/^(\+?6?01){1}(([145]{1}(\-|\s)?\d{7,8})|([236789]{1}(\s|\-)?\d{7}))$/,"nb-NO":/^(\+?47)?[49]\d{7}$/,"nl-BE":/^(\+?32|0)4?\d{8}$/,"nn-NO":/^(\+?47)?[49]\d{7}$/,"pl-PL":/^(\+?48)? ?[5-8]\d ?\d{3} ?\d{2} ?\d{2}$/,"pt-BR":/^(\+?55|0)\-?[1-9]{2}\-?[2-9]{1}\d{3,4}\-?\d{4}$/,"pt-PT":/^(\+?351)?9[1236]\d{7}$/,"ro-RO":/^(\+?4?0)\s?7\d{2}(\/|\s|\.|\-)?\d{3}(\s|\.|\-)?\d{3}$/,"ru-RU":/^(\+?7|8)?9\d{9}$/,"sk-SK":/^(\+?421)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,"sr-RS":/^(\+3816|06)[- \d]{5,9}$/,"sv-SE":/^(\+?46|0)[\s\-]?7[\s\-]?[02369]([\s\-]?\d){7}$/,"th-TH":/^(\+66|66|0)\d{9}$/,"tr-TR":/^(\+?90|0)?5\d{9}$/,"uk-UA":/^(\+?38|8)?0\d{9}$/,"vi-VN":/^(\+?84|0)?((1(2([0-9])|6([2-9])|88|99))|(9((?!5)[0-9])))([0-9]{7})$/,"zh-CN":/^(\+?0?86\-?)?1[3456789]\d{9}$/,"zh-TW":/^(\+?886\-?|0)?9\d{8}$/};i["en-CA"]=i["en-US"],i["fr-BE"]=i["nl-BE"],i["zh-HK"]=i["en-HK"],e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,i.default)(e),function(e){var t="\\d{"+e.digits_after_decimal[0]+"}";e.digits_after_decimal.forEach(function(e,n){0!==n&&(t=t+"|\\d{"+e+"}")});var n="(\\"+e.symbol.replace(/\./g,"\\.")+")"+(e.require_symbol?"":"?"),r="[1-9]\\d{0,2}(\\"+e.thousands_separator+"\\d{3})*",i="("+["0","[1-9]\\d*",r].join("|")+")?",o="(\\"+e.decimal_separator+"("+t+"))"+(e.require_decimal?"":"?"),a=i+(e.allow_decimal||e.require_decimal?o:"");return e.allow_negatives&&!e.parens_for_negatives&&(e.negative_sign_after_digits?a+="-?":e.negative_sign_before_digits&&(a="-?"+a)),e.allow_negative_sign_placeholder?a="( (?!\\-))?"+a:e.allow_space_after_symbol?a=" ?"+a:e.allow_space_after_digits&&(a+="( (?!$))?"),e.symbol_after_digits?a+=n:a=n+a,e.allow_negatives&&(e.parens_for_negatives?a="(\\("+a+"\\)|"+a+")":e.negative_sign_before_digits||e.negative_sign_after_digits||(a="-?"+a)),new RegExp("^(?!-? )(?=.*\\d)"+a+"$")}(t=(0,r.default)(t,a)).test(e)};var r=o(n(6)),i=o(n(0));function o(e){return e&&e.__esModule?e:{default:e}}var a={symbol:"$",require_symbol:!1,allow_space_after_symbol:!1,symbol_after_digits:!1,allow_negatives:!0,parens_for_negatives:!1,negative_sign_before_digits:!1,negative_sign_after_digits:!1,allow_negative_sign_placeholder:!1,thousands_separator:",",decimal_separator:".",allow_decimal:!0,require_decimal:!1,digits_after_decimal:[2],allow_space_after_digits:!1};e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),c.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/([01][0-9]|2[0-3])/,o=/[0-5][0-9]/,a=new RegExp("[-+]"+i.source+":"+o.source),u=new RegExp("([zZ]|"+a.source+")"),l=new RegExp(i.source+":"+o.source+":"+/([0-5][0-9]|60)/.source+/(\.[0-9]+)?/.source),s=new RegExp(/[0-9]{4}/.source+"-"+/(0[1-9]|1[0-2])/.source+"-"+/([12]\d|0[1-9]|3[01])/.source),d=new RegExp(""+l.source+u.source),c=new RegExp(s.source+"[ tT]"+d.source);e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.includes(e.toUpperCase())};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=["AD","AE","AF","AG","AI","AL","AM","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SV","SX","SY","SZ","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","YE","YT","ZA","ZM","ZW"];e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.includes(e.toUpperCase())};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=["AFG","ALA","ALB","DZA","ASM","AND","AGO","AIA","ATA","ATG","ARG","ARM","ABW","AUS","AUT","AZE","BHS","BHR","BGD","BRB","BLR","BEL","BLZ","BEN","BMU","BTN","BOL","BES","BIH","BWA","BVT","BRA","IOT","BRN","BGR","BFA","BDI","KHM","CMR","CAN","CPV","CYM","CAF","TCD","CHL","CHN","CXR","CCK","COL","COM","COG","COD","COK","CRI","CIV","HRV","CUB","CUW","CYP","CZE","DNK","DJI","DMA","DOM","ECU","EGY","SLV","GNQ","ERI","EST","ETH","FLK","FRO","FJI","FIN","FRA","GUF","PYF","ATF","GAB","GMB","GEO","DEU","GHA","GIB","GRC","GRL","GRD","GLP","GUM","GTM","GGY","GIN","GNB","GUY","HTI","HMD","VAT","HND","HKG","HUN","ISL","IND","IDN","IRN","IRQ","IRL","IMN","ISR","ITA","JAM","JPN","JEY","JOR","KAZ","KEN","KIR","PRK","KOR","KWT","KGZ","LAO","LVA","LBN","LSO","LBR","LBY","LIE","LTU","LUX","MAC","MKD","MDG","MWI","MYS","MDV","MLI","MLT","MHL","MTQ","MRT","MUS","MYT","MEX","FSM","MDA","MCO","MNG","MNE","MSR","MAR","MOZ","MMR","NAM","NRU","NPL","NLD","NCL","NZL","NIC","NER","NGA","NIU","NFK","MNP","NOR","OMN","PAK","PLW","PSE","PAN","PNG","PRY","PER","PHL","PCN","POL","PRT","PRI","QAT","REU","ROU","RUS","RWA","BLM","SHN","KNA","LCA","MAF","SPM","VCT","WSM","SMR","STP","SAU","SEN","SRB","SYC","SLE","SGP","SXM","SVK","SVN","SLB","SOM","ZAF","SGS","SSD","ESP","LKA","SDN","SUR","SJM","SWZ","SWE","CHE","SYR","TWN","TJK","TZA","THA","TLS","TGO","TKL","TON","TTO","TUN","TUR","TKM","TCA","TUV","UGA","UKR","ARE","GBR","USA","UMI","URY","UZB","VUT","VEN","VNM","VGB","VIR","WLF","ESH","YEM","ZMB","ZWE"];e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){(0,r.default)(e);var t=e.length;if(!t||t%4!=0||i.test(e))return!1;var n=e.indexOf("=");return-1===n||n===t-1||n===t-2&&"="===e[t-1]};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/[^A-Z0-9+\/=]/i;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){(0,r.default)(e);var t=e.split(",");if(t.length<2)return!1;var n=t.shift().trim().split(";"),u=n.shift();if("data:"!==u.substr(0,5))return!1;var l=u.substr(5);if(""!==l&&!i.test(l))return!1;for(var s=0;s<n.length;s++)if(s===n.length-1&&"base64"===n[s].toLowerCase());else if(!o.test(n[s]))return!1;for(var d=0;d<t.length;d++)if(!a.test(t[d]))return!1;return!0};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^[a-z]+\/[a-z0-9\-\+]+$/i,o=/^[a-z\-]+=[a-z0-9\-]+$/i,a=/^[a-z0-9!\$&'\(\)\*\+,;=\-\._~:@\/\?%\s]*$/i;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)||o.test(e)||a.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^(application|audio|font|image|message|model|multipart|text|video)\/[a-zA-Z0-9\.\-\+]{1,100}$/i,o=/^text\/[a-zA-Z0-9\.\-\+]{1,100};\s?charset=("[a-zA-Z0-9\.\-\+\s]{0,70}"|[a-zA-Z0-9\.\-\+]{0,70})(\s?\([a-zA-Z0-9\.\-\+\s]{1,20}\))?$/i,a=/^multipart\/[a-zA-Z0-9\.\-\+]{1,100}(;\s?(boundary|charset)=("[a-zA-Z0-9\.\-\+\s]{0,70}"|[a-zA-Z0-9\.\-\+]{0,70})(\s?\([a-zA-Z0-9\.\-\+\s]{1,20}\))?){0,2}$/i;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){if((0,r.default)(e),!e.includes(","))return!1;var t=e.split(",");return i.test(t[0])&&o.test(t[1])};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^\(?[+-]?(90(\.0+)?|[1-8]?\d(\.\d+)?)$/,o=/^\s?[+-]?(180(\.0+)?|1[0-7]\d(\.\d+)?|\d{1,2}(\.\d+)?)\)?$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.locales=void 0,t.default=function(e,t){if((0,r.default)(e),t in u)return u[t].test(e);if("any"===t){for(var n in u){if(u.hasOwnProperty(n))if(u[n].test(e))return!0}return!1}throw new Error("Invalid locale '"+t+"'")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^\d{4}$/,o=/^\d{5}$/,a=/^\d{6}$/,u={AT:i,AU:i,BE:i,BG:i,CA:/^[ABCEGHJKLMNPRSTVXY]\d[ABCEGHJ-NPRSTV-Z][\s\-]?\d[ABCEGHJ-NPRSTV-Z]\d$/i,CH:i,CZ:/^\d{3}\s?\d{2}$/,DE:o,DK:i,DZ:o,EE:o,ES:o,FI:o,FR:/^\d{2}\s?\d{3}$/,GB:/^(gir\s?0aa|[a-z]{1,2}\d[\da-z]?\s?(\d[a-z]{2})?)$/i,GR:/^\d{3}\s?\d{2}$/,HR:/^([1-5]\d{4}$)/,HU:i,IL:o,IN:a,IS:/^\d{3}$/,IT:o,JP:/^\d{3}\-\d{4}$/,KE:o,LI:/^(948[5-9]|949[0-7])$/,LT:/^LT\-\d{5}$/,LU:i,LV:/^LV\-\d{4}$/,MX:o,NL:/^\d{4}\s?[a-z]{2}$/i,NO:i,PL:/^\d{2}\-\d{3}$/,PT:/^\d{4}\-\d{3}?$/,RO:a,RU:a,SA:o,SE:/^\d{3}\s?\d{2}$/,SI:i,SK:/^\d{3}\s?\d{2}$/,TN:i,TW:/^\d{3}(\d{2})?$/,US:/^\d{5}(-\d{4})?$/,ZA:i,ZM:o};t.locales=Object.keys(u)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,r.default)((0,i.default)(e,t),t)};var r=o(n(24)),i=o(n(23));function o(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),e.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/\//g,"&#x2F;").replace(/\\/g,"&#x5C;").replace(/`/g,"&#96;")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),e.replace(/&amp;/g,"&").replace(/&quot;/g,'"').replace(/&#x27;/g,"'").replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&#x2F;/g,"/").replace(/&#x5C;/g,"\\").replace(/&#96;/g,"`")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){(0,r.default)(e);var n=t?"\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F":"\\x00-\\x1F\\x7F";return(0,i.default)(e,n)};var r=o(n(0)),i=o(n(25));function o(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,r.default)(e),e.replace(new RegExp("[^"+t+"]+","g"),"")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){(0,r.default)(e);for(var n=e.length-1;n>=0;n--)if(-1===t.indexOf(e[n]))return!1;return!0};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){t=(0,r.default)(t,i);var n=e.split("@"),d=n.pop(),c=[n.join("@"),d];if(c[1]=c[1].toLowerCase(),"gmail.com"===c[1]||"googlemail.com"===c[1]){if(t.gmail_remove_subaddress&&(c[0]=c[0].split("+")[0]),t.gmail_remove_dots&&(c[0]=c[0].replace(/\.+/g,s)),!c[0].length)return!1;(t.all_lowercase||t.gmail_lowercase)&&(c[0]=c[0].toLowerCase()),c[1]=t.gmail_convert_googlemaildotcom?"gmail.com":c[1]}else if(o.indexOf(c[1])>=0){if(t.icloud_remove_subaddress&&(c[0]=c[0].split("+")[0]),!c[0].length)return!1;(t.all_lowercase||t.icloud_lowercase)&&(c[0]=c[0].toLowerCase())}else if(a.indexOf(c[1])>=0){if(t.outlookdotcom_remove_subaddress&&(c[0]=c[0].split("+")[0]),!c[0].length)return!1;(t.all_lowercase||t.outlookdotcom_lowercase)&&(c[0]=c[0].toLowerCase())}else if(u.indexOf(c[1])>=0){if(t.yahoo_remove_subaddress){var f=c[0].split("-");c[0]=f.length>1?f.slice(0,-1).join("-"):f[0]}if(!c[0].length)return!1;(t.all_lowercase||t.yahoo_lowercase)&&(c[0]=c[0].toLowerCase())}else l.indexOf(c[1])>=0?((t.all_lowercase||t.yandex_lowercase)&&(c[0]=c[0].toLowerCase()),c[1]="yandex.ru"):t.all_lowercase&&(c[0]=c[0].toLowerCase());return c.join("@")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(6));var i={all_lowercase:!0,gmail_lowercase:!0,gmail_remove_dots:!0,gmail_remove_subaddress:!0,gmail_convert_googlemaildotcom:!0,outlookdotcom_lowercase:!0,outlookdotcom_remove_subaddress:!0,yahoo_lowercase:!0,yahoo_remove_subaddress:!0,yandex_lowercase:!0,icloud_lowercase:!0,icloud_remove_subaddress:!0},o=["icloud.com","me.com"],a=["hotmail.at","hotmail.be","hotmail.ca","hotmail.cl","hotmail.co.il","hotmail.co.nz","hotmail.co.th","hotmail.co.uk","hotmail.com","hotmail.com.ar","hotmail.com.au","hotmail.com.br","hotmail.com.gr","hotmail.com.mx","hotmail.com.pe","hotmail.com.tr","hotmail.com.vn","hotmail.cz","hotmail.de","hotmail.dk","hotmail.es","hotmail.fr","hotmail.hu","hotmail.id","hotmail.ie","hotmail.in","hotmail.it","hotmail.jp","hotmail.kr","hotmail.lv","hotmail.my","hotmail.ph","hotmail.pt","hotmail.sa","hotmail.sg","hotmail.sk","live.be","live.co.uk","live.com","live.com.ar","live.com.mx","live.de","live.es","live.eu","live.fr","live.it","live.nl","msn.com","outlook.at","outlook.be","outlook.cl","outlook.co.il","outlook.co.nz","outlook.co.th","outlook.com","outlook.com.ar","outlook.com.au","outlook.com.br","outlook.com.gr","outlook.com.pe","outlook.com.tr","outlook.com.vn","outlook.cz","outlook.de","outlook.dk","outlook.es","outlook.fr","outlook.hu","outlook.id","outlook.ie","outlook.in","outlook.it","outlook.jp","outlook.kr","outlook.lv","outlook.my","outlook.ph","outlook.pt","outlook.sa","outlook.sg","outlook.sk","passport.com"],u=["rocketmail.com","yahoo.ca","yahoo.co.uk","yahoo.com","yahoo.de","yahoo.fr","yahoo.in","yahoo.it","ymail.com"],l=["yandex.ru","yandex.ua","yandex.kz","yandex.com","yandex.by","ya.ru"];function s(e){return e.length>1?e:""}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),o=n(2),a=function(e){return e&&e.__esModule?e:{default:e}}(n(3)),u=n(4);var l=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.childView=i.DOMDoc.createElement("div"),this.childView.innerHTML=o.deleteDialogTemple.trim(),this.actionButtonClicked=new a.default(this),this.model=t;var r=this.childView.querySelectorAll("[tc-data-model]");(0,i.bindPropertiesToElement)(r,{message:"This action delete <strong>"+t.title+"</strong> from database. Are you sure you want to continue?"});var l=this.childView.querySelector('[tc-data-action="ok"]'),s=this.childView.querySelector('[tc-data-dismiss="cancel"]'),d=this;l.onclick=function(){u.apiRequest.deleteEntry(n.model.id).then(function(){n.notifyObserver("success")}).catch(function(){return n.notifyObserver("failed")})},s.onclick=function(){d.actionButtonClicked.notify({action:"cancel"})}}return r(e,[{key:"notifyObserver",value:function(){return function(e){this.actionButtonClicked.notify({status:e,action:"ok"}),this.modalView&&this.modalView.dismiss()}}()},{key:"getViewElement",value:function(){return function(){return this.childView}}()}]),e}();t.default=l},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=a(n(3)),o=a(n(103));function a(e){return e&&e.__esModule?e:{default:e}}var u=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.data=[],this.viewItems=[],this.notifyChangeObserver=new i.default(this),this.pageInfo=null}return r(e,[{key:"reset",value:function(){return function(){this.data=[],this.viewItems=[],this.notifyChangeObservers()}}()},{key:"getSize",value:function(){return function(){return this.viewItems?this.viewItems.length:0}}()},{key:"getViewItem",value:function(){return function(e){var t=this.viewItems[e];return t.setPosition(e),t}}()},{key:"addItem",value:function(){return function(e){var t=new o.default(e);this.data.push(e),this.viewItems.push(t)}}()},{key:"addItems",value:function(){return function(e){var t=this;this.updateList(e,function(e){return t.addItem(e)})}}()},{key:"removeItem",value:function(){return function(e){this.viewItems=this.viewItems.filter(function(t){return t.getModel().id!==e.id}),this.data=this.data.filter(function(t){return e.id!==t.id})}}()},{key:"removeItems",value:function(){return function(e){var t=this;this.updateList(e,function(e){return t.removeItem(e)})}}()},{key:"updateList",value:function(){return function(e,t){if(null!==t){for(var n=0;n<e.length;n+=1)t(e[n]);this.notifyChangeObservers()}}}()},{key:"notifyChangeObservers",value:function(){return function(){this.notifyChangeObserver.notify()}}()},{key:"registerChangeObserver",value:function(){return function(e){this.notifyChangeObserver.attach(e)}}()},{key:"setPageInfo",value:function(){return function(e){this.pageInfo=e}}()},{key:"getPageInfo",value:function(){return function(){return this.pageInfo}}()}]),e}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(2),o=n(1),a=function(e){return e&&e.__esModule?e:{default:e}}(n(3));var u=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);var n=this,r=""+i.entryListItemTemplate.trim();r=(0,o.formatter)(r,t),this.view=(0,o.htmlToElement)(r),this.model=t,this.clickAction=new a.default(this),this.updateView(),this.model.valueChangeObserver.attach(function(){n.updateView()}),this.registerDropDownItemClick(),this.handleViewClick()}return r(e,[{key:"handleViewClick",value:function(){return function(){var e=this;this.view.onclick=function(t){var n=t.target;return n.classList.contains("dropdown-toggle")?null:n.getAttribute("tc-data-action")?null:e.clickAction.notify({action:"view",model:e.model})}}}()},{key:"registerDropDownItemClick",value:function(){return function(){for(var t=this,n=this.view.querySelectorAll("[tc-data-action]"),r=function(r){var i=n[r],o=i.getAttribute("tc-data-action");"view"!==o&&"edit"!==o&&"delete"!==o||(i.onclick=function(){t.clickAction.notify({action:o,model:t.model}),e.dismissDropDownMenu()})},i=0;i<n.length;i+=1)r(i);this.view.querySelector('[tc-data-action="dropdown-toggle"]').onclick=function(t){e.showDropDownMenu(t)}}}()},{key:"getModel",value:function(){return function(){return this.model}}()},{key:"setPosition",value:function(){return function(e){for(var t=this.view.querySelectorAll("[data-index]"),n=0;n<t.length;n+=1)t[n].setAttribute("data-index",e)}}()},{key:"getViewElement",value:function(){return function(){return this.view}}()},{key:"updateView",value:function(){return function(){var e=this.view.querySelectorAll("[tc-data-model]"),t=void 0;for(t=0;t<e.length;t+=1){var n=e[t],r=n.getAttribute("tc-data-model");n.innerHTML=(0,o.getValue)(this.model,r)}}}()}],[{key:"showDropDownMenu",value:function(){return function(t){var n=t.target.nextElementSibling,r=function t(n){n.target.matches(".dropdown-toggle-icon")||(e.dismissDropDownMenu(),o.windowInterface.removeEventListener("click",t))};n.classList.contains("open")?n.classList.remove("open"):(e.dismissDropDownMenu(),n.classList.add("open")),o.windowInterface.addEventListener("click",r)}}()},{key:"dismissDropDownMenu",value:function(){return function(){for(var e=o.DOMDoc.getElementsByClassName("dropdown-menu"),t=0;t<e.length;t+=1){var n=e[t];n.classList.contains("open")&&n.classList.remove("open")}}}()}]),e}();t.default=u},function(e,t,n){"use strict";n.r(t);var r=n(5),i=n.n(r);class o extends Error{constructor(e,t=500,n="Unknown Error"){super(),this.code=t,this.message=e,this.status=n}static wrapAndThrowError(e){throw new o(e.message)}static sendError(e,t){let n=e.code||500;(n<99||n>599)&&(n=500);const{message:r,status:i}=e;t.status(n).send({message:r,status:i})}}n.d(t,"MAX_INT",function(){return a}),n.d(t,"padValue",function(){return l}),n.d(t,"getTimeString",function(){return s}),n.d(t,"isEmpty",function(){return d}),n.d(t,"validateName",function(){return c}),n.d(t,"validateEmailAndPassword",function(){return f}),n.d(t,"validateNameAndEmail",function(){return v}),n.d(t,"validateTime",function(){return h}),n.d(t,"validateEntry",function(){return m}),n.d(t,"validateLoginInfo",function(){return y}),n.d(t,"mapAndWrapDbPromise",function(){return g}),n.d(t,"sameDayDateComparison",function(){return b}),n.d(t,"mapArray",function(){return w});const a=2147483647,u=["MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY"];function l(e){return e<10?`0${e}`:e}function s(e){if(!e)return null;return`${["Jan","Feb","Mar","April","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][e.getMonth()]} ${e.getDate()}, ${e.getFullYear()} ${l(`${e.getHours()}`)}:${l(`${e.getMinutes()}`)}`}function d(e){let t=e;return void 0===t||null===t||"string"==typeof(t=t.trim())&&0===t.length}function c(e){const t=/^[a-zA-Z]+$/;return d(e.firstName)||d(e.lastName)?"First Name or Last Name cannot be empty":i.a.matches(e.firstName,t)&&i.a.matches(e.lastName,t)?null:"First Name or Last Name can only contain characters between A - Z"}function f(e,t=!1){return d(e.email)?"Email address is required":d(e.email)||i.a.isEmail(e.email)?t||!d(e.password)&&i.a.isLength(e.password,{min:8})?c(e):"Password must be at least 8;\n\r":"Email address is not valid;"}function v(e){return f(e,!0)}function p(e){let t=!1;for(let n=0;n<u.length;n+=1)if(u[n]===e.toUpperCase()){t=!0;break}return t}function h(e){return d(e.time)||d(e.from)||d(e.to)?"'time', 'from', or 'to' field cannot be empty":i.a.matches(e.time,/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/i)?p(e.from)&&p(e.to)?null:"'from' or 'to' field is not a valid a day of the week":"Invalid Time input: format HH:MM\n\r"}function m(e){return d(e.title)?"'title' field cannot be empty":d(e.content)?"'content' field cannot be empty":i.a.isLength(e.title,{min:4})?null:"Title must be at least 4 characters long"}function y(e){return d(e.email)?"Email address is required":d(e.password)?"Require Password\n\r":null}function g(e,t,n){return e.then(e=>t(e,n)).catch(o.wrapAndThrowError)}function b(e){const t=new Date,n=parseInt(`${(t.getTime()-e.getTime())/864e5}`,10);return t.getDate()>e.getDate()&&n>0}function w(e,t){const n=[];return e.forEach(e=>{n.push(t(e))}),Promise.resolve(n)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,