!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=23)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){if(!("string"==typeof e||e instanceof String))throw new TypeError("This library (validator.js) validates strings only")},e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};function i(e,t){for(var n=t.split("."),i=e;n.length;){var o=n.shift().trim();if(!("object"===(void 0===i?"undefined":r(i))&&o in i))return null;i=i[o]}return i}function o(e,t){return e.test(t)}function a(e){return function(t,n){return i(e,n)}}t.htmlToElement=function(e){var t=document.createElement("template");return t.innerHTML=e.trim(),t.content.firstChild},t.getValue=i,t.bindPropertiesToElement=function(e,t){if(!t)return;for(var n=function(){return function(e){var n=e,r=n.getAttribute("tc-data-model"),o=i(t,r);"INPUT"===n.nodeName?n.value=o||"":n.innerHTML=o}}(),r=0;r<e.length;r+=1)n(e[r])},t.requiresSubstitution=o,t.getSubstituteValue=a,t.formatter=function(e,t){var n=/{{([^{]*?)}}/g,r=e;o(n,e)&&(r=e.replace(n,a(t)));return r},t.stopAlertTime=l,t.showAlert=function(e,t){l();var n=document.getElementById("alert");if(!n)return;n.className="",n.classList.add("alert"),n.classList.add(t);var r=n.querySelector(".alert-msg"),i=n.querySelector(".close-btn"),o=function(){return function(){n.style.display="none"}}();r.innerHTML=e,n.style.display="block",i.onclick=o,u=setTimeout(o,8e3)},t.getFieldsAsObject=function(e){var t={};return e.querySelectorAll("input").forEach(function(e){var n=e.getAttribute("name");t[n]=e.value}),e.querySelectorAll("select").forEach(function(e){var n=e.getAttribute("name");t[n]=e.options[e.selectedIndex].value}),t},t.showToast=function(e,t){clearTimeout(s);var n=document.getElementById("toast");if(!n)return;n.className="",n.classList.add("toast");var r=n.querySelector(".alert-msg"),i=n.querySelector(".close-btn"),o=function(){return function(){n.classList.remove("show"),n.classList.add("dismiss")}}();r.innerHTML=e,n.classList.add("show"),n.classList.remove("dismiss"),n.classList.add(t),i.onclick=o,s=setTimeout(o,8e3)};var u=null;function l(){clearTimeout(u)}var s=null},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.modalBoxTemplate='\n<div id="modal-box" class="modal">\n    <div class="modal-content"></div>\n</div>',t.deleteDialogTemple='\n        <div class="modal-header">\n            <span class="modal-header-title" role="heading">\n                Confirm Delete\n            </span>\n            <span tc-data-dismiss="modal"  class="action-btn close" role="button" tabindex="0" aria-label="Close"></span>\n        </div>\n        <div tc-data-model="message" class="modal-body">This action delete entry from database. Are you sure you want to continue?\n        </div>\n        <div class="modal-footer">\n            <button tc-data-action="ok" name="ok" class="btn-ok">OK</button>\n            <button tc-data-dismiss="cancel"  name="cancel">Cancel</button>\n        </div>',t.entryTableHeadTemplate='\n            <tr class="header-filter">\n                <td colspan="3">\n                    <span class="title">Diary Entries</span>\n                </td>\n                <td></td>\n                <td>\n                    <div class="action-btn-container">                \n                        <a id="deleteEntry" title="Delete Entries" class="action-btn delete m-0 hide" role="button"\n                          aria-label="Add"></a>\n                        <a id="addEntry" title="Add Entry" class="action-btn add m-0" role="button"\n                          aria-label="Add"></a>\n                    </div>\n                </td>\n\n            </tr>\n            <tr>\n                <td>\n                    <label class="custom-checkbox">\n                        <input tc-data-action="check" type="checkbox">\n                        <span class="check-mark"></span>\n                    </label>\n                </td>\n                <td class="content-width">Content</td>\n                <td>Date</td>\n                <td>Last Modified</td>\n                <td></td>\n            </tr>',t.entryTableBodyRowTemplate='\n            <tr>\n                <td class=""><label class="custom-checkbox">\n                        <input class="check-box" data-index="" tc-data-id="{{id}}" tc-data-action="check" type="checkbox">\n                        <span class="check-mark"></span>\n                    </label></td>\n                <td>\n                    <p class="title" tc-data-model="title">Sample</p>\n                    <p class="content" tc-data-model="content">This is a sample content</p>\n                </td>\n                <td class="" tc-data-model="createdDate">date created sample</td>\n                <td class=""  tc-data-model="lastModified">last modified</td>\n                <td>\n                    <div>\n                        <div class="dropdown">\n                            <a data-index=""  tc-data-action="dropdown-toggle" class="dropdown-toggle"></a>\n                            <ul class="dropdown-menu">\n                                <li><a tc-data-action="view" href="javascript:void(0);">View</a></li>\n                                <li><a tc-data-action="edit" href="javascript:void(0);">Edit</a></li>\n                                <li><a tc-data-action="delete" href="javascript:void(0);">Delete</a></li>\n                            </ul>\n                        </div>\n                    </div>\n                </td>\n            </tr>',t.createEntryTemplate='\n    <form>    \n        <div class="modal-header">\n            <div id="modal-header-title">\n                <input tc-data-model="title" placeholder="Title" class="form-input modal-header-input">\n                <span tc-data-model="title" class="modal-header-title">\n                        Create New Diary Entry\n                </span>\n                <p tc-data-model="lastModified"></p>\n            </div>\n            <span tc-data-dismiss="modal"  class="action-btn close" role="button" tabindex="0" aria-label="Close"></span>\n        </div> \n        <div id="alert" class="alert error">\n            <p class="alert-msg"></p>\n            <a href="javascript:void(0);" class="close-btn">&times;</a>\n        </div>        \n                \n        <div class="modal-body"> \n        <div class="create-entry"><textarea placeholder="Dear Diary, " id="entry" rows="17" autofocus></textarea></div>                \n        </div> \n        <div class="modal-footer">\n            <button tc-data-action="save" type="button" class="btn-save">Save</button>\n            <button tc-data-dismiss="cancel" type="button" class="btn-cancel">Cancel</button>\n        </div>\n    </form>\n',t.loadingTemplate='\n    <div class="loading-container loading-bg">\n        <div class="loading-ring">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    </div>',t.emptyListTemple='<tr><td  colspan="5"><div class="empty-list"><span>No Entry</span></div></td></tr>',t.navbarHeaderTemplate='    \n    <header class="nav-header">\n        <a class="navicon  ">\n                <svg xmlns="http://www.w3.org/2000/svg" width="23" height="19" viewBox="0 0 23 19">\n                    <g fill="none">\n                        <g fill="#555">\n                            <rect y="16" width="23" height="3" rx="1.5"></rect>\n                            <rect width="23" height="3" rx="1.5"></rect>\n                            <rect y="8" width="23" height="3" rx="1.5"></rect>\n                        </g>\n                    </g>\n                </svg>\n            </a>\n        <a href="index.html" class="header-logo">\n            <span class="logo-img"></span>            \n        </a>\n        <div class="nav">\n            <ul class="logged-in">\n                <li>\n                    <a href="profile.html">Profile</a>\n                </li>\n                <li>\n                    <a id="logout">Logout</a>\n                </li>\n            </ul>\n            <ul class="logged-out">\n                <li>\n                    <a href="signin.html">Sign In</a>\n                </li>\n                <li>\n                    <a class="btn signup" href="signup.html">Sign Up</a>\n                </li>\n            </ul>            \n        </div>\n    </header>\n    <div class="nav-mobile">\n        <ul class="logged-in">\n            <li>\n                <a href="profile.html">Profile</a>\n            </li>\n            <li>\n                <a id="logout">Logout</a>\n            </li>\n        </ul>\n        <ul class="logged-out">\n             <li>\n                <a href="signin.html">Sign In</a>\n             </li>\n             <li>\n                <a class="btn signup" href="signup.html">Sign Up</a>\n             </li>\n        </ul>            \n    </div>\n'},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=be(n(10)),i=be(n(14)),o=be(n(28)),a=be(n(29)),u=be(n(30)),l=be(n(31)),s=be(n(32)),d=be(n(33)),c=be(n(34)),f=be(n(35)),v=be(n(13)),p=be(n(36)),h=be(n(12)),m=be(n(37)),y=be(n(38)),_=be(n(39)),g=be(n(40)),b=be(n(41)),w=be(n(42)),M=be(n(43)),A=be(n(44)),E=be(n(17)),S=be(n(18)),x=be(n(45)),T=be(n(46)),k=be(n(47)),O=be(n(16)),C=be(n(48)),P=be(n(49)),$=be(n(19)),F=be(n(50)),R=be(n(51)),L=be(n(52)),D=be(n(53)),j=be(n(54)),I=be(n(55)),B=be(n(56)),N=be(n(57)),V=be(n(15)),U=be(n(58)),Z=be(n(59)),G=be(n(60)),H=be(n(61)),q=be(n(62)),K=be(n(63)),z=be(n(64)),W=be(n(65)),Y=be(n(66)),J=be(n(67)),X=be(n(68)),Q=be(n(69)),ee=be(n(70)),te=be(n(71)),ne=be(n(72)),re=be(n(73)),ie=be(n(74)),oe=be(n(75)),ae=be(n(76)),ue=n(77),le=be(ue),se=be(n(20)),de=be(n(21)),ce=be(n(78)),fe=be(n(79)),ve=be(n(80)),pe=be(n(81)),he=be(n(82)),me=be(n(22)),ye=be(n(83)),_e=be(n(84)),ge=be(n(11));function be(e){return e&&e.__esModule?e:{default:e}}var we={version:"10.4.0",toDate:r.default,toFloat:i.default,toInt:o.default,toBoolean:a.default,equals:u.default,contains:l.default,matches:s.default,isEmail:d.default,isURL:c.default,isMACAddress:f.default,isIP:v.default,isIPRange:p.default,isFQDN:h.default,isBoolean:m.default,isAlpha:y.default,isAlphanumeric:_.default,isNumeric:g.default,isPort:b.default,isLowercase:w.default,isUppercase:M.default,isAscii:A.default,isFullWidth:E.default,isHalfWidth:S.default,isVariableWidth:x.default,isMultibyte:T.default,isSurrogatePair:k.default,isInt:O.default,isFloat:C.default,isDecimal:P.default,isHexadecimal:$.default,isDivisibleBy:F.default,isHexColor:R.default,isISRC:L.default,isMD5:D.default,isHash:j.default,isJSON:I.default,isEmpty:B.default,isLength:N.default,isByteLength:V.default,isUUID:U.default,isMongoId:Z.default,isAfter:G.default,isBefore:H.default,isIn:q.default,isCreditCard:K.default,isISIN:z.default,isISBN:W.default,isISSN:Y.default,isMobilePhone:J.default,isPostalCode:le.default,isPostalCodeLocales:ue.locales,isCurrency:X.default,isISO8601:Q.default,isRFC3339:ee.default,isISO31661Alpha2:te.default,isISO31661Alpha3:ne.default,isBase64:re.default,isDataURI:ie.default,isMimeType:oe.default,isLatLong:ae.default,ltrim:se.default,rtrim:de.default,trim:ce.default,escape:fe.default,unescape:ve.default,stripLow:pe.default,whitelist:he.default,blacklist:me.default,isWhitelisted:ye.default,normalizeEmail:_e.default,toString:ge.default};t.default=we,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var i=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.sender=t,this.listeners=[]}return r(e,[{key:"attach",value:function(){return function(e){this.listeners.push(e)}}()},{key:"notify",value:function(){return function(e){var t=void 0;for(t=0;t<this.listeners.length;t+=1)this.listeners[t](this.sender,e)}}()}]),e}();t.default=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getEntryUrlByID=function(e){return a+"/"+e};var r=t.baseUrl="http://localhost:3000",i=t.apiVersion="/api/v1",o=t.apiUrl=r+i,a=(t.userProfile=o+"/account/me",t.changePassword=o+"/account/change-password",t.reminder=o+"/account/user/reminder/settings",t.registrationEndpoint=o+"/auth/signup",t.authenticationEndpoint=o+"/auth/login",t.entriesEndpoint=o+"/entries")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var i=new(function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}return r(e,[{key:"request",value:function(){return function(e,t,n){var r={method:e,body:JSON.stringify(n),headers:{"Content-Type":"application/json"}};return localStorage.authenticationToken&&(r.headers["X-Access-Token"]=localStorage.authenticationToken),fetch(t,r).then(function(e){var t=e.status;if(401===t&&(localStorage.clear(),location.replace("sign.html")),t<400||t>=600){var n=e.headers.get("X-Access-Token");return n&&(localStorage.authenticationToken=n),Promise.resolve(e)}return Promise.resolve(e.json()).then(function(e){return Promise.reject(new Error(e.message))})}).then(function(e){return e.json()})}}()},{key:"get",value:function(){return function(e){return this.request("GET",e)}}()},{key:"post",value:function(){return function(e,t){return this.request("POST",e,t)}}()},{key:"put",value:function(){return function(e,t){return this.request("PUT",e,t)}}()}]),e}());t.default=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments[1];for(var n in t)void 0===e[n]&&(e[n]=t[n]);return e},e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),o=n(2);var a=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.vieewElement=document.getElementById("navbar"),this.vieewElement.style.display="none",this.vieewElement.classList.add("nav-container"),this.vieewElement.appendChild((0,i.htmlToElement)(o.navbarHeaderTemplate)),this.vieewElement.querySelector("#logout").onclick=function(){localStorage.clear("authenticationToken"),window.location.replace("index.html")}}return r(e,[{key:"render",value:function(){return function(){this.vieewElement.style.display="flex";var e=this.vieewElement.querySelector(".logged-out"),t=this.vieewElement.querySelector(".logged-in");localStorage.authenticationToken?(t.style.display="flex",e.style.display="none"):(t.style.display="none",e.style.display="flex")}}()}]),e}();t.default=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});for(var r,i=t.alpha={"en-US":/^[A-Z]+$/i,"bg-BG":/^[А-Я]+$/i,"cs-CZ":/^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,"da-DK":/^[A-ZÆØÅ]+$/i,"de-DE":/^[A-ZÄÖÜß]+$/i,"el-GR":/^[Α-ω]+$/i,"es-ES":/^[A-ZÁÉÍÑÓÚÜ]+$/i,"fr-FR":/^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,"it-IT":/^[A-ZÀÉÈÌÎÓÒÙ]+$/i,"nb-NO":/^[A-ZÆØÅ]+$/i,"nl-NL":/^[A-ZÁÉËÏÓÖÜÚ]+$/i,"nn-NO":/^[A-ZÆØÅ]+$/i,"hu-HU":/^[A-ZÁÉÍÓÖŐÚÜŰ]+$/i,"pl-PL":/^[A-ZĄĆĘŚŁŃÓŻŹ]+$/i,"pt-PT":/^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]+$/i,"ru-RU":/^[А-ЯЁ]+$/i,"sk-SK":/^[A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,"sr-RS@latin":/^[A-ZČĆŽŠĐ]+$/i,"sr-RS":/^[А-ЯЂЈЉЊЋЏ]+$/i,"sv-SE":/^[A-ZÅÄÖ]+$/i,"tr-TR":/^[A-ZÇĞİıÖŞÜ]+$/i,"uk-UA":/^[А-ЩЬЮЯЄIЇҐі]+$/i,ar:/^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/},o=t.alphanumeric={"en-US":/^[0-9A-Z]+$/i,"bg-BG":/^[0-9А-Я]+$/i,"cs-CZ":/^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,"da-DK":/^[0-9A-ZÆØÅ]+$/i,"de-DE":/^[0-9A-ZÄÖÜß]+$/i,"el-GR":/^[0-9Α-ω]+$/i,"es-ES":/^[0-9A-ZÁÉÍÑÓÚÜ]+$/i,"fr-FR":/^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,"it-IT":/^[0-9A-ZÀÉÈÌÎÓÒÙ]+$/i,"hu-HU":/^[0-9A-ZÁÉÍÓÖŐÚÜŰ]+$/i,"nb-NO":/^[0-9A-ZÆØÅ]+$/i,"nl-NL":/^[0-9A-ZÁÉËÏÓÖÜÚ]+$/i,"nn-NO":/^[0-9A-ZÆØÅ]+$/i,"pl-PL":/^[0-9A-ZĄĆĘŚŁŃÓŻŹ]+$/i,"pt-PT":/^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]+$/i,"ru-RU":/^[0-9А-ЯЁ]+$/i,"sk-SK":/^[0-9A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,"sr-RS@latin":/^[0-9A-ZČĆŽŠĐ]+$/i,"sr-RS":/^[0-9А-ЯЂЈЉЊЋЏ]+$/i,"sv-SE":/^[0-9A-ZÅÄÖ]+$/i,"tr-TR":/^[0-9A-ZÇĞİıÖŞÜ]+$/i,"uk-UA":/^[0-9А-ЩЬЮЯЄIЇҐі]+$/i,ar:/^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/},a=t.decimal={"en-US":".",ar:"٫"},u=t.englishLocales=["AU","GB","HK","IN","NZ","ZA","ZM"],l=0;l<u.length;l++)i[r="en-"+u[l]]=i["en-US"],o[r]=o["en-US"],a[r]=a["en-US"];for(var s,d=t.arabicLocales=["AE","BH","DZ","EG","IQ","JO","KW","LB","LY","MA","QM","QA","SA","SD","SY","TN","YE"],c=0;c<d.length;c++)i[s="ar-"+d[c]]=i.ar,o[s]=o.ar,a[s]=a.ar;for(var f=t.dotDecimal=[],v=t.commaDecimal=["bg-BG","cs-CZ","da-DK","de-DE","el-GR","es-ES","fr-FR","it-IT","hu-HU","nb-NO","nn-NO","nl-NL","pl-Pl","pt-PT","ru-RU","sr-RS@latin","sr-RS","sv-SE","tr-TR","uk-UA"],p=0;p<f.length;p++)a[f[p]]=a["en-US"];for(var h=0;h<v.length;h++)a[v[h]]=",";i["pt-BR"]=i["pt-PT"],o["pt-BR"]=o["pt-PT"],a["pt-BR"]=a["pt-PT"]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),e=Date.parse(e),isNaN(e)?null:new Date(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t.default=function(e){"object"===(void 0===e?"undefined":r(e))&&null!==e?e="function"==typeof e.toString?e.toString():"[object Object]":(null===e||void 0===e||isNaN(e)&&!e.length)&&(e="");return String(e)},e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){(0,r.default)(e),(t=(0,i.default)(t,a)).allow_trailing_dot&&"."===e[e.length-1]&&(e=e.substring(0,e.length-1));for(var n=e.split("."),o=0;o<n.length;o++)if(n[o].length>63)return!1;if(t.require_tld){var u=n.pop();if(!n.length||!/^([a-z\u00a1-\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(u))return!1;if(/[\s\u2002-\u200B\u202F\u205F\u3000\uFEFF\uDB40\uDC20]/.test(u))return!1}for(var l,s=0;s<n.length;s++){if(l=n[s],t.allow_underscores&&(l=l.replace(/_/g,"")),!/^[a-z\u00a1-\uffff0-9-]+$/i.test(l))return!1;if(/[\uff01-\uff5e]/.test(l))return!1;if("-"===l[0]||"-"===l[l.length-1])return!1}return!0};var r=o(n(0)),i=o(n(7));function o(e){return e&&e.__esModule?e:{default:e}}var a={require_tld:!0,allow_underscores:!1,allow_trailing_dot:!1};e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";(0,r.default)(t);n=String(n);if(!n)return e(t,4)||e(t,6);if("4"===n){if(!i.test(t))return!1;var a=t.split(".").sort(function(e,t){return e-t});return a[3]<=255}if("6"===n){var u=t.split(":"),l=!1,s=e(u[u.length-1],4),d=s?7:8;if(u.length>d)return!1;if("::"===t)return!0;"::"===t.substr(0,2)?(u.shift(),u.shift(),l=!0):"::"===t.substr(t.length-2)&&(u.pop(),u.pop(),l=!0);for(var c=0;c<u.length;++c)if(""===u[c]&&c>0&&c<u.length-1){if(l)return!1;l=!0}else if(s&&c===u.length-1);else if(!o.test(u[c]))return!1;return l?u.length>=1:u.length===d}return!1};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})$/,o=/^[0-9A-F]{1,4}$/i;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),parseFloat(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t.default=function(e,t){(0,i.default)(e);var n=void 0,o=void 0;"object"===(void 0===t?"undefined":r(t))?(n=t.min||0,o=t.max):(n=arguments[1],o=arguments[2]);var a=encodeURI(e).split(/%..|./).length-1;return a>=n&&(void 0===o||a<=o)};var i=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){(0,r.default)(e);var n=(t=t||{}).hasOwnProperty("allow_leading_zeroes")&&!t.allow_leading_zeroes?i:o,a=!t.hasOwnProperty("min")||e>=t.min,u=!t.hasOwnProperty("max")||e<=t.max,l=!t.hasOwnProperty("lt")||e<t.lt,s=!t.hasOwnProperty("gt")||e>t.gt;return n.test(e)&&a&&u&&l&&s};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^(?:[-+]?(?:0|[1-9][0-9]*))$/,o=/^[-+]?[0-9]+$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.fullWidth=void 0,t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=t.fullWidth=/[^\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.halfWidth=void 0,t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=t.halfWidth=/[\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^[0-9A-F]+$/i;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){(0,r.default)(e);var n=t?new RegExp("^["+t+"]+","g"):/^\s+/g;return e.replace(n,"")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){(0,r.default)(e);for(var n=t?new RegExp("["+t+"]"):/\s/,i=e.length-1;i>=0&&n.test(e[i]);i--);return i<e.length?e.substr(0,i+1):e};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,r.default)(e),e.replace(new RegExp("["+t+"]+","g"),"")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MainViewController=t.MainView=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(24),o=n(25),a=l(n(8)),u=l(n(87));function l(e){return e&&e.__esModule?e:{default:e}}function s(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var d=t.MainView=function(){function e(){s(this,e),this.vieww=document.getElementById("main")}return r(e,[{key:"addChild",value:function(){return function(e){this.vieww.appendChild(e)}}()},{key:"removeChild",value:function(){return function(e){this.vieww.removeChild(e)}}()}]),e}(),c=t.MainViewController=function(){function e(t){s(this,e),this.mainView=t,this.modalService=new i.ModalService,this.adapter=new o.EntryTableViewAdapter(this.modalService),this.entryTableView=new o.EntryTableView(this.adapter),this.entryTableController=new o.EntryTableController(this.entryTableView,this.modalService),this.navbar=new a.default}return r(e,[{key:"initialize",value:function(){return function(){var e=this;if("undefined"!=typeof Storage)if(localStorage.authenticationToken){var t=new u.default;this.navbar.render(),this.mainView.addChild(this.entryTableView.getViewElement()),this.mainView.addChild(t.getViewElement()),this.entryTableController.initialize(),this.entryTableController.onReady.attach(function(){e.mainView.removeChild(t.getViewElement())})}else window.location.replace("signin.html")}}()}]),e}();document.addEventListener("DOMContentLoaded",function(){new c(new d).initialize()})},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ModalService=t.ModalView=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),o=n(2),a=function(e){return e&&e.__esModule?e:{default:e}}(n(4));function u(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var l=t.ModalView=function(){function e(){u(this,e),this.vieewElement=(0,i.htmlToElement)(o.modalBoxTemplate),this.modalViewContent=null,this.onclickEvent=new a.default(this),this.onDismissEvent=new a.default(this);var t=this;this.vieewElement.onclick=function(e){t.onclickEvent.notify(e)}}return r(e,[{key:"setContent",value:function(){return function(e){var t=this.vieewElement.querySelector(".modal-content");t.innerHTML="",t.appendChild(e),this.modalViewContent=e;for(var n=this,r=this.vieewElement.querySelectorAll("[tc-data-dismiss]"),i=0;i<r.length;i+=1)r[i].onclick=function(){n.onDismissEvent.notify(),n.dismiss()}}}()},{key:"getViewElement",value:function(){return function(){return this.vieewElement}}()},{key:"dismiss",value:function(){return function(){this.onDismissEvent.notify(),document.body.removeChild(this.getViewElement())}}()}]),e}();t.ModalService=function(){function e(){u(this,e),this.modalVieew=new l}return r(e,[{key:"open",value:function(){return function(e){var t=this.modalVieew.getViewElement();t.style.display="block",e.modalView=this.modalVieew,this.modalVieew.setContent(e.getViewElement()),document.body.appendChild(t)}}()},{key:"onDismiss",value:function(){return function(e){this.modalVieew.onDismissEvent.attach(e)}}()},{key:"getModalView",value:function(){return function(){return this.modalVieew}}()}]),e}()},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EntryTableController=t.EntryTableViewAdapter=t.EntryTableView=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),o=n(2),a=v(n(26)),u=v(n(4)),l=v(n(27)),s=v(n(85)),d=v(n(86)),c=n(5),f=v(n(6));function v(e){return e&&e.__esModule?e:{default:e}}function p(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}t.EntryTableView=function(){function e(t){var n=this;p(this,e),this.adapter=t,this.vieww=document.createElement("div"),this.vieww.setAttribute("id","entries"),this.itemToRemove=[],this.selectAll=new u.default(this),this.addButtonClicked=new u.default(this),this.deleteButtonClicked=new u.default(this),this.adapter.registerChangeObserver(function(){n.render()})}return r(e,null,[{key:"contains",value:function(){return function(e,t){return e.filter(function(e){return e.id===t.id}).length>0}}()}]),r(e,[{key:"showDeleteButton",value:function(){return function(){var e=this.vieww.querySelector("#deleteEntry");this.itemToRemove.length>0?(e.style.visibility="visible",e.style.opacity="1"):(e.style.visibility="hidden",e.style.opacity="0")}}()},{key:"getTableHeader",value:function(){return function(){var e=this,t=this.adapter,n=document.createElement("thead");n.innerHTML=o.entryTableHeadTemplate;var r=n.querySelector("#addEntry"),i=n.querySelector("#deleteEntry"),a=n.querySelector('[tc-data-action="check"]');return r.onclick=function(){e.addButtonClicked.notify({})},i.onclick=function(){e.deleteButtonClicked.notify({items:e.itemToRemove})},a.onchange=function(){var n=a.checked;if(e.itemToRemove=[],n)for(var r=0;r<t.getSize();r+=1)e.itemToRemove.push(t.getViewItem(r).getModel());e.showDeleteButton(),e.selectAll.notify({checkedState:n})},n}}()},{key:"getTableBody",value:function(){return function(){var e=this.adapter,t=document.createElement("tbody");if(e.getSize()>0)for(var n=0;n<e.getSize();n+=1){var r=e.getViewItem(n);this.attachCheckStateChangeListener(r),t.appendChild(r.getViewElement())}else t.appendChild((0,i.htmlToElement)(o.emptyListTemple.trim()));return t}}()},{key:"attachCheckStateChangeListener",value:function(){return function(t){var n=this,r=this.adapter;t.checkBoxChange.attach(function(i,o){o.checked?e.contains(n.itemToRemove,o)||n.itemToRemove.push(t.getModel()):n.itemToRemove=n.itemToRemove.filter(function(e){return e.id!==o.id}),n.vieww.querySelector('thead [tc-data-action="check"]').checked=n.itemToRemove.length===r.getSize(),n.showDeleteButton()})}}()},{key:"render",value:function(){return function(){this.vieww.innerHTML="";var e=document.createElement("div"),t=document.createElement("table"),n=this.getTableHeader(),r=this.getTableBody();t.appendChild(n),t.appendChild(r),e.appendChild(t),this.vieww.appendChild(e),e.classList.add("container"),e.classList.add("entry-table")}}()},{key:"getAdapter",value:function(){return function(){return this.adapter}}()},{key:"getViewElement",value:function(){return function(){return this.vieww}}()}]),e}(),t.EntryTableViewAdapter=function(){function e(t){p(this,e),this.data=[],this.viewItems=[],this.modalService=t,this.notifyChangeObserver=new u.default(this)}return r(e,[{key:"getSize",value:function(){return function(){return this.viewItems?this.viewItems.length:0}}()},{key:"getViewItem",value:function(){return function(e){var t=this.viewItems[e];return t.setPosition(e),t}}()},{key:"addItem",value:function(){return function(e){var t=this,n=new a.default(e);n.clickAction.attach(function(n,r){if(r&&"delete"===r.action){var i=new s.default;i.actionButtonClicked.attach(function(n,r){"ok"===r.action&&t.removeItem(e)}),t.modalService.open(i)}else{var o=new l.default(r.model,r.action);o.buttonClicked.attach(t.registerButtonLister(r)),t.modalService.open(o)}}),this.data.push(e),this.viewItems.push(n),this.notifyChangeObservers()}}()},{key:"addItems",value:function(){return function(e){var t=this;this.updateList(e,function(e){return t.addItem(e)})}}()},{key:"removeItem",value:function(){return function(e){this.viewItems=this.viewItems.filter(function(t){return t.getModel().id!==e.id}),this.data=this.data.filter(function(t){return e.id!==t.id}),this.notifyChangeObservers()}}()},{key:"removeItems",value:function(){return function(e){var t=this;this.updateList(e,function(e){return t.removeItem(e)})}}()},{key:"updateList",value:function(){return function(e,t){if(null!==t){for(var n=0;n<e.length;n+=1)t(e[n]);this.notifyChangeObservers()}}}()},{key:"notifyChangeObservers",value:function(){return function(){this.notifyChangeObserver.notify()}}()},{key:"registerChangeObserver",value:function(){return function(e){this.notifyChangeObserver.attach(e)}}()},{key:"selectAllItem",value:function(){return function(e){for(var t=0;t<this.viewItems.length;t+=1)this.viewItems[t].selectCheckBoxState(e)}}()},{key:"registerButtonLister",value:function(){return function(e){var t=this;return function(n,r){var i=r.entry,o=e.model;o.title=i.title,o.content=i.content,o.lastModified=i.lastModified,o.createdDate=i.createdDate,t.modalService.getModalView().dismiss()}}}()}]),e}(),t.EntryTableController=function(){function e(t,n){var r=this;p(this,e),this.entryTableView=t,t.addButtonClicked.attach(function(){var e=new l.default;e.buttonClicked.attach(function(e,t){n.getModalView().dismiss(),r.entryTableView.getAdapter().addItem(new d.default(t.entry))}),n.open(e)}),t.selectAll.attach(function(e,t){r.entryTableView.getAdapter().selectAllItem(t.checkedState)}),t.deleteButtonClicked.attach(function(e,t){var i=new s.default;i.modalView=n.getModalView(),n.open(i),i.actionButtonClicked.attach(function(){r.entryTableView.getAdapter().removeItems(t.items)})}),this.onReady=new u.default(this)}return r(e,[{key:"initialize",value:function(){return function(){var e=this,t=this.entryTableView.getAdapter();f.default.get(c.entriesEndpoint).then(function(n){for(var r=n.entries,i=[],o=0;o<r.length;o+=1)i.push(new d.default(r[o]));t.addItems(i),e.onReady.notify()}).catch(function(){e.onReady.notify()}),this.entryTableView.render()}}()}]),e}()},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(2),o=n(1),a=function(e){return e&&e.__esModule?e:{default:e}}(n(4));var u=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);var n=this,r=""+i.entryTableBodyRowTemplate.trim();r=(0,o.formatter)(r,t),this.view=(0,o.htmlToElement)(r),this.model=t,this.clickAction=new a.default(this),this.checkBoxChange=new a.default(this),this.updateView(),this.model.valueChangeObserver.attach(function(){n.updateView()}),this.registerDropDownItemClick(),this.registerOnCheckHandler(),this.handleViewClick()}return r(e,[{key:"handleViewClick",value:function(){return function(){var e=this;this.view.onclick=function(t){var n=t.target;return n.classList.contains("dropdown-toggle")||n.classList.contains("check-box")||n.classList.contains("check-mark")?null:n.getAttribute("tc-data-action")?null:e.clickAction.notify({action:"view",model:e.model})}}}()},{key:"registerDropDownItemClick",value:function(){return function(){for(var e=this,t=this.view.querySelectorAll("[tc-data-action]"),n=function(n){!function(){var r=t[n],i=r.getAttribute("tc-data-action");"view"!==i&&"edit"!==i&&"delete"!==i||(r.onclick=function(){e.clickAction.notify({action:i,model:e.model}),e.dismissDropDownMenu()})}()},r=0;r<t.length;r+=1)n(r);this.view.querySelector('[tc-data-action="dropdown-toggle"]').onclick=function(t){e.showDropDownMenu(t)}}}()},{key:"registerOnCheckHandler",value:function(){return function(){var e=this,t=this.view.querySelector('[tc-data-action="check"]');t.onchange=function(n){var r={position:t.getAttribute("data-index"),id:t.getAttribute("tc-data-id"),checked:n.target.checked};e.checkBoxChange.notify(r)}}}()},{key:"getModel",value:function(){return function(){return this.model}}()},{key:"setPosition",value:function(){return function(e){for(var t=this.view.querySelectorAll("[data-index]"),n=0;n<t.length;n+=1)t[n].setAttribute("data-index",e)}}()},{key:"getViewElement",value:function(){return function(){return this.view}}()},{key:"updateView",value:function(){return function(){var e=this.view.querySelectorAll("[tc-data-model]"),t=void 0;for(t=0;t<e.length;t+=1){var n=e[t],r=n.getAttribute("tc-data-model");n.innerHTML=(0,o.getValue)(this.model,r)}}}()},{key:"showDropDownMenu",value:function(){return function(e){var t=this;this.dismissDropDownMenu(),e.toElement.nextElementSibling.classList.toggle("open"),window.onclick=function(e){e.target.matches(".dropdown-toggle")||t.dismissDropDownMenu()}}}()},{key:"dismissDropDownMenu",value:function(){return function(){for(var e=document.getElementsByClassName("dropdown-menu"),t=0;t<e.length;t++){var n=e[t];n.classList.contains("open")&&n.classList.remove("open")}}}()},{key:"selectCheckBoxState",value:function(){return function(e){this.view.querySelector('[tc-data-action="check"]').checked=e}}()}]),e}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),o=n(2),a=d(n(4)),u=n(5),l=d(n(6)),s=n(91);function d(e){return e&&e.__esModule?e:{default:e}}var c=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.viewElement=document.createElement("div"),this.viewElement.innerHTML=o.createEntryTemplate.trim();var r=this.viewElement.querySelector("textarea");this.buttonClicked=new a.default(this),this.model=t;var i=this.viewElement.querySelector("#modal-header-title"),u=i.querySelector("input"),l=i.querySelector("span");this.mode=n||"create",t&&"view"===this.mode?(u.style.display="none",l.style.display="block",r.setAttribute("readonly","readonly"),this.actionButtonVisibility("hide")):(u.style.display="block",l.style.display="none"),this.prepareView(t),this.buttonClickHandler()}return r(e,[{key:"prepareView",value:function(){return function(e){var t=this.viewElement.querySelector("textarea"),n=Object.assign({},this.model),r=n&&n.lastModified?n.lastModified:(0,s.getTimeString)(new Date);n.lastModified=r.substring(0,r.length-5).trim();var o=this.viewElement.querySelectorAll("[tc-data-model]");(0,i.bindPropertiesToElement)(o,n),t.value=e&&e.content?e.content:"",t.focus()}}()},{key:"actionButtonVisibility",value:function(){return function(e){var t=this.viewElement.querySelector(".modal-footer");"hide"===e?(t.style.opacity=0,t.style.visibility="hidden"):(t.style.opacity=1,t.style.visibility="block")}}()},{key:"buttonClickHandler",value:function(){return function(){var e=this,t=this;this.viewElement.querySelector('[tc-data-action="save"]').onclick=function(){var n=t.viewElement.querySelector("textarea").value,r=t.viewElement.querySelector('[tc-data-model="title"]').value;if("edit"===t.mode){var i=Object.assign({},e.model);i.content=n,i.title=r,e.consumeApiResult(l.default.put((0,u.getEntryUrlByID)(t.model.id),i),!0)}else"create"===t.mode?e.consumeApiResult(l.default.post(u.entriesEndpoint,{content:n,title:r}),!1):t.buttonClicked.notify()}}}()},{key:"getViewElement",value:function(){return function(){return this.viewElement}}()},{key:"consumeApiResult",value:function(){return function(e,t){var n=this;e.then(function(e){t&&(0,i.showToast)("Entry updated","success"),n.buttonClicked.notify(e)}).catch(function(e){var n=t?"Unable to update entry":"Unable to save entry";(0,i.showToast)(n+"<br>"+e.message,"error")})}}()}]),e}();t.default=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,r.default)(e),parseInt(e,t||10)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if((0,r.default)(e),t)return"1"===e||"true"===e;return"0"!==e&&"false"!==e&&""!==e};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,r.default)(e),e===t};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,r.default)(e),e.indexOf((0,i.default)(t))>=0};var r=o(n(0)),i=o(n(11));function o(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){(0,r.default)(e),"[object RegExp]"!==Object.prototype.toString.call(t)&&(t=new RegExp(t,n));return t.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if((0,r.default)(e),(t=(0,i.default)(t,l)).require_display_name||t.allow_display_name){var n=e.match(s);if(n)e=n[1];else if(t.require_display_name)return!1}var u=e.split("@"),h=u.pop(),m=u.join("@"),y=h.toLowerCase();if("gmail.com"===y||"googlemail.com"===y){var _=(m=m.toLowerCase()).split("+")[0];if(!(0,o.default)(_.replace(".",""),{min:6,max:30}))return!1;for(var g=_.split("."),b=0;b<g.length;b++)if(!c.test(g[b]))return!1}if(!(0,o.default)(m,{max:64})||!(0,o.default)(h,{max:254}))return!1;if(!(0,a.default)(h,{require_tld:t.require_tld}))return!1;if('"'===m[0])return m=m.slice(1,m.length-1),t.allow_utf8_local_part?p.test(m):f.test(m);for(var w=t.allow_utf8_local_part?v:d,M=m.split("."),A=0;A<M.length;A++)if(!w.test(M[A]))return!1;return!0};var r=u(n(0)),i=u(n(7)),o=u(n(15)),a=u(n(12));function u(e){return e&&e.__esModule?e:{default:e}}var l={allow_display_name:!1,require_display_name:!1,allow_utf8_local_part:!0,require_tld:!0},s=/^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\.\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\,\.\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]*<(.+)>$/i,d=/^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~]+$/i,c=/^[a-z\d]+$/,f=/^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f]))*$/i,v=/^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+$/i,p=/^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*$/i;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if((0,r.default)(e),!e||e.length>=2083||/[\s<>]/.test(e))return!1;if(0===e.indexOf("mailto:"))return!1;t=(0,a.default)(t,l);var n=void 0,u=void 0,d=void 0,f=void 0,v=void 0,p=void 0,h=void 0,m=void 0;if(h=e.split("#"),e=h.shift(),h=e.split("?"),e=h.shift(),(h=e.split("://")).length>1){if(n=h.shift(),t.require_valid_protocol&&-1===t.protocols.indexOf(n))return!1}else{if(t.require_protocol)return!1;t.allow_protocol_relative_urls&&"//"===e.substr(0,2)&&(h[0]=e.substr(2))}if(""===(e=h.join("://")))return!1;if(h=e.split("/"),""===(e=h.shift())&&!t.require_host)return!0;if((h=e.split("@")).length>1&&(u=h.shift()).indexOf(":")>=0&&u.split(":").length>2)return!1;f=h.join("@"),p=null,m=null;var y=f.match(s);y?(d="",m=y[1],p=y[2]||null):(h=f.split(":"),d=h.shift(),h.length&&(p=h.join(":")));if(null!==p&&(v=parseInt(p,10),!/^[0-9]+$/.test(p)||v<=0||v>65535))return!1;if(!((0,o.default)(d)||(0,i.default)(d,t)||m&&(0,o.default)(m,6)))return!1;if(d=d||m,t.host_whitelist&&!c(d,t.host_whitelist))return!1;if(t.host_blacklist&&c(d,t.host_blacklist))return!1;return!0};var r=u(n(0)),i=u(n(12)),o=u(n(13)),a=u(n(7));function u(e){return e&&e.__esModule?e:{default:e}}var l={protocols:["http","https","ftp"],require_tld:!0,require_protocol:!1,require_host:!0,require_valid_protocol:!0,allow_underscores:!1,allow_trailing_dot:!1,allow_protocol_relative_urls:!1},s=/^\[([^\]]+)\](?::([0-9]+))?$/;function d(e){return"[object RegExp]"===Object.prototype.toString.call(e)}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];if(e===r||d(r)&&r.test(e))return!0}return!1}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){(0,r.default)(e);var t=e.split("/");if(2!==t.length)return!1;if(!a.test(t[1]))return!1;if(t[1].length>1&&t[1].startsWith("0"))return!1;return(0,i.default)(t[0],4)&&t[1]<=32&&t[1]>=0};var r=o(n(0)),i=o(n(13));function o(e){return e&&e.__esModule?e:{default:e}}var a=/^\d{1,2}$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),["true","false","1","0"].indexOf(e)>=0};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"en-US";if((0,r.default)(e),t in i.alpha)return i.alpha[t].test(e);throw new Error("Invalid locale '"+t+"'")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0)),i=n(9);e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"en-US";if((0,r.default)(e),t in i.alphanumeric)return i.alphanumeric[t].test(e);throw new Error("Invalid locale '"+t+"'")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0)),i=n(9);e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^[+-]?([0-9]*[.])?[0-9]+$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e,{min:0,max:65535})};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(16));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),e===e.toLowerCase()};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),e===e.toUpperCase()};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^[\x00-\x7F]+$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.fullWidth.test(e)&&o.halfWidth.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0)),i=n(17),o=n(18);e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/[^\x00-\x7F]/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/[\uD800-\uDBFF][\uDC00-\uDFFF]/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){(0,r.default)(e),t=t||{};var n=new RegExp("^(?:[-+])?(?:[0-9]+)?(?:\\"+(t.locale?i.decimal[t.locale]:".")+"[0-9]*)?(?:[eE][\\+\\-]?(?:[0-9]+))?$");if(""===e||"."===e||"-"===e||"+"===e)return!1;var o=parseFloat(e.replace(",","."));return n.test(e)&&(!t.hasOwnProperty("min")||o>=t.min)&&(!t.hasOwnProperty("max")||o<=t.max)&&(!t.hasOwnProperty("lt")||o<t.lt)&&(!t.hasOwnProperty("gt")||o>t.gt)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0)),i=n(9);e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if((0,i.default)(e),(t=(0,r.default)(t,u)).locale in o.decimal)return!l.includes(e.replace(/ /g,""))&&function(e){return new RegExp("^[-+]?([0-9]+)?(\\"+o.decimal[e.locale]+"[0-9]{"+e.decimal_digits+"})"+(e.force_decimal?"":"?")+"$")}(t).test(e);throw new Error("Invalid locale '"+t.locale+"'")};var r=a(n(7)),i=a(n(0)),o=n(9);function a(e){return e&&e.__esModule?e:{default:e}}var u={force_decimal:!1,decimal_digits:"1,",locale:"en-US"},l=["","-","+"];e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,r.default)(e),(0,i.default)(e)%parseInt(t,10)==0};var r=o(n(0)),i=o(n(14));function o(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^[A-Z]{2}[0-9A-Z]{3}\d{2}\d{5}$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^[a-f0-9]{32}$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,r.default)(e),new RegExp("^[a-f0-9]{"+i[t]+"}$").test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i={md5:32,md4:32,sha1:40,sha256:64,sha384:96,sha512:128,ripemd128:32,ripemd160:40,tiger128:32,tiger160:40,tiger192:48,crc32:8,crc32b:8};e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t.default=function(e){(0,i.default)(e);try{var t=JSON.parse(e);return!!t&&"object"===(void 0===t?"undefined":r(t))}catch(e){}return!1};var i=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),0===e.length};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t.default=function(e,t){(0,i.default)(e);var n=void 0,o=void 0;"object"===(void 0===t?"undefined":r(t))?(n=t.min||0,o=t.max):(n=arguments[1],o=arguments[2]);var a=e.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g)||[],u=e.length-a.length;return u>=n&&(void 0===o||u<=o)};var i=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"all";(0,r.default)(e);var n=i[t];return n&&n.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i={3:/^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,4:/^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,5:/^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,all:/^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i};e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),(0,i.default)(e)&&24===e.length};var r=o(n(0)),i=o(n(19));function o(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:String(new Date);(0,r.default)(e);var n=(0,i.default)(t),o=(0,i.default)(e);return!!(o&&n&&o>n)};var r=o(n(0)),i=o(n(10));function o(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:String(new Date);(0,r.default)(e);var n=(0,i.default)(t),o=(0,i.default)(e);return!!(o&&n&&o<n)};var r=o(n(0)),i=o(n(10));function o(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t.default=function(e,t){(0,i.default)(e);var n=void 0;if("[object Array]"===Object.prototype.toString.call(t)){var a=[];for(n in t)({}).hasOwnProperty.call(t,n)&&(a[n]=(0,o.default)(t[n]));return a.indexOf(e)>=0}if("object"===(void 0===t?"undefined":r(t)))return t.hasOwnProperty(e);if(t&&"function"==typeof t.indexOf)return t.indexOf(e)>=0;return!1};var i=a(n(0)),o=a(n(11));function a(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){(0,r.default)(e);var t=e.replace(/[- ]+/g,"");if(!i.test(t))return!1;for(var n=0,o=void 0,a=void 0,u=void 0,l=t.length-1;l>=0;l--)o=t.substring(l,l+1),a=parseInt(o,10),n+=u&&(a*=2)>=10?a%10+1:a,u=!u;return!(n%10!=0||!t)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11}|6[27][0-9]{14})$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){if((0,r.default)(e),!i.test(e))return!1;for(var t=e.replace(/[A-Z]/g,function(e){return parseInt(e,36)}),n=0,o=void 0,a=void 0,u=!0,l=t.length-2;l>=0;l--)o=t.substring(l,l+1),a=parseInt(o,10),n+=u&&(a*=2)>=10?a+1:a,u=!u;return parseInt(e.substr(e.length-1),10)===(1e4-n)%10};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";(0,r.default)(t);n=String(n);if(!n)return e(t,10)||e(t,13);var u=t.replace(/[\s-]+/g,"");var l=0;var s=void 0;if("10"===n){if(!i.test(u))return!1;for(s=0;s<9;s++)l+=(s+1)*u.charAt(s);if("X"===u.charAt(9)?l+=100:l+=10*u.charAt(9),l%11==0)return!!u}else if("13"===n){if(!o.test(u))return!1;for(s=0;s<12;s++)l+=a[s%2]*u.charAt(s);if(u.charAt(12)-(10-l%10)%10==0)return!!u}return!1};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^(?:[0-9]{9}X|[0-9]{10})$/,o=/^(?:[0-9]{13})$/,a=[1,3];e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};(0,r.default)(e);var n=i;if(n=t.require_hyphen?n.replace("?",""):n,!(n=t.case_sensitive?new RegExp(n):new RegExp(n,"i")).test(e))return!1;for(var o=e.replace("-","").toUpperCase(),a=0,u=0;u<o.length;u++){var l=o[u];a+=("X"===l?10:+l)*(8-u)}return a%11==0};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i="^\\d{4}-?\\d{3}[\\dX]$";e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if((0,r.default)(e),n&&n.strictMode&&!e.startsWith("+"))return!1;if(Array.isArray(t))return t.some(function(t){if(i.hasOwnProperty(t)){var n=i[t];if(n.test(e))return!0}return!1});if(t in i)return i[t].test(e);if("any"===t){for(var o in i)if(i.hasOwnProperty(o)){var a=i[o];if(a.test(e))return!0}return!1}throw new Error("Invalid locale '"+t+"'")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i={"ar-AE":/^((\+?971)|0)?5[024568]\d{7}$/,"ar-DZ":/^(\+?213|0)(5|6|7)\d{8}$/,"ar-EG":/^((\+?20)|0)?1[012]\d{8}$/,"ar-JO":/^(\+?962|0)?7[789]\d{7}$/,"ar-KW":/^(\+?965)[569]\d{7}$/,"ar-SA":/^(!?(\+?966)|0)?5\d{8}$/,"ar-SY":/^(!?(\+?963)|0)?9\d{8}$/,"ar-TN":/^(\+?216)?[2459]\d{7}$/,"be-BY":/^(\+?375)?(24|25|29|33|44)\d{7}$/,"bg-BG":/^(\+?359|0)?8[789]\d{7}$/,"cs-CZ":/^(\+?420)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,"da-DK":/^(\+?45)?\s?\d{2}\s?\d{2}\s?\d{2}\s?\d{2}$/,"de-DE":/^(\+?49[ \.\-]?)?([\(]{1}[0-9]{1,6}[\)])?([0-9 \.\-\/]{3,20})((x|ext|extension)[ ]?[0-9]{1,4})?$/,"el-GR":/^(\+?30|0)?(69\d{8})$/,"en-AU":/^(\+?61|0)4\d{8}$/,"en-GB":/^(\+?44|0)7\d{9}$/,"en-HK":/^(\+?852\-?)?[456789]\d{3}\-?\d{4}$/,"en-IN":/^(\+?91|0)?[6789]\d{9}$/,"en-KE":/^(\+?254|0)?[7]\d{8}$/,"en-NG":/^(\+?234|0)?[789]\d{9}$/,"en-NZ":/^(\+?64|0)2\d{7,9}$/,"en-PK":/^((\+92)|(0092))-{0,1}\d{3}-{0,1}\d{7}$|^\d{11}$|^\d{4}-\d{7}$/,"en-RW":/^(\+?250|0)?[7]\d{8}$/,"en-SG":/^(\+65)?[89]\d{7}$/,"en-TZ":/^(\+?255|0)?[67]\d{8}$/,"en-UG":/^(\+?256|0)?[7]\d{8}$/,"en-US":/^(\+?1)?[2-9]\d{2}[2-9](?!11)\d{6}$/,"en-ZA":/^(\+?27|0)\d{9}$/,"en-ZM":/^(\+?26)?09[567]\d{7}$/,"es-ES":/^(\+?34)?(6\d{1}|7[1234])\d{7}$/,"et-EE":/^(\+?372)?\s?(5|8[1-4])\s?([0-9]\s?){6,7}$/,"fa-IR":/^(\+?98[\-\s]?|0)9[0-39]\d[\-\s]?\d{3}[\-\s]?\d{4}$/,"fi-FI":/^(\+?358|0)\s?(4(0|1|2|4|5|6)?|50)\s?(\d\s?){4,8}\d$/,"fo-FO":/^(\+?298)?\s?\d{2}\s?\d{2}\s?\d{2}$/,"fr-FR":/^(\+?33|0)[67]\d{8}$/,"he-IL":/^(\+972|0)([23489]|5[012345689]|77)[1-9]\d{6}/,"hu-HU":/^(\+?36)(20|30|70)\d{7}$/,"id-ID":/^(\+?62|0[1-9])[\s|\d]+$/,"it-IT":/^(\+?39)?\s?3\d{2} ?\d{6,7}$/,"ja-JP":/^(\+?81|0)[789]0[ \-]?[1-9]\d{2}[ \-]?\d{5}$/,"kk-KZ":/^(\+?7|8)?7\d{9}$/,"kl-GL":/^(\+?299)?\s?\d{2}\s?\d{2}\s?\d{2}$/,"ko-KR":/^((\+?82)[ \-]?)?0?1([0|1|6|7|8|9]{1})[ \-]?\d{3,4}[ \-]?\d{4}$/,"lt-LT":/^(\+370|8)\d{8}$/,"ms-MY":/^(\+?6?01){1}(([145]{1}(\-|\s)?\d{7,8})|([236789]{1}(\s|\-)?\d{7}))$/,"nb-NO":/^(\+?47)?[49]\d{7}$/,"nl-BE":/^(\+?32|0)4?\d{8}$/,"nn-NO":/^(\+?47)?[49]\d{7}$/,"pl-PL":/^(\+?48)? ?[5-8]\d ?\d{3} ?\d{2} ?\d{2}$/,"pt-BR":/^(\+?55|0)\-?[1-9]{2}\-?[2-9]{1}\d{3,4}\-?\d{4}$/,"pt-PT":/^(\+?351)?9[1236]\d{7}$/,"ro-RO":/^(\+?4?0)\s?7\d{2}(\/|\s|\.|\-)?\d{3}(\s|\.|\-)?\d{3}$/,"ru-RU":/^(\+?7|8)?9\d{9}$/,"sk-SK":/^(\+?421)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,"sr-RS":/^(\+3816|06)[- \d]{5,9}$/,"sv-SE":/^(\+?46|0)[\s\-]?7[\s\-]?[02369]([\s\-]?\d){7}$/,"th-TH":/^(\+66|66|0)\d{9}$/,"tr-TR":/^(\+?90|0)?5\d{9}$/,"uk-UA":/^(\+?38|8)?0\d{9}$/,"vi-VN":/^(\+?84|0)?((1(2([0-9])|6([2-9])|88|99))|(9((?!5)[0-9])))([0-9]{7})$/,"zh-CN":/^(\+?0?86\-?)?1[3456789]\d{9}$/,"zh-TW":/^(\+?886\-?|0)?9\d{8}$/};i["en-CA"]=i["en-US"],i["fr-BE"]=i["nl-BE"],i["zh-HK"]=i["en-HK"],e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,i.default)(e),function(e){var t="\\d{"+e.digits_after_decimal[0]+"}";e.digits_after_decimal.forEach(function(e,n){0!==n&&(t=t+"|\\d{"+e+"}")});var n="(\\"+e.symbol.replace(/\./g,"\\.")+")"+(e.require_symbol?"":"?"),r="[1-9]\\d{0,2}(\\"+e.thousands_separator+"\\d{3})*",i="("+["0","[1-9]\\d*",r].join("|")+")?",o="(\\"+e.decimal_separator+"("+t+"))"+(e.require_decimal?"":"?"),a=i+(e.allow_decimal||e.require_decimal?o:"");return e.allow_negatives&&!e.parens_for_negatives&&(e.negative_sign_after_digits?a+="-?":e.negative_sign_before_digits&&(a="-?"+a)),e.allow_negative_sign_placeholder?a="( (?!\\-))?"+a:e.allow_space_after_symbol?a=" ?"+a:e.allow_space_after_digits&&(a+="( (?!$))?"),e.symbol_after_digits?a+=n:a=n+a,e.allow_negatives&&(e.parens_for_negatives?a="(\\("+a+"\\)|"+a+")":e.negative_sign_before_digits||e.negative_sign_after_digits||(a="-?"+a)),new RegExp("^(?!-? )(?=.*\\d)"+a+"$")}(t=(0,r.default)(t,a)).test(e)};var r=o(n(7)),i=o(n(0));function o(e){return e&&e.__esModule?e:{default:e}}var a={symbol:"$",require_symbol:!1,allow_space_after_symbol:!1,symbol_after_digits:!1,allow_negatives:!0,parens_for_negatives:!1,negative_sign_before_digits:!1,negative_sign_after_digits:!1,allow_negative_sign_placeholder:!1,thousands_separator:",",decimal_separator:".",allow_decimal:!0,require_decimal:!1,digits_after_decimal:[2],allow_space_after_digits:!1};e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),c.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/([01][0-9]|2[0-3])/,o=/[0-5][0-9]/,a=new RegExp("[-+]"+i.source+":"+o.source),u=new RegExp("([zZ]|"+a.source+")"),l=new RegExp(i.source+":"+o.source+":"+/([0-5][0-9]|60)/.source+/(\.[0-9]+)?/.source),s=new RegExp(/[0-9]{4}/.source+"-"+/(0[1-9]|1[0-2])/.source+"-"+/([12]\d|0[1-9]|3[01])/.source),d=new RegExp(""+l.source+u.source),c=new RegExp(s.source+"[ tT]"+d.source);e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.includes(e.toUpperCase())};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=["AD","AE","AF","AG","AI","AL","AM","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SV","SX","SY","SZ","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","YE","YT","ZA","ZM","ZW"];e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.includes(e.toUpperCase())};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=["AFG","ALA","ALB","DZA","ASM","AND","AGO","AIA","ATA","ATG","ARG","ARM","ABW","AUS","AUT","AZE","BHS","BHR","BGD","BRB","BLR","BEL","BLZ","BEN","BMU","BTN","BOL","BES","BIH","BWA","BVT","BRA","IOT","BRN","BGR","BFA","BDI","KHM","CMR","CAN","CPV","CYM","CAF","TCD","CHL","CHN","CXR","CCK","COL","COM","COG","COD","COK","CRI","CIV","HRV","CUB","CUW","CYP","CZE","DNK","DJI","DMA","DOM","ECU","EGY","SLV","GNQ","ERI","EST","ETH","FLK","FRO","FJI","FIN","FRA","GUF","PYF","ATF","GAB","GMB","GEO","DEU","GHA","GIB","GRC","GRL","GRD","GLP","GUM","GTM","GGY","GIN","GNB","GUY","HTI","HMD","VAT","HND","HKG","HUN","ISL","IND","IDN","IRN","IRQ","IRL","IMN","ISR","ITA","JAM","JPN","JEY","JOR","KAZ","KEN","KIR","PRK","KOR","KWT","KGZ","LAO","LVA","LBN","LSO","LBR","LBY","LIE","LTU","LUX","MAC","MKD","MDG","MWI","MYS","MDV","MLI","MLT","MHL","MTQ","MRT","MUS","MYT","MEX","FSM","MDA","MCO","MNG","MNE","MSR","MAR","MOZ","MMR","NAM","NRU","NPL","NLD","NCL","NZL","NIC","NER","NGA","NIU","NFK","MNP","NOR","OMN","PAK","PLW","PSE","PAN","PNG","PRY","PER","PHL","PCN","POL","PRT","PRI","QAT","REU","ROU","RUS","RWA","BLM","SHN","KNA","LCA","MAF","SPM","VCT","WSM","SMR","STP","SAU","SEN","SRB","SYC","SLE","SGP","SXM","SVK","SVN","SLB","SOM","ZAF","SGS","SSD","ESP","LKA","SDN","SUR","SJM","SWZ","SWE","CHE","SYR","TWN","TJK","TZA","THA","TLS","TGO","TKL","TON","TTO","TUN","TUR","TKM","TCA","TUV","UGA","UKR","ARE","GBR","USA","UMI","URY","UZB","VUT","VEN","VNM","VGB","VIR","WLF","ESH","YEM","ZMB","ZWE"];e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){(0,r.default)(e);var t=e.length;if(!t||t%4!=0||i.test(e))return!1;var n=e.indexOf("=");return-1===n||n===t-1||n===t-2&&"="===e[t-1]};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/[^A-Z0-9+\/=]/i;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){(0,r.default)(e);var t=e.split(",");if(t.length<2)return!1;var n=t.shift().trim().split(";"),u=n.shift();if("data:"!==u.substr(0,5))return!1;var l=u.substr(5);if(""!==l&&!i.test(l))return!1;for(var s=0;s<n.length;s++)if(s===n.length-1&&"base64"===n[s].toLowerCase());else if(!o.test(n[s]))return!1;for(var d=0;d<t.length;d++)if(!a.test(t[d]))return!1;return!0};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^[a-z]+\/[a-z0-9\-\+]+$/i,o=/^[a-z\-]+=[a-z0-9\-]+$/i,a=/^[a-z0-9!\$&'\(\)\*\+,;=\-\._~:@\/\?%\s]*$/i;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)||o.test(e)||a.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^(application|audio|font|image|message|model|multipart|text|video)\/[a-zA-Z0-9\.\-\+]{1,100}$/i,o=/^text\/[a-zA-Z0-9\.\-\+]{1,100};\s?charset=("[a-zA-Z0-9\.\-\+\s]{0,70}"|[a-zA-Z0-9\.\-\+]{0,70})(\s?\([a-zA-Z0-9\.\-\+\s]{1,20}\))?$/i,a=/^multipart\/[a-zA-Z0-9\.\-\+]{1,100}(;\s?(boundary|charset)=("[a-zA-Z0-9\.\-\+\s]{0,70}"|[a-zA-Z0-9\.\-\+]{0,70})(\s?\([a-zA-Z0-9\.\-\+\s]{1,20}\))?){0,2}$/i;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){if((0,r.default)(e),!e.includes(","))return!1;var t=e.split(",");return i.test(t[0])&&o.test(t[1])};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^\(?[+-]?(90(\.0+)?|[1-8]?\d(\.\d+)?)$/,o=/^\s?[+-]?(180(\.0+)?|1[0-7]\d(\.\d+)?|\d{1,2}(\.\d+)?)\)?$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.locales=void 0,t.default=function(e,t){if((0,r.default)(e),t in u)return u[t].test(e);if("any"===t){for(var n in u){if(u.hasOwnProperty(n))if(u[n].test(e))return!0}return!1}throw new Error("Invalid locale '"+t+"'")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^\d{4}$/,o=/^\d{5}$/,a=/^\d{6}$/,u={AT:i,AU:i,BE:i,BG:i,CA:/^[ABCEGHJKLMNPRSTVXY]\d[ABCEGHJ-NPRSTV-Z][\s\-]?\d[ABCEGHJ-NPRSTV-Z]\d$/i,CH:i,CZ:/^\d{3}\s?\d{2}$/,DE:o,DK:i,DZ:o,EE:o,ES:o,FI:o,FR:/^\d{2}\s?\d{3}$/,GB:/^(gir\s?0aa|[a-z]{1,2}\d[\da-z]?\s?(\d[a-z]{2})?)$/i,GR:/^\d{3}\s?\d{2}$/,HR:/^([1-5]\d{4}$)/,HU:i,IL:o,IN:a,IS:/^\d{3}$/,IT:o,JP:/^\d{3}\-\d{4}$/,KE:o,LI:/^(948[5-9]|949[0-7])$/,LT:/^LT\-\d{5}$/,LU:i,LV:/^LV\-\d{4}$/,MX:o,NL:/^\d{4}\s?[a-z]{2}$/i,NO:i,PL:/^\d{2}\-\d{3}$/,PT:/^\d{4}\-\d{3}?$/,RO:a,RU:a,SA:o,SE:/^\d{3}\s?\d{2}$/,SI:i,SK:/^\d{3}\s?\d{2}$/,TN:i,TW:/^\d{3}(\d{2})?$/,US:/^\d{5}(-\d{4})?$/,ZA:i,ZM:o};t.locales=Object.keys(u)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,r.default)((0,i.default)(e,t),t)};var r=o(n(21)),i=o(n(20));function o(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),e.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/\//g,"&#x2F;").replace(/\\/g,"&#x5C;").replace(/`/g,"&#96;")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),e.replace(/&amp;/g,"&").replace(/&quot;/g,'"').replace(/&#x27;/g,"'").replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&#x2F;/g,"/").replace(/&#x5C;/g,"\\").replace(/&#96;/g,"`")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){(0,r.default)(e);var n=t?"\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F":"\\x00-\\x1F\\x7F";return(0,i.default)(e,n)};var r=o(n(0)),i=o(n(22));function o(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,r.default)(e),e.replace(new RegExp("[^"+t+"]+","g"),"")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){(0,r.default)(e);for(var n=e.length-1;n>=0;n--)if(-1===t.indexOf(e[n]))return!1;return!0};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){t=(0,r.default)(t,i);var n=e.split("@"),d=n.pop(),c=[n.join("@"),d];if(c[1]=c[1].toLowerCase(),"gmail.com"===c[1]||"googlemail.com"===c[1]){if(t.gmail_remove_subaddress&&(c[0]=c[0].split("+")[0]),t.gmail_remove_dots&&(c[0]=c[0].replace(/\.+/g,s)),!c[0].length)return!1;(t.all_lowercase||t.gmail_lowercase)&&(c[0]=c[0].toLowerCase()),c[1]=t.gmail_convert_googlemaildotcom?"gmail.com":c[1]}else if(o.indexOf(c[1])>=0){if(t.icloud_remove_subaddress&&(c[0]=c[0].split("+")[0]),!c[0].length)return!1;(t.all_lowercase||t.icloud_lowercase)&&(c[0]=c[0].toLowerCase())}else if(a.indexOf(c[1])>=0){if(t.outlookdotcom_remove_subaddress&&(c[0]=c[0].split("+")[0]),!c[0].length)return!1;(t.all_lowercase||t.outlookdotcom_lowercase)&&(c[0]=c[0].toLowerCase())}else if(u.indexOf(c[1])>=0){if(t.yahoo_remove_subaddress){var f=c[0].split("-");c[0]=f.length>1?f.slice(0,-1).join("-"):f[0]}if(!c[0].length)return!1;(t.all_lowercase||t.yahoo_lowercase)&&(c[0]=c[0].toLowerCase())}else l.indexOf(c[1])>=0?((t.all_lowercase||t.yandex_lowercase)&&(c[0]=c[0].toLowerCase()),c[1]="yandex.ru"):t.all_lowercase&&(c[0]=c[0].toLowerCase());return c.join("@")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(7));var i={all_lowercase:!0,gmail_lowercase:!0,gmail_remove_dots:!0,gmail_remove_subaddress:!0,gmail_convert_googlemaildotcom:!0,outlookdotcom_lowercase:!0,outlookdotcom_remove_subaddress:!0,yahoo_lowercase:!0,yahoo_remove_subaddress:!0,yandex_lowercase:!0,icloud_lowercase:!0,icloud_remove_subaddress:!0},o=["icloud.com","me.com"],a=["hotmail.at","hotmail.be","hotmail.ca","hotmail.cl","hotmail.co.il","hotmail.co.nz","hotmail.co.th","hotmail.co.uk","hotmail.com","hotmail.com.ar","hotmail.com.au","hotmail.com.br","hotmail.com.gr","hotmail.com.mx","hotmail.com.pe","hotmail.com.tr","hotmail.com.vn","hotmail.cz","hotmail.de","hotmail.dk","hotmail.es","hotmail.fr","hotmail.hu","hotmail.id","hotmail.ie","hotmail.in","hotmail.it","hotmail.jp","hotmail.kr","hotmail.lv","hotmail.my","hotmail.ph","hotmail.pt","hotmail.sa","hotmail.sg","hotmail.sk","live.be","live.co.uk","live.com","live.com.ar","live.com.mx","live.de","live.es","live.eu","live.fr","live.it","live.nl","msn.com","outlook.at","outlook.be","outlook.cl","outlook.co.il","outlook.co.nz","outlook.co.th","outlook.com","outlook.com.ar","outlook.com.au","outlook.com.br","outlook.com.gr","outlook.com.pe","outlook.com.tr","outlook.com.vn","outlook.cz","outlook.de","outlook.dk","outlook.es","outlook.fr","outlook.hu","outlook.id","outlook.ie","outlook.in","outlook.it","outlook.jp","outlook.kr","outlook.lv","outlook.my","outlook.ph","outlook.pt","outlook.sa","outlook.sg","outlook.sk","passport.com"],u=["rocketmail.com","yahoo.ca","yahoo.co.uk","yahoo.com","yahoo.de","yahoo.fr","yahoo.in","yahoo.it","ymail.com"],l=["yandex.ru","yandex.ua","yandex.kz","yandex.com","yandex.by","ya.ru"];function s(e){return e.length>1?e:""}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),o=n(2),a=function(e){return e&&e.__esModule?e:{default:e}}(n(4));var u=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.vieewElement=document.createElement("div"),this.vieewElement.innerHTML=o.deleteDialogTemple.trim(),this.actionButtonClicked=new a.default(this);var n={message:"This action delete entry from database. Are you sure you want to continue?"};t&&(n.message=t);var r=this.vieewElement.querySelectorAll("[tc-data-model]");(0,i.bindPropertiesToElement)(r,n);var u=this.vieewElement.querySelector('[tc-data-action="ok"]'),l=this.vieewElement.querySelector('[tc-data-dismiss="cancel"]'),s=this;u.onclick=function(){s.actionButtonClicked.notify({action:"ok"}),s.modalView&&s.modalView.dismiss()},l.onclick=function(){s.actionButtonClicked.notify({action:"cancel"})}}return r(e,[{key:"getViewElement",value:function(){return function(){return this.vieewElement}}()}]),e}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(e){return e&&e.__esModule?e:{default:e}}(n(4));var i=function(){return function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.valueChangeObserver=new r.default(null),Object.keys(t).forEach(function(e){var t=void 0;Object.defineProperty(n,e,{set:function(e){t=e,this.valueChangeObserver.notify()},get:function(){return t},enumerable:!0})}),Object.keys(t).forEach(function(e){n[e]=t[e]})}}();t.default=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),o=n(2);var a=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.vieewElement=(0,i.htmlToElement)(o.loadingTemplate)}return r(e,[{key:"getViewElement",value:function(){return function(){return this.vieewElement}}()}]),e}();t.default=a},,,,function(e,t,n){"use strict";n.r(t);var r=n(3),i=n.n(r);class o extends Error{constructor(e,t=500,n="Unknown Error"){super(e),this.code=t,this.message=e,this.status=n}static wrapAndThrowError(e){throw new o(e.message)}static sendError(e,t){let n=e.code||500;(n<99||n>599)&&(n=500);const{message:r,status:i}=e;t.status(n).send({message:r,status:i})}}n.d(t,"padValue",function(){return u}),n.d(t,"getTimeString",function(){return l}),n.d(t,"isEmpty",function(){return s}),n.d(t,"validateName",function(){return d}),n.d(t,"validateEmailAndPassword",function(){return c}),n.d(t,"validateTime",function(){return v}),n.d(t,"validateEntry",function(){return p}),n.d(t,"validateLoginInfo",function(){return h}),n.d(t,"mapAndWrapDbPromise",function(){return m}),n.d(t,"sameDayDateComparison",function(){return y}),n.d(t,"mapArray",function(){return _});const a=["MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY"];function u(e){return e<10?`0${e}`:e}function l(e){if(!e)return null;return`${["Jan","Feb","Mar","April","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][e.getMonth()]} ${e.getDate()}, ${e.getFullYear()} ${u(e.getHours())}:${u(e.getMinutes())}`}function s(e){let t=e;return void 0===t||null===t||"string"==typeof(t=t.trim())&&0===t.length}function d(e){const t=/^[a-zA-Z]+$/;return s(e.firstName)||s(e.lastName)?"First Name or Last Name cannot be empty":i.a.matches(e.firstName,t)&&i.a.matches(e.lastName,t)?null:"First Name or Last Name can only contain characters between A - Z"}function c(e){return s(e.email)?"Email address is required":s(e.email)||i.a.isEmail(e.email)?s(e.password)||!i.a.isLength(e.password,{min:8})?"Password must be at least 8;\n\r":d(e):"Email address is not valid;"}function f(e){let t=!1;for(let n=0;n<a.length;n+=1)if(a[n]===e.toUpperCase()){t=!0;break}return t}function v(e){return s(e.time)||s(e.from)||s(e.to)?"'time', 'from', or 'to' field cannot be empty":i.a.matches(e.time,/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/i)?f(e.from)&&f(e.to)?null:"'from' or 'to' field is not a valid a day of the week":"Invalid Time input: format HH:MM\n\r"}function p(e){return s(e.title)?"'title' field cannot be empty":s(e.content)?"'content' field cannot be empty":i.a.isLength(e.title,{min:4})?null:"Title must be at least 4 characters long"}function h(e){return s(e.email)?"Email address is required":s(e.password)?"Require Password\n\r":null}function m(e,t){return e.then(e=>t(e)).catch(o.wrapAndThrowError)}function y(e){const t=new Date,n=parseInt((t.getTime()-e.getTime())/864e5,10);return t.getDate()>e.getDate()&&n>0}function _(e,t){const n=[];return e.forEach(e=>{n.push(t(e))}),Promise.resolve(n)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,