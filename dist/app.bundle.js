!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=25)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){if(!("string"==typeof e||e instanceof String))throw new TypeError("This library (validator.js) validates strings only")},e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.windowInterface=t.DOMDoc=void 0;var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t.htmlToElement=o,t.getValue=u,t.bindPropertiesToElement=function(e,t){if(!t)return;for(var n=0;n<e.length;n+=1)l(e[n],t)},t.requiresSubstitution=s,t.getSubstituteValue=d,t.formatter=function(e,t){var n=/{{([^{]*?)}}/g,r=e;s(n,e)&&(r=e.replace(n,d(t)));return r},t.stopAlertTime=f,t.showAlert=v,t.getFieldsAsObject=function(e){var t={};return e.querySelectorAll("input").forEach(function(e){var n=e.getAttribute("name");t[n]=e.value}),e.querySelectorAll("select").forEach(function(e){var n=e.getAttribute("name");t[n]=e.options[e.selectedIndex].value}),t},t.showToast=function(e,t){clearTimeout(p);var n=a.getElementById("toast");if(!n)return;n.className="",n.classList.add("toast");var r=n.querySelector(".alert-msg"),i=n.querySelector(".close-btn"),o=function(){return function(){n.classList.remove("show"),n.classList.add("dismiss")}}();r.innerHTML=e,n.classList.add("show"),n.classList.remove("dismiss"),n.classList.add(t),i.onclick=o,p=setTimeout(o,8e3)},t.trimDate=function(e){return e?e.substring(0,e.length-5).trim():null},t.storeToken=function(e){m.authenticationToken=e},t.clearToken=function(){m.clear()},t.getToken=function(){if("undefined"!=typeof Storage&&m.authenticationToken)return m.authenticationToken;return null},t.gotoUrl=function(e){window.location.replace(e)},t.showLoadingAnim=function(e,t){var n=e.children,r="hidden",a="0";"remove"===t&&(r="visible",a="1");for(var u=0;u<n.length;u+=1){var l=n[u];l.style.visibility=r,l.style.opacity=a}"remove"===t?e.removeChild(e.querySelector("#loading")):e.appendChild(o(i.loadingButtonTemplate))},t.validateForm=function(e){for(var t=!0,n=e.querySelectorAll("input"),r=n.length-1;r>=0;r-=1){var i=n[r],a=i.value;"password"!==i.type&&(a=a.trim()),""===a&&(i.className+=" invalid",t=!1,v("Input Field(s) cannot be empty","error"),i.focus(),i.oninput=function(e){e.target.classList.remove("invalid")})}return t},t.matchPassword=function(e){var t=!0,n=e.querySelector("#match-password");if(n){var r=e.querySelector("#password");n.value!==r.value&&(v("Please input a matching password","error"),t=!1)}return t};var i=n(2),a=t.DOMDoc=document;t.windowInterface=window;function o(e){var t=a.createElement("template");return t.innerHTML=e.trim(),t.content.firstChild}function u(e,t){for(var n=t.split("."),i=e;n.length;){var a=n.shift().trim();if(!("object"===(void 0===i?"undefined":r(i))&&a in i))return null;i=i[a]}return i}function l(e,t){var n=e,r=u(t,n.getAttribute("tc-data-model"));0===r&&(r="0"),"INPUT"===n.nodeName||"SELECT"===n.nodeName||"TEXTAREA"===n.nodeName?n.value=r||"":n.innerHTML=r}function s(e,t){return e.test(t)}function d(e){return function(t,n){return u(e,n)}}var c=null;function f(){clearTimeout(c)}function v(e,t){f();var n=a.getElementById("alert");if(n){n.className="",n.classList.add("alert"),n.classList.add(t);var r=n.querySelector(".alert-msg"),i=n.querySelector(".close-btn"),o=function(){return function(){n.style.display="none"}}();r.innerHTML=e,n.style.display="block",i.onclick=o,c=setTimeout(o,8e3)}}var p=null;var m=localStorage},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.modalBoxTemplate='\n<div id="modal-box" class="modal">\n    <div class="modal-content"></div>\n</div>',t.deleteDialogTemple='\n        <div class="modal-header">\n            <span class="modal-header-title" role="heading">\n                Confirm Delete\n            </span>\n            <span tc-data-dismiss="modal"  class="action-btn close" role="button" tabindex="0" aria-label="Close"></span>\n        </div>\n        <div tc-data-model="message" class="modal-body">This action delete entry from database. Are you sure you want to continue?\n        </div>\n        <div class="modal-footer">\n            <button tc-data-action="ok" name="ok" class="btn-ok">OK</button>\n            <button tc-data-dismiss="cancel"  name="cancel">Cancel</button>\n        </div>',t.entryListHeader='\n        <div class="header">\n            <span class="title">Your Diary Entries</span>\n            <div class="add-entry">\n                <a id="addEntry" title="Add Entry" class="btn create" role="button">Add Diary Entry</a>\n            </div>\n        </div>',t.entryListItemTemplate='\n            <div class="entry">\n                <p class="title" tc-data-model="title"></p>\n                <div class="content line-clamp">\n                    <p class="block-with-text" tc-data-model="content"></p>\n                </div>\n                <div class="footer">\n                    <div>\n                        <span>Last Modified:</span>&nbsp;\n                        <span tc-data-model="lastModified"></span>\n                    </div>\n                    <div class="dropdown">\n                        <a data-index="" tc-data-action="dropdown-toggle"\n                           class="dropdown-toggle-icon"></a>\n                        <ul class="dropdown-menu">\n                            <li><a tc-data-action="view">View</a></li>\n                            <li><a tc-data-action="edit">Edit</a></li>\n                            <li><a tc-data-action="delete">Delete</a></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>',t.createEntryTemplate='       \n    <div class="flexbox-parent scrollable">\n      <div id="alert" class="alert error">\n          <p class="alert-msg"></p>\n          <a href="javascript:void(0);" class="close-btn">&times;</a>\n      </div>\n      <div class="modal-header">\n          <div id="modal-header-title">\n              <p tc-data-model="lastModified"></p>\n              <input tc-data-model="title" placeholder="Title" class="form-input modal-header-input">\n              \x3c!--<span tc-data-model="title" class="modal-header-title"></span>--\x3e\n          </div>\n          <span tc-data-dismiss="modal" class="action-btn close" role="button" tabindex="0" aria-label="Close"></span>\n      </div>\n      <div class="grow-body modal-body">\n          <div class="create-entry">\n              <textarea placeholder="Dear Diary, " id="entry" autofocus></textarea>\n          </div>\n      </div>\n      <div class="modal-footer">\n        <button tc-data-action="save" type="button" class="btn-save">Save</button>\n        <button tc-data-dismiss="cancel" type="button" class="btn-cancel">Cancel</button>\n    </div>\n    </div>\n',t.viewEntryTemplate='\n     <div  class="scrollable">                \n        <div class="modal-header">\n            <div id="modal-header-title">\n                <p tc-data-model="lastModified"></p>\n                <span tc-data-model="title" class="modal-header-title"></span>\n            </div>\n            <span tc-data-dismiss="modal"  class="action-btn close" role="button" tabindex="0" aria-label="Close"></span>\n        </div>               \n        <div class="grow-body modal-body"> \n            <div class="content-container"></div>                \n        </div>  \n     </div>\n',t.loadingTemplate='\n    <div id="loader" class="loading-container loading-bg">\n        <div class="loading-ring">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    </div>',t.emptyListTemple='<div class="empty-list"><span>No Entry</span></div>',t.navbarHeaderTemplate=' \n    <div>\n      <div class="nav-container">\n          <header class="nav-header">\n          <a class="navicon">\n            <svg xmlns="http://www.w3.org/2000/svg" width="23" height="19" viewBox="0 0 23 19">\n                      <g fill="none">\n                          <g fill="#555">\n                              <rect y="16" width="23" height="3" rx="1.5"></rect>\n                              <rect width="23" height="3" rx="1.5"></rect>\n                              <rect y="8" width="23" height="3" rx="1.5"></rect>\n                          </g>\n                      </g>\n                  </svg>\n          </a>\n          <a href="#/" class="header-logo">\n              <span class="logo-img"></span>            \n          </a>\n          <div class="nav">\n              <ul class="logged-in">\n                  <li>\n                      <a href="#/dashboard">Dashboard</a>\n                  </li>\n                  <li>\n                      <a href="#/profile">Profile</a>\n                  </li>\n                  <li>\n                      <a class="logout-js">Logout</a>\n                  </li>\n              </ul>\n              <ul class="logged-out">\n                  <li>\n                      <a href="#/signin">Sign In</a>\n                  </li>\n                  <li>\n                      <a class="btn signup" href="#/signup">Sign Up</a>\n                  </li>\n              </ul>            \n          </div>\n      </header>     \n      </div>\n      <div class="side-nav">\n        <div class="nav">\n            <span tc-data-dismiss="side-nav"  class="action-btn close" role="button" tabindex="0" aria-label="Close"></span>\n            <ul class="logged-in">\n                <li>\n                    <a href="#/dashboard">Dashboard</a>\n                </li>\n                <li>\n                    <a href="#/profile">Profile</a>\n                </li>\n                <li>\n                    <a class="logout-js">Logout</a>\n                </li>\n            </ul>\n            <ul class="logged-out" style="display: none;">\n                <li>\n                    <a href="#/signin">Sign In</a>\n                </li>\n                <li>\n                    <a href="#/signup">Sign Up</a>\n                </li>\n            </ul>\n        </div>\n    </div>\n    </div>\n',t.floatingButton='\n    <a title="Add Entry" role="button">\n      <div class="floating-button show-on-mobile">\n          <span title="Add Entry" role="button" class="plus">&plus;</span>\n      </div>\n    </a>',t.loadingButtonTemplate='\n    <div id="loading" class="loading-ball-container">     \n        <span class="loading-ball">\n       <span></span>\n       <span></span>\n       <span></span>\n     </span>\n    </div>\n',t.signInPageTemplate='\n    <div class="bg bgimg-1">\n          <div class="overlay">\n              <div class="container signin-top">\n                  <div class="card form-container signin">\n                      <div class="form-login-header">\n                          <a href="#/"><img class="logo" src="images/logo-preview.gif"></a>\n                      </div>\n                      <form method="post" id="signinForm" name="signinForm">\n                          <div class="form-title">\n                              <span>Welcome, please sign in</span>\n                          </div>\n                          <hr>\n                          <div>\n                              <div id="alert" class="alert error">\n                                  <p class="alert-msg"></p>\n                                  <a href="javascript:void(0);" class="close-btn">&times;</a>\n                              </div>\n                              <label for="email"><b>Username</b></label>\n                              <input class="form-input" id="email" type="email" placeholder="Enter Email" name="email"\n                                     required>\n  \n                              <label for="password"><b>Password</b></label>\n                              <input class="form-input" id="password" type="password" placeholder="Enter Password"\n                                     name="password"\n                                     required>\n                              <button class="btn fit" type="button">                          \n                                  <span>Login</span>\n                              </button>\n                          </div>\n                          <div class="form-footer">\n                              <p>Don\'t have an account? <a href="#/signup">Sign up</a>.</p>\n                          </div>\n                      </form>\n                  </div>\n              </div>\n          </div>\n      </div>\n',t.signUpPageTemplate='\n    <div class="bg bgimg-1">\n          <div class="overlay">\n          <div class="container signin-top">\n              <div class="form-container card">\n                  <form method="post" id="signupForm" name="signupForm">\n                      <div class="form-title">\n                          <span>Create Account</span>\n                      </div>\n                      <hr>\n                      <div>\n                          <div id="alert" class="alert error">\n                              <p class="alert-msg">Alert Message</p>\n                              <a href="javascript:void(0);" class="close-btn">&times;</a>\n                          </div>\n                          <div class="row-col-2">\n                              <div>\n                                  <label for="first_name"><b>First name</b></label>\n                                  <input class="form-input" id="first_name" type="text" placeholder="First name"\n                                         name="firstName"\n                                         required>\n                              </div>\n                              <div>\n                                  <label for="last_name"><b>Last name</b></label>\n                                  <input class="form-input" id="last_name" type="text" placeholder="Last name"\n                                         name="lastName"\n                                         required>\n                              </div>\n                          </div>\n                          <label for="email"><b>Email</b></label>\n                          <input class="form-input" id="email" type="email" placeholder="Enter Email" name="email"\n                                 required>\n                          <label for="password"><b>Password</b></label>\n                          <input class="form-input" id="password" type="password" placeholder="Enter Password"\n                                 name="password"\n                                 required>\n                          <label for="match-password"><b>Confirm Password</b></label>\n                          <input class="form-input" id="match-password" type="password" placeholder="Confirm Password"\n                                 name="match-password" required>\n                          <hr>\n                          <button type="button" class="btn fit"><span>Register</span></button>\n                      </div>\n                      <div class="form-footer">\n                          <p>Already have an account? <a href="#/signin">Sign in</a>.</p>\n                      </div>\n                  </form>\n              </div>\n          </div>\n      </div>\n      </div>\n',t.homeTemplate=' \n <div>    \n    <div id="navbar"></div>\n    <div class="bg bgimg navbar-top-padding fade-in">\n        <div class="overlay">\n        <div class="about left">\n            <h1>MyDiary</h1>\n            <p>MyDiary is an online personal journal where users can pen down their thoughts and feelings, it\'s simple and convenient in use.</p>\n            <div>\n                <a class="btn get-started" href="#/signup">\n                    Get Started\n                </a>\n            </div>\n            <div class="show-on-mobile">\n                <a class="btn signin " href="#/signin">Sign In</a>\n            </div>\n        </div>\n    </div>\n    </div>\n </div>\n',t.profilePageTemplate=' \n    <div>     \n        <div id="navbar"></div>\n        <div class="main">        \n            <div class="container">\n          <div id="entrySummary" class="entry-summary">\n              <ul>\n                  <li>Total Entries: <span tc-data-model="count"></span></li>\n                  <li>Last Update: <span tc-data-model="lastModified"></span></li>\n              </ul>\n          </div>\n          <div class="section">\n              <section id="reminder">\n                  <div class="section-title">\n                      <span>Reminder Settings</span>\n                  </div>\n                  <hr>\n                  <div class="section-content">\n                      <form id="reminderForm" name="reminderForm">\n                          <div>\n                              <div class="sub-title">\n                                  <span>Set daily reminder</span>\n                              </div>\n                              <div class="row-col-2">\n                                  <div>\n                                      <label>\n                                          FROM\n                                          <select tc-data-model="from" class="form-input" id="from"\n                                                  name="from" required>\n                                              <option disabled selected>From</option>\n                                              <option value="MONDAY">Monday</option>\n                                              <option value="TUESDAY">Tuesday</option>\n                                              <option value="WEDNESDAY">Wednesday</option>\n                                              <option value="THURSDAY">Thursday</option>\n                                              <option value="FRIDAY">Friday</option>\n                                              <option value="SATURDAY">Saturday</option>\n                                              <option value="SUNDAY">Sunday</option>\n                                          </select>\n                                      </label>\n                                  </div>\n                                  <div>\n                                      <label>\n                                          TO\n                                          <select tc-data-model="to" class="form-input" id="to"\n                                                  name="to" required>\n                                              <option disabled selected>To</option>\n                                              <option value="MONDAY">Monday</option>\n                                              <option value="TUESDAY">Tuesday</option>\n                                              <option value="WEDNESDAY">Wednesday</option>\n                                              <option value="THURSDAY">Thursday</option>\n                                              <option value="FRIDAY">Friday</option>\n                                              <option value="SATURDAY">Saturday</option>\n                                              <option value="SUNDAY">Sunday</option>\n                                          </select>\n                                      </label>\n                                  </div>\n                              </div>\n                              <div>\n                                  <label class="show-on-mobile">TIME</label>\n                                  <div class="time-spinner">\n                                      <input name="hours" tc-data-model="hours" id="hours" type="number"\n                                             class="time-input hours"\n                                             data-unit="hours"\n                                             placeholder="HH" autocomplete="off">\n                                      <span class="time-delimiter">&colon;</span>\n                                      <input name="minutes" tc-data-model="minutes" id="minutes" type="number"\n                                             class="time-input minutes"\n                                             placeholder="MM" data-unit="minutes" autocomplete="off">\n                                      <div class="time-controller">\n                                              <span class="time-controller-btn up" data-direction="up">\n                                              </span>\n                                          <span class="time-controller-btn down" data-direction="down">\n                                              </span>\n                                      </div>\n                                  </div>\n                              </div>\n                              <div class="btn-container">\n                                  <button tc-data-action="reminder" type="button" class="btn right">Set Reminder</button>\n                              </div>\n                          </div>\n                      </form>\n                  </div>\n              </section>\n              <section id="profile">\n                  <div class="section-title">\n                      <span>Manage Profile</span>\n                  </div>\n                  <hr>\n                  <div class="section-content">\n                      <form id="signupForm" name="signupForm">\n                          <div>\n                              <div class="row-col-2">\n                                  <div>\n                                      <label for="first_name"><b>First name</b></label>\n                                      <input tc-data-model="firstName" class="form-input" id="first_name" type="text"\n                                             placeholder="First name"\n                                             name="firstName"\n                                             required>\n                                  </div>\n                                  <div>\n                                      <label for="last_name"><b>Last name</b></label>\n                                      <input tc-data-model="lastName" class="form-input" id="last_name" type="text"\n                                             placeholder="Last name"\n                                             name="lastName"\n                                             required>\n                                  </div>\n                              </div>\n                              <label for="email"><b>Email</b></label>\n                              <input tc-data-model="email" class="form-input" id="email" type="email"\n                                     placeholder="Enter Email" name="email"\n                                     required>\n                              <div class="btn-container">\n                                  <button type="submit" class="btn right">Update Profile</button>\n                              </div>\n                          </div>\n                      </form>\n                  </div>\n              </section>\n  \n              <section id="changePassword">\n                  <div class="section-title">\n                      <span>Change Password</span>\n                  </div>\n                  <hr>\n                  <div class="section-content">\n                      <form id="changePasswordForm">\n                          <label for="password"><b>Old Password</b></label>\n                          <input class="form-input" id="prev-password" type="password" placeholder="Old Password"\n                                 name="oldPassword"\n                                 required>\n                          <label for="password"><b>New Password</b></label>\n                          <input class="form-input" id="password" type="password" placeholder="New Password"\n                                 name="newPassword"\n                                 required>\n                          <label for="match-password"><b>Confirm Password</b></label>\n                          <input class="form-input" id="match-password" type="password" placeholder="Confirm Password"\n                                 name="matchPassword" required>\n                          <div class="btn-container">\n                              <button tc-data-action="change-password" type="submit" class="btn right">Change Password\n                              </button>\n                          </div>\n                      </form>\n                  </div>\n              </section>\n          </div>\n        </div>\n        </div>\n    </div>\n',t.notFoundTemplate="<div></div>"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var i=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.sender=t,this.listeners=[]}return r(e,[{key:"attach",value:function(){return function(e){this.listeners.push(e)}}()},{key:"notify",value:function(){return function(e){var t=void 0;for(t=0;t<this.listeners.length;t+=1)this.listeners[t](this.sender,e)}}()}]),e}();t.default=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getEntryUrlByID=function(e){return o+"/"+e};var r=t.baseUrl="http://localhost:3000",i=t.apiVersion="/api/v1",a=t.apiUrl=r+i,o=(t.userProfile=a+"/account/me/detailed",t.changePassword=a+"/account/change-password",t.reminderUrl=a+"/account/user/reminder/settings",t.registrationEndpoint=a+"/auth/signup",t.authenticationEndpoint=a+"/auth/login",t.entriesEndpoint=a+"/entries")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),a=function(e){return e&&e.__esModule?e:{default:e}}(n(3));var o=new(function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.event=new a.default}return r(e,[{key:"request",value:function(){return function(e,t,n){var r=this,a={method:e,body:JSON.stringify(n),headers:{"Content-Type":"application/json"}},o=(0,i.getToken)();return o&&(a.headers["X-Access-Token"]=o),fetch(t,a).then(function(e){var t=e.status;if(401===t)return r.event.notify({}),null;if(t<400||t>=600){var n=e.headers.get("X-Access-Token");return n&&(0,i.storeToken)(n),Promise.resolve(e)}return Promise.resolve(e.json()).then(function(e){return Promise.reject(new Error(e.message))})}).then(function(e){return e.json()})}}()},{key:"get",value:function(){return function(e){return this.request("GET",e)}}()},{key:"post",value:function(){return function(e,t){return this.request("POST",e,t)}}()},{key:"put",value:function(){return function(e,t){return this.request("PUT",e,t)}}()},{key:"delete",value:function(){return function(e,t){return this.request("DELETE",e,t)}}()}]),e}());t.default=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=_e(n(10)),i=_e(n(15)),a=_e(n(29)),o=_e(n(30)),u=_e(n(31)),l=_e(n(32)),s=_e(n(33)),d=_e(n(34)),c=_e(n(35)),f=_e(n(36)),v=_e(n(13)),p=_e(n(37)),m=_e(n(12)),h=_e(n(38)),y=_e(n(39)),g=_e(n(40)),b=_e(n(41)),_=_e(n(42)),w=_e(n(43)),E=_e(n(44)),M=_e(n(45)),A=_e(n(18)),S=_e(n(19)),P=_e(n(46)),O=_e(n(47)),T=_e(n(48)),k=_e(n(17)),x=_e(n(49)),C=_e(n(50)),F=_e(n(20)),D=_e(n(51)),$=_e(n(52)),L=_e(n(53)),R=_e(n(54)),j=_e(n(55)),I=_e(n(56)),N=_e(n(57)),V=_e(n(58)),U=_e(n(16)),B=_e(n(59)),q=_e(n(60)),H=_e(n(61)),Z=_e(n(62)),G=_e(n(63)),K=_e(n(64)),Y=_e(n(65)),z=_e(n(66)),W=_e(n(67)),J=_e(n(68)),X=_e(n(69)),Q=_e(n(70)),ee=_e(n(71)),te=_e(n(72)),ne=_e(n(73)),re=_e(n(74)),ie=_e(n(75)),ae=_e(n(76)),oe=_e(n(77)),ue=n(78),le=_e(ue),se=_e(n(21)),de=_e(n(22)),ce=_e(n(79)),fe=_e(n(80)),ve=_e(n(81)),pe=_e(n(82)),me=_e(n(83)),he=_e(n(23)),ye=_e(n(84)),ge=_e(n(85)),be=_e(n(11));function _e(e){return e&&e.__esModule?e:{default:e}}var we={version:"10.4.0",toDate:r.default,toFloat:i.default,toInt:a.default,toBoolean:o.default,equals:u.default,contains:l.default,matches:s.default,isEmail:d.default,isURL:c.default,isMACAddress:f.default,isIP:v.default,isIPRange:p.default,isFQDN:m.default,isBoolean:h.default,isAlpha:y.default,isAlphanumeric:g.default,isNumeric:b.default,isPort:_.default,isLowercase:w.default,isUppercase:E.default,isAscii:M.default,isFullWidth:A.default,isHalfWidth:S.default,isVariableWidth:P.default,isMultibyte:O.default,isSurrogatePair:T.default,isInt:k.default,isFloat:x.default,isDecimal:C.default,isHexadecimal:F.default,isDivisibleBy:D.default,isHexColor:$.default,isISRC:L.default,isMD5:R.default,isHash:j.default,isJSON:I.default,isEmpty:N.default,isLength:V.default,isByteLength:U.default,isUUID:B.default,isMongoId:q.default,isAfter:H.default,isBefore:Z.default,isIn:G.default,isCreditCard:K.default,isISIN:Y.default,isISBN:z.default,isISSN:W.default,isMobilePhone:J.default,isPostalCode:le.default,isPostalCodeLocales:ue.locales,isCurrency:X.default,isISO8601:Q.default,isRFC3339:ee.default,isISO31661Alpha2:te.default,isISO31661Alpha3:ne.default,isBase64:re.default,isDataURI:ie.default,isMimeType:ae.default,isLatLong:oe.default,ltrim:se.default,rtrim:de.default,trim:ce.default,escape:fe.default,unescape:ve.default,stripLow:pe.default,whitelist:me.default,blacklist:he.default,isWhitelisted:ye.default,normalizeEmail:ge.default,toString:be.default};t.default=we,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments[1];for(var n in t)void 0===e[n]&&(e[n]=t[n]);return e},e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(4),a=function(e){return e&&e.__esModule?e:{default:e}}(n(5));var o=new(function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.account=null,this.authenticated=!1}return r(e,[{key:"authenticate",value:function(){return function(e){this.account=e,this.authenticated=null!==e}}()},{key:"identify",value:function(){return function(e){var t=this;return!0===e&&(this.account=void 0,this.authenticated=!1),this.account?Promise.resolve(this.account):a.default.get(i.userProfile).then(function(e){return t.account=e,t.authenticated=null!==t.account,Promise.resolve(t.account)})}}()},{key:"isAuthenticated",value:function(){return function(){return this.authenticated}}()}]),e}());t.default=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});for(var r,i=t.alpha={"en-US":/^[A-Z]+$/i,"bg-BG":/^[А-Я]+$/i,"cs-CZ":/^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,"da-DK":/^[A-ZÆØÅ]+$/i,"de-DE":/^[A-ZÄÖÜß]+$/i,"el-GR":/^[Α-ω]+$/i,"es-ES":/^[A-ZÁÉÍÑÓÚÜ]+$/i,"fr-FR":/^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,"it-IT":/^[A-ZÀÉÈÌÎÓÒÙ]+$/i,"nb-NO":/^[A-ZÆØÅ]+$/i,"nl-NL":/^[A-ZÁÉËÏÓÖÜÚ]+$/i,"nn-NO":/^[A-ZÆØÅ]+$/i,"hu-HU":/^[A-ZÁÉÍÓÖŐÚÜŰ]+$/i,"pl-PL":/^[A-ZĄĆĘŚŁŃÓŻŹ]+$/i,"pt-PT":/^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]+$/i,"ru-RU":/^[А-ЯЁ]+$/i,"sk-SK":/^[A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,"sr-RS@latin":/^[A-ZČĆŽŠĐ]+$/i,"sr-RS":/^[А-ЯЂЈЉЊЋЏ]+$/i,"sv-SE":/^[A-ZÅÄÖ]+$/i,"tr-TR":/^[A-ZÇĞİıÖŞÜ]+$/i,"uk-UA":/^[А-ЩЬЮЯЄIЇҐі]+$/i,ar:/^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/},a=t.alphanumeric={"en-US":/^[0-9A-Z]+$/i,"bg-BG":/^[0-9А-Я]+$/i,"cs-CZ":/^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,"da-DK":/^[0-9A-ZÆØÅ]+$/i,"de-DE":/^[0-9A-ZÄÖÜß]+$/i,"el-GR":/^[0-9Α-ω]+$/i,"es-ES":/^[0-9A-ZÁÉÍÑÓÚÜ]+$/i,"fr-FR":/^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,"it-IT":/^[0-9A-ZÀÉÈÌÎÓÒÙ]+$/i,"hu-HU":/^[0-9A-ZÁÉÍÓÖŐÚÜŰ]+$/i,"nb-NO":/^[0-9A-ZÆØÅ]+$/i,"nl-NL":/^[0-9A-ZÁÉËÏÓÖÜÚ]+$/i,"nn-NO":/^[0-9A-ZÆØÅ]+$/i,"pl-PL":/^[0-9A-ZĄĆĘŚŁŃÓŻŹ]+$/i,"pt-PT":/^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]+$/i,"ru-RU":/^[0-9А-ЯЁ]+$/i,"sk-SK":/^[0-9A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,"sr-RS@latin":/^[0-9A-ZČĆŽŠĐ]+$/i,"sr-RS":/^[0-9А-ЯЂЈЉЊЋЏ]+$/i,"sv-SE":/^[0-9A-ZÅÄÖ]+$/i,"tr-TR":/^[0-9A-ZÇĞİıÖŞÜ]+$/i,"uk-UA":/^[0-9А-ЩЬЮЯЄIЇҐі]+$/i,ar:/^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/},o=t.decimal={"en-US":".",ar:"٫"},u=t.englishLocales=["AU","GB","HK","IN","NZ","ZA","ZM"],l=0;l<u.length;l++)i[r="en-"+u[l]]=i["en-US"],a[r]=a["en-US"],o[r]=o["en-US"];for(var s,d=t.arabicLocales=["AE","BH","DZ","EG","IQ","JO","KW","LB","LY","MA","QM","QA","SA","SD","SY","TN","YE"],c=0;c<d.length;c++)i[s="ar-"+d[c]]=i.ar,a[s]=a.ar,o[s]=o.ar;for(var f=t.dotDecimal=[],v=t.commaDecimal=["bg-BG","cs-CZ","da-DK","de-DE","el-GR","es-ES","fr-FR","it-IT","hu-HU","nb-NO","nn-NO","nl-NL","pl-Pl","pt-PT","ru-RU","sr-RS@latin","sr-RS","sv-SE","tr-TR","uk-UA"],p=0;p<f.length;p++)o[f[p]]=o["en-US"];for(var m=0;m<v.length;m++)o[v[m]]=",";i["pt-BR"]=i["pt-PT"],a["pt-BR"]=a["pt-PT"],o["pt-BR"]=o["pt-PT"]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),e=Date.parse(e),isNaN(e)?null:new Date(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t.default=function(e){"object"===(void 0===e?"undefined":r(e))&&null!==e?e="function"==typeof e.toString?e.toString():"[object Object]":(null===e||void 0===e||isNaN(e)&&!e.length)&&(e="");return String(e)},e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){(0,r.default)(e),(t=(0,i.default)(t,o)).allow_trailing_dot&&"."===e[e.length-1]&&(e=e.substring(0,e.length-1));for(var n=e.split("."),a=0;a<n.length;a++)if(n[a].length>63)return!1;if(t.require_tld){var u=n.pop();if(!n.length||!/^([a-z\u00a1-\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(u))return!1;if(/[\s\u2002-\u200B\u202F\u205F\u3000\uFEFF\uDB40\uDC20]/.test(u))return!1}for(var l,s=0;s<n.length;s++){if(l=n[s],t.allow_underscores&&(l=l.replace(/_/g,"")),!/^[a-z\u00a1-\uffff0-9-]+$/i.test(l))return!1;if(/[\uff01-\uff5e]/.test(l))return!1;if("-"===l[0]||"-"===l[l.length-1])return!1}return!0};var r=a(n(0)),i=a(n(7));function a(e){return e&&e.__esModule?e:{default:e}}var o={require_tld:!0,allow_underscores:!1,allow_trailing_dot:!1};e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";(0,r.default)(t);n=String(n);if(!n)return e(t,4)||e(t,6);if("4"===n){if(!i.test(t))return!1;var o=t.split(".").sort(function(e,t){return e-t});return o[3]<=255}if("6"===n){var u=t.split(":"),l=!1,s=e(u[u.length-1],4),d=s?7:8;if(u.length>d)return!1;if("::"===t)return!0;"::"===t.substr(0,2)?(u.shift(),u.shift(),l=!0):"::"===t.substr(t.length-2)&&(u.pop(),u.pop(),l=!0);for(var c=0;c<u.length;++c)if(""===u[c]&&c>0&&c<u.length-1){if(l)return!1;l=!0}else if(s&&c===u.length-1);else if(!a.test(u[c]))return!1;return l?u.length>=1:u.length===d}return!1};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})$/,a=/^[0-9A-F]{1,4}$/i;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),a=n(2),o=l(n(8)),u=l(n(24));function l(e){return e&&e.__esModule?e:{default:e}}var s=new(function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.vieewElement=null,this.childView=(0,i.htmlToElement)(a.navbarHeaderTemplate)}return r(e,null,[{key:"logoutHandle",value:function(){return function(){u.default.logout(),(0,i.gotoUrl)("#/")}}()}]),r(e,[{key:"init",value:function(){return function(){var t=this,n=this.childView.querySelectorAll(".logout-js");n[0].onclick=e.logoutHandle,n[1].onclick=e.logoutHandle,this.childView.querySelector('[tc-data-dismiss="side-nav"]').onclick=function(){t.hideOrShowSideNav("hide")},this.childView.querySelector(".navicon").onclick=function(){t.hideOrShowSideNav("show")},this.childView.querySelector(".side-nav").onclick=function(e){e.target.classList.contains("nav")||t.hideOrShowSideNav("hide")}}}()},{key:"render",value:function(){return function(e){this.vieewElement=e?e.querySelector("#navbar"):i.DOMDoc.getElementById("navbar"),this.childView.style.display="flex";var t=this.childView.querySelectorAll(".logged-out"),n=this.childView.querySelectorAll(".logged-in");o.default.isAuthenticated()?(n[0].style.display="flex",t[0].style.display="none",n[1].style.display="block",t[1].style.display="none"):(n[0].style.display="none",t[0].style.display="flex",n[1].style.display="none",t[1].style.display="block"),this.vieewElement.appendChild(this.childView)}}()},{key:"hideOrShowSideNav",value:function(){return function(e){var t=this.childView.querySelector(".side-nav"),n=t.querySelector(".nav");"hide"===e?(t.style.width="0",n.style.width="0"):(t.style.width="100vw",n.style.width="250px")}}()},{key:"initialize",value:function(){return function(){this.render()}}()},{key:"getViewElement",value:function(){return function(){return this.childView}}()}]),e}());s.init(),t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),parseFloat(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t.default=function(e,t){(0,i.default)(e);var n=void 0,a=void 0;"object"===(void 0===t?"undefined":r(t))?(n=t.min||0,a=t.max):(n=arguments[1],a=arguments[2]);var o=encodeURI(e).split(/%..|./).length-1;return o>=n&&(void 0===a||o<=a)};var i=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){(0,r.default)(e);var n=(t=t||{}).hasOwnProperty("allow_leading_zeroes")&&!t.allow_leading_zeroes?i:a,o=!t.hasOwnProperty("min")||e>=t.min,u=!t.hasOwnProperty("max")||e<=t.max,l=!t.hasOwnProperty("lt")||e<t.lt,s=!t.hasOwnProperty("gt")||e>t.gt;return n.test(e)&&o&&u&&l&&s};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^(?:[-+]?(?:0|[1-9][0-9]*))$/,a=/^[-+]?[0-9]+$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.fullWidth=void 0,t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=t.fullWidth=/[^\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.halfWidth=void 0,t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=t.halfWidth=/[\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^[0-9A-F]+$/i;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){(0,r.default)(e);var n=t?new RegExp("^["+t+"]+","g"):/^\s+/g;return e.replace(n,"")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){(0,r.default)(e);for(var n=t?new RegExp("["+t+"]"):/\s/,i=e.length-1;i>=0&&n.test(e[i]);i--);return i<e.length?e.substr(0,i+1):e};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,r.default)(e),e.replace(new RegExp("["+t+"]+","g"),"")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=l(n(5)),a=l(n(8)),o=n(1),u=n(4);function l(e){return e&&e.__esModule?e:{default:e}}var s=new(function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.account=t,i.default.event.attach(function(){n.logout()})}return r(e,[{key:"logout",value:function(){return function(){(0,o.clearToken)(),this.account.authenticate(null)}}()},{key:"login",value:function(){return function(e){var t=this;return i.default.post(u.authenticationEndpoint,e).then(function(e){return(0,o.storeToken)(e.token),t.account.identify(!0)})}}()}]),e}())(a.default);t.default=s},function(e,t,n){"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(26),o=p(n(89)),u=n(1),l=p(n(90)),s=p(n(91)),d=p(n(92)),c=p(n(93)),f=p(n(8)),v=p(n(94));function p(e){return e&&e.__esModule?e:{default:e}}function m(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var h=function(){function e(){m(this,e),this.viewElement=u.DOMDoc.getElementById("main")}return i(e,[{key:"addChild",value:function(){return function(e){null!=e&&this.viewElement.appendChild(e)}}()},{key:"removeChild",value:function(){return function(e){try{null!==e&&this.viewElement.removeChild(e)}catch(e){console.log(e.message)}}}()},{key:"removeAllChildren",value:function(){return function(){for(var e=this.viewElement.children,t=0;t<e.length;t+=1)this.removeChild(e[t])}}()},{key:"getViewElement",value:function(){return function(){return this.viewElement}}()}]),e}(),y=new(function(){function e(t){m(this,e),this.mainView=t;var n={Type:a.EntryListViewAdapter,params:null},r={Type:a.EntryListView,params:[n]},i={Type:a.EntryListController,params:[r]};this.loadingView=new o.default,l.default.registerRoutes("/dashboard",i,!0),l.default.registerRoutes("/profile",d.default,!0),l.default.registerRoutes("/signin",s.default,!1),l.default.registerRoutes("/signup",v.default,!1),l.default.registerRoutes("/",c.default,!1),l.default.registerRoutes("*",c.default,!1)}return i(e,[{key:"route",value:function(){return function(){var e=this;return function(){var t=u.windowInterface.location.hash.slice(1)||"/",n=l.default.routes[t]||l.default.routes["*"];if(n&&n.controller){e.mainView.removeAllChildren();var r=n.controller,i=n.requireAuth,a=e.createInstant(r);i?f.default.identify().then(function(){e.renderView(a)}).catch(function(){(0,u.gotoUrl)("#/signin")}):e.renderView(a)}}}}()},{key:"renderView",value:function(){return function(e){var t=this;e.onReady?(this.mainView.addChild(this.loadingView.getViewElement()),e.onReady.attach(function(){var n=t.mainView.getViewElement().querySelector("#loader");t.mainView.removeChild(n),t.mainView.addChild(e.getViewElement())})):this.mainView.addChild(e.getViewElement()),e.initialize&&e.initialize()}}()},{key:"removeOldElement",value:function(){return function(e,t){if(e.oldURL){var n=e.oldURL.indexOf("#"),r="/";n>0&&(r=e.oldURL.substring(n+1));var i=t[r];if(i&&i.controller){var a=i.controller;this.mainView.removeChild(a.getViewElement())}}}}()},{key:"getArguments",value:function(){return function(e){var t=this,n=[];if(!(e instanceof Array))throw Error("params must be an array ");return e.forEach(function(e){var i=null,a=void 0===e?"undefined":r(e);i="object"===a&&e.Type?t.createInstant(e):"function"===a?new e:e,n.push(i)}),n}}()},{key:"createInstant",value:function(){return function(e){var t=[],n=e.params,r=e.Type;return n&&(t=this.getArguments(n,t)),r&&"function"==typeof r?new(Function.prototype.bind.apply(r,[null].concat(function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(t)))):"function"==typeof e?new e:r||e}}()}]),e}())(new h);u.windowInterface.addEventListener("hashchange",y.route()),u.DOMDoc.addEventListener("DOMContentLoaded",y.route())},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EntryListController=t.EntryListViewAdapter=t.EntryListView=void 0;var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),a=n(2),o=m(n(27)),u=m(n(3)),l=m(n(28)),s=m(n(86)),d=m(n(87)),c=n(4),f=m(n(5)),v=m(n(14)),p=m(n(88));function m(e){return e&&e.__esModule?e:{default:e}}function h(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}t.EntryListView=function(){function e(t){var n=this;h(this,e),this.adapter=t,this.root=i.DOMDoc.createElement("div"),this.root.classList.add("main"),this.viewElement=i.DOMDoc.createElement("div"),this.viewElement.setAttribute("id","entries"),this.viewElement.classList.add("entries-container"),this.addButtonClicked=new u.default(this),this.adapter.registerChangeObserver(function(){n.render()})}return r(e,null,[{key:"contains",value:function(){return function(e,t){return e.filter(function(e){return e.id===t.id}).length>0}}()}]),r(e,[{key:"getTableBody",value:function(){return function(){var e=this.adapter,t=i.DOMDoc.createElement("div");if(t.classList.add("entry-list"),e.getSize()>0)for(var n=0;n<e.getSize();n+=1){var r=e.getViewItem(n);t.appendChild(r.getViewElement())}else t.appendChild((0,i.htmlToElement)(a.emptyListTemple.trim()));return t}}()},{key:"render",value:function(){return function(){var e=this,t=function(){e.addButtonClicked.notify({})},n=(0,i.htmlToElement)(a.entryListHeader),r=(0,i.htmlToElement)(a.floatingButton),o=this.getTableBody();this.viewElement.innerHTML="";var u=i.DOMDoc.createElement("div");u.setAttribute("id","navbar"),this.viewElement.appendChild(u),this.viewElement.appendChild(n),this.viewElement.appendChild(o),this.viewElement.appendChild(r),this.root.appendChild(this.viewElement),v.default.render(this.viewElement),this.viewElement.querySelector("#addEntry").onclick=t,r.onclick=t}}()},{key:"getAdapter",value:function(){return function(){return this.adapter}}()},{key:"getViewElement",value:function(){return function(){return this.root}}()}]),e}(),t.EntryListViewAdapter=function(){function e(){h(this,e),this.data=[],this.viewItems=[],this.notifyChangeObserver=new u.default(this)}return r(e,[{key:"getSize",value:function(){return function(){return this.viewItems?this.viewItems.length:0}}()},{key:"getViewItem",value:function(){return function(e){var t=this.viewItems[e];return t.setPosition(e),t}}()},{key:"addItem",value:function(){return function(t){var n=this,r=new o.default(t);r.clickAction.attach(function(a,o){if(o&&"delete"===o.action){var u=new s.default(r.getModel());u.actionButtonClicked.attach(function(e,a){"ok"===a.action&&("success"===a.status?n.removeItem(t):(0,i.showToast)("Unable to delete "+r.getModel(),"error"))}),p.default.open(u)}else{var d=new l.default(o.model,o.action);d.buttonClicked.attach(e.registerButtonLister(o)),p.default.open(d)}}),this.data.push(t),this.viewItems.push(r),this.notifyChangeObservers()}}()},{key:"addItems",value:function(){return function(e){var t=this;this.updateList(e,function(e){return t.addItem(e)})}}()},{key:"removeItem",value:function(){return function(e){this.viewItems=this.viewItems.filter(function(t){return t.getModel().id!==e.id}),this.data=this.data.filter(function(t){return e.id!==t.id}),this.notifyChangeObservers()}}()},{key:"removeItems",value:function(){return function(e){var t=this;this.updateList(e,function(e){return t.removeItem(e)})}}()},{key:"updateList",value:function(){return function(e,t){if(null!==t){for(var n=0;n<e.length;n+=1)t(e[n]);this.notifyChangeObservers()}}}()},{key:"notifyChangeObservers",value:function(){return function(){this.notifyChangeObserver.notify()}}()},{key:"registerChangeObserver",value:function(){return function(e){this.notifyChangeObserver.attach(e)}}()}],[{key:"registerButtonLister",value:function(){return function(e){return function(t,n){var r=n.entry,i=e.model;i.title=r.title,i.content=r.content,i.lastModified=r.lastModified,i.createdDate=r.createdDate,p.default.getModalView().dismiss()}}}()}]),e}(),t.EntryListController=function(){function e(t){var n=this;h(this,e),this.entryTableView=t,t.addButtonClicked.attach(function(){var e=new l.default;e.buttonClicked.attach(function(e,t){p.default.getModalView().dismiss(),n.entryTableView.getAdapter().addItem(new d.default(t.entry))}),p.default.open(e)}),this.onReady=new u.default(this)}return r(e,[{key:"initialize",value:function(){return function(){var e=this,t=this.entryTableView.getAdapter();f.default.get(c.entriesEndpoint).then(function(n){for(var r=n.entries,i=[],a=0;a<r.length;a+=1)i.push(new d.default(r[a]));t.addItems(i),e.onReady.notify()}).catch(function(){e.onReady.notify()}),this.entryTableView.render()}}()},{key:"getViewElement",value:function(){return function(){return this.entryTableView.getViewElement()}}()}]),e}()},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(2),a=n(1),o=function(e){return e&&e.__esModule?e:{default:e}}(n(3));var u=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);var n=this,r=""+i.entryListItemTemplate.trim();r=(0,a.formatter)(r,t),this.view=(0,a.htmlToElement)(r),this.model=t,this.clickAction=new o.default(this),this.updateView(),this.model.valueChangeObserver.attach(function(){n.updateView()}),this.registerDropDownItemClick(),this.handleViewClick()}return r(e,[{key:"handleViewClick",value:function(){return function(){var e=this;this.view.onclick=function(t){var n=t.target;return n.classList.contains("dropdown-toggle")?null:n.getAttribute("tc-data-action")?null:e.clickAction.notify({action:"view",model:e.model})}}}()},{key:"registerDropDownItemClick",value:function(){return function(){for(var t=this,n=this.view.querySelectorAll("[tc-data-action]"),r=function(r){var i=n[r],a=i.getAttribute("tc-data-action");"view"!==a&&"edit"!==a&&"delete"!==a||(i.onclick=function(){t.clickAction.notify({action:a,model:t.model}),e.dismissDropDownMenu()})},i=0;i<n.length;i+=1)r(i);this.view.querySelector('[tc-data-action="dropdown-toggle"]').onclick=function(t){e.showDropDownMenu(t)}}}()},{key:"getModel",value:function(){return function(){return this.model}}()},{key:"setPosition",value:function(){return function(e){for(var t=this.view.querySelectorAll("[data-index]"),n=0;n<t.length;n+=1)t[n].setAttribute("data-index",e)}}()},{key:"getViewElement",value:function(){return function(){return this.view}}()},{key:"updateView",value:function(){return function(){var e=this.view.querySelectorAll("[tc-data-model]"),t=void 0;for(t=0;t<e.length;t+=1){var n=e[t],r=n.getAttribute("tc-data-model");n.innerHTML=(0,a.getValue)(this.model,r)}}}()}],[{key:"showDropDownMenu",value:function(){return function(t){var n=t.target.nextElementSibling,r=function t(n){n.target.matches(".dropdown-toggle-icon")||(e.dismissDropDownMenu(),a.windowInterface.removeEventListener("click",t))};n.classList.contains("open")?n.classList.remove("open"):(e.dismissDropDownMenu(),n.classList.add("open")),a.windowInterface.addEventListener("click",r)}}()},{key:"dismissDropDownMenu",value:function(){return function(){for(var e=a.DOMDoc.getElementsByClassName("dropdown-menu"),t=0;t<e.length;t+=1){var n=e[t];n.classList.contains("open")&&n.classList.remove("open")}}}()}]),e}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),a=n(2),o=d(n(3)),u=n(4),l=d(n(5)),s=n(95);function d(e){return e&&e.__esModule?e:{default:e}}var c=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.mode=n||"create",this.viewElement="view"===this.mode?(0,i.htmlToElement)(a.viewEntryTemplate.trim()):(0,i.htmlToElement)(a.createEntryTemplate.trim()),this.buttonClicked=new o.default(this),this.model=t,this.prepareView(),this.buttonClickHandler()}return r(e,[{key:"prepareView",value:function(){return function(){var e=Object.assign({},this.model),t=e&&e.lastModified?e.lastModified:(0,s.getTimeString)(new Date);e.lastModified=(0,i.trimDate)(t);var n=this.viewElement.querySelectorAll("[tc-data-model]");if((0,i.bindPropertiesToElement)(n,e),"view"!==this.mode){var r=this.viewElement.querySelector("textarea");r.value=e&&e.content?e.content:"",r.focus()}else for(var a=this.viewElement.querySelector(".content-container"),o=e.content.split(/[\r\n]+/),u=0;u<o.length;u+=1){var l=i.DOMDoc.createElement("p");l.innerHTML=o[u],a.appendChild(l)}}}()},{key:"actionButtonVisibility",value:function(){return function(e){var t=this.viewElement.querySelector(".modal-footer");"hide"===e?(t.style.opacity=0,t.style.visibility="hidden"):(t.style.opacity=1,t.style.visibility="block")}}()},{key:"buttonClickHandler",value:function(){return function(){var e=this,t=this.viewElement.querySelector('[tc-data-action="save"]');t&&(t.onclick=function(){var t=e.viewElement.querySelector("textarea").value,n=e.viewElement.querySelector('[tc-data-model="title"]').value;if("edit"===e.mode){var r=Object.assign({},e.model);r.content=t,r.title=n,e.consumeApiResult(l.default.put((0,u.getEntryUrlByID)(e.model.id),r),!0)}else"create"===e.mode?e.consumeApiResult(l.default.post(u.entriesEndpoint,{content:t,title:n}),!1):e.buttonClicked.notify()})}}()},{key:"getViewElement",value:function(){return function(){return this.viewElement}}()},{key:"consumeApiResult",value:function(){return function(e,t){var n=this;e.then(function(e){t&&(0,i.showToast)("Entry updated","success"),n.buttonClicked.notify(e)}).catch(function(e){var n=t?"Unable to update entry":"Unable to save entry";(0,i.showToast)(n+"<br>"+e.message,"error")})}}()}],[{key:"splitByNewLine",value:function(){return function(e){for(var t=[],n=0,r=0;r<e.length-1;r+=1)if(10===e.charCodeAt(r)&&10===e.charCodeAt(r+1)){var i=e.substring(n,r).trim();n=r+1,t.push(i)}return t.push(e.substring(n).trim()),t}}()}]),e}();t.default=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,r.default)(e),parseInt(e,t||10)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if((0,r.default)(e),t)return"1"===e||"true"===e;return"0"!==e&&"false"!==e&&""!==e};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,r.default)(e),e===t};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,r.default)(e),e.indexOf((0,i.default)(t))>=0};var r=a(n(0)),i=a(n(11));function a(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){(0,r.default)(e),"[object RegExp]"!==Object.prototype.toString.call(t)&&(t=new RegExp(t,n));return t.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if((0,r.default)(e),(t=(0,i.default)(t,l)).require_display_name||t.allow_display_name){var n=e.match(s);if(n)e=n[1];else if(t.require_display_name)return!1}var u=e.split("@"),m=u.pop(),h=u.join("@"),y=m.toLowerCase();if("gmail.com"===y||"googlemail.com"===y){var g=(h=h.toLowerCase()).split("+")[0];if(!(0,a.default)(g.replace(".",""),{min:6,max:30}))return!1;for(var b=g.split("."),_=0;_<b.length;_++)if(!c.test(b[_]))return!1}if(!(0,a.default)(h,{max:64})||!(0,a.default)(m,{max:254}))return!1;if(!(0,o.default)(m,{require_tld:t.require_tld}))return!1;if('"'===h[0])return h=h.slice(1,h.length-1),t.allow_utf8_local_part?p.test(h):f.test(h);for(var w=t.allow_utf8_local_part?v:d,E=h.split("."),M=0;M<E.length;M++)if(!w.test(E[M]))return!1;return!0};var r=u(n(0)),i=u(n(7)),a=u(n(16)),o=u(n(12));function u(e){return e&&e.__esModule?e:{default:e}}var l={allow_display_name:!1,require_display_name:!1,allow_utf8_local_part:!0,require_tld:!0},s=/^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\.\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\,\.\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]*<(.+)>$/i,d=/^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~]+$/i,c=/^[a-z\d]+$/,f=/^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f]))*$/i,v=/^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+$/i,p=/^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*$/i;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if((0,r.default)(e),!e||e.length>=2083||/[\s<>]/.test(e))return!1;if(0===e.indexOf("mailto:"))return!1;t=(0,o.default)(t,l);var n=void 0,u=void 0,d=void 0,f=void 0,v=void 0,p=void 0,m=void 0,h=void 0;if(m=e.split("#"),e=m.shift(),m=e.split("?"),e=m.shift(),(m=e.split("://")).length>1){if(n=m.shift(),t.require_valid_protocol&&-1===t.protocols.indexOf(n))return!1}else{if(t.require_protocol)return!1;t.allow_protocol_relative_urls&&"//"===e.substr(0,2)&&(m[0]=e.substr(2))}if(""===(e=m.join("://")))return!1;if(m=e.split("/"),""===(e=m.shift())&&!t.require_host)return!0;if((m=e.split("@")).length>1&&(u=m.shift()).indexOf(":")>=0&&u.split(":").length>2)return!1;f=m.join("@"),p=null,h=null;var y=f.match(s);y?(d="",h=y[1],p=y[2]||null):(m=f.split(":"),d=m.shift(),m.length&&(p=m.join(":")));if(null!==p&&(v=parseInt(p,10),!/^[0-9]+$/.test(p)||v<=0||v>65535))return!1;if(!((0,a.default)(d)||(0,i.default)(d,t)||h&&(0,a.default)(h,6)))return!1;if(d=d||h,t.host_whitelist&&!c(d,t.host_whitelist))return!1;if(t.host_blacklist&&c(d,t.host_blacklist))return!1;return!0};var r=u(n(0)),i=u(n(12)),a=u(n(13)),o=u(n(7));function u(e){return e&&e.__esModule?e:{default:e}}var l={protocols:["http","https","ftp"],require_tld:!0,require_protocol:!1,require_host:!0,require_valid_protocol:!0,allow_underscores:!1,allow_trailing_dot:!1,allow_protocol_relative_urls:!1},s=/^\[([^\]]+)\](?::([0-9]+))?$/;function d(e){return"[object RegExp]"===Object.prototype.toString.call(e)}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];if(e===r||d(r)&&r.test(e))return!0}return!1}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){(0,r.default)(e);var t=e.split("/");if(2!==t.length)return!1;if(!o.test(t[1]))return!1;if(t[1].length>1&&t[1].startsWith("0"))return!1;return(0,i.default)(t[0],4)&&t[1]<=32&&t[1]>=0};var r=a(n(0)),i=a(n(13));function a(e){return e&&e.__esModule?e:{default:e}}var o=/^\d{1,2}$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),["true","false","1","0"].indexOf(e)>=0};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"en-US";if((0,r.default)(e),t in i.alpha)return i.alpha[t].test(e);throw new Error("Invalid locale '"+t+"'")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0)),i=n(9);e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"en-US";if((0,r.default)(e),t in i.alphanumeric)return i.alphanumeric[t].test(e);throw new Error("Invalid locale '"+t+"'")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0)),i=n(9);e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^[+-]?([0-9]*[.])?[0-9]+$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e,{min:0,max:65535})};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(17));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),e===e.toLowerCase()};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),e===e.toUpperCase()};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^[\x00-\x7F]+$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.fullWidth.test(e)&&a.halfWidth.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0)),i=n(18),a=n(19);e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/[^\x00-\x7F]/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/[\uD800-\uDBFF][\uDC00-\uDFFF]/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){(0,r.default)(e),t=t||{};var n=new RegExp("^(?:[-+])?(?:[0-9]+)?(?:\\"+(t.locale?i.decimal[t.locale]:".")+"[0-9]*)?(?:[eE][\\+\\-]?(?:[0-9]+))?$");if(""===e||"."===e||"-"===e||"+"===e)return!1;var a=parseFloat(e.replace(",","."));return n.test(e)&&(!t.hasOwnProperty("min")||a>=t.min)&&(!t.hasOwnProperty("max")||a<=t.max)&&(!t.hasOwnProperty("lt")||a<t.lt)&&(!t.hasOwnProperty("gt")||a>t.gt)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0)),i=n(9);e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if((0,i.default)(e),(t=(0,r.default)(t,u)).locale in a.decimal)return!l.includes(e.replace(/ /g,""))&&function(e){return new RegExp("^[-+]?([0-9]+)?(\\"+a.decimal[e.locale]+"[0-9]{"+e.decimal_digits+"})"+(e.force_decimal?"":"?")+"$")}(t).test(e);throw new Error("Invalid locale '"+t.locale+"'")};var r=o(n(7)),i=o(n(0)),a=n(9);function o(e){return e&&e.__esModule?e:{default:e}}var u={force_decimal:!1,decimal_digits:"1,",locale:"en-US"},l=["","-","+"];e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,r.default)(e),(0,i.default)(e)%parseInt(t,10)==0};var r=a(n(0)),i=a(n(15));function a(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^[A-Z]{2}[0-9A-Z]{3}\d{2}\d{5}$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^[a-f0-9]{32}$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,r.default)(e),new RegExp("^[a-f0-9]{"+i[t]+"}$").test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i={md5:32,md4:32,sha1:40,sha256:64,sha384:96,sha512:128,ripemd128:32,ripemd160:40,tiger128:32,tiger160:40,tiger192:48,crc32:8,crc32b:8};e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t.default=function(e){(0,i.default)(e);try{var t=JSON.parse(e);return!!t&&"object"===(void 0===t?"undefined":r(t))}catch(e){}return!1};var i=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),0===e.length};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t.default=function(e,t){(0,i.default)(e);var n=void 0,a=void 0;"object"===(void 0===t?"undefined":r(t))?(n=t.min||0,a=t.max):(n=arguments[1],a=arguments[2]);var o=e.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g)||[],u=e.length-o.length;return u>=n&&(void 0===a||u<=a)};var i=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"all";(0,r.default)(e);var n=i[t];return n&&n.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i={3:/^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,4:/^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,5:/^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,all:/^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i};e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),(0,i.default)(e)&&24===e.length};var r=a(n(0)),i=a(n(20));function a(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:String(new Date);(0,r.default)(e);var n=(0,i.default)(t),a=(0,i.default)(e);return!!(a&&n&&a>n)};var r=a(n(0)),i=a(n(10));function a(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:String(new Date);(0,r.default)(e);var n=(0,i.default)(t),a=(0,i.default)(e);return!!(a&&n&&a<n)};var r=a(n(0)),i=a(n(10));function a(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t.default=function(e,t){(0,i.default)(e);var n=void 0;if("[object Array]"===Object.prototype.toString.call(t)){var o=[];for(n in t)({}).hasOwnProperty.call(t,n)&&(o[n]=(0,a.default)(t[n]));return o.indexOf(e)>=0}if("object"===(void 0===t?"undefined":r(t)))return t.hasOwnProperty(e);if(t&&"function"==typeof t.indexOf)return t.indexOf(e)>=0;return!1};var i=o(n(0)),a=o(n(11));function o(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){(0,r.default)(e);var t=e.replace(/[- ]+/g,"");if(!i.test(t))return!1;for(var n=0,a=void 0,o=void 0,u=void 0,l=t.length-1;l>=0;l--)a=t.substring(l,l+1),o=parseInt(a,10),n+=u&&(o*=2)>=10?o%10+1:o,u=!u;return!(n%10!=0||!t)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11}|6[27][0-9]{14})$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){if((0,r.default)(e),!i.test(e))return!1;for(var t=e.replace(/[A-Z]/g,function(e){return parseInt(e,36)}),n=0,a=void 0,o=void 0,u=!0,l=t.length-2;l>=0;l--)a=t.substring(l,l+1),o=parseInt(a,10),n+=u&&(o*=2)>=10?o+1:o,u=!u;return parseInt(e.substr(e.length-1),10)===(1e4-n)%10};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";(0,r.default)(t);n=String(n);if(!n)return e(t,10)||e(t,13);var u=t.replace(/[\s-]+/g,"");var l=0;var s=void 0;if("10"===n){if(!i.test(u))return!1;for(s=0;s<9;s++)l+=(s+1)*u.charAt(s);if("X"===u.charAt(9)?l+=100:l+=10*u.charAt(9),l%11==0)return!!u}else if("13"===n){if(!a.test(u))return!1;for(s=0;s<12;s++)l+=o[s%2]*u.charAt(s);if(u.charAt(12)-(10-l%10)%10==0)return!!u}return!1};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^(?:[0-9]{9}X|[0-9]{10})$/,a=/^(?:[0-9]{13})$/,o=[1,3];e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};(0,r.default)(e);var n=i;if(n=t.require_hyphen?n.replace("?",""):n,!(n=t.case_sensitive?new RegExp(n):new RegExp(n,"i")).test(e))return!1;for(var a=e.replace("-","").toUpperCase(),o=0,u=0;u<a.length;u++){var l=a[u];o+=("X"===l?10:+l)*(8-u)}return o%11==0};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i="^\\d{4}-?\\d{3}[\\dX]$";e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if((0,r.default)(e),n&&n.strictMode&&!e.startsWith("+"))return!1;if(Array.isArray(t))return t.some(function(t){if(i.hasOwnProperty(t)){var n=i[t];if(n.test(e))return!0}return!1});if(t in i)return i[t].test(e);if("any"===t){for(var a in i)if(i.hasOwnProperty(a)){var o=i[a];if(o.test(e))return!0}return!1}throw new Error("Invalid locale '"+t+"'")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i={"ar-AE":/^((\+?971)|0)?5[024568]\d{7}$/,"ar-DZ":/^(\+?213|0)(5|6|7)\d{8}$/,"ar-EG":/^((\+?20)|0)?1[012]\d{8}$/,"ar-JO":/^(\+?962|0)?7[789]\d{7}$/,"ar-KW":/^(\+?965)[569]\d{7}$/,"ar-SA":/^(!?(\+?966)|0)?5\d{8}$/,"ar-SY":/^(!?(\+?963)|0)?9\d{8}$/,"ar-TN":/^(\+?216)?[2459]\d{7}$/,"be-BY":/^(\+?375)?(24|25|29|33|44)\d{7}$/,"bg-BG":/^(\+?359|0)?8[789]\d{7}$/,"cs-CZ":/^(\+?420)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,"da-DK":/^(\+?45)?\s?\d{2}\s?\d{2}\s?\d{2}\s?\d{2}$/,"de-DE":/^(\+?49[ \.\-]?)?([\(]{1}[0-9]{1,6}[\)])?([0-9 \.\-\/]{3,20})((x|ext|extension)[ ]?[0-9]{1,4})?$/,"el-GR":/^(\+?30|0)?(69\d{8})$/,"en-AU":/^(\+?61|0)4\d{8}$/,"en-GB":/^(\+?44|0)7\d{9}$/,"en-HK":/^(\+?852\-?)?[456789]\d{3}\-?\d{4}$/,"en-IN":/^(\+?91|0)?[6789]\d{9}$/,"en-KE":/^(\+?254|0)?[7]\d{8}$/,"en-NG":/^(\+?234|0)?[789]\d{9}$/,"en-NZ":/^(\+?64|0)2\d{7,9}$/,"en-PK":/^((\+92)|(0092))-{0,1}\d{3}-{0,1}\d{7}$|^\d{11}$|^\d{4}-\d{7}$/,"en-RW":/^(\+?250|0)?[7]\d{8}$/,"en-SG":/^(\+65)?[89]\d{7}$/,"en-TZ":/^(\+?255|0)?[67]\d{8}$/,"en-UG":/^(\+?256|0)?[7]\d{8}$/,"en-US":/^(\+?1)?[2-9]\d{2}[2-9](?!11)\d{6}$/,"en-ZA":/^(\+?27|0)\d{9}$/,"en-ZM":/^(\+?26)?09[567]\d{7}$/,"es-ES":/^(\+?34)?(6\d{1}|7[1234])\d{7}$/,"et-EE":/^(\+?372)?\s?(5|8[1-4])\s?([0-9]\s?){6,7}$/,"fa-IR":/^(\+?98[\-\s]?|0)9[0-39]\d[\-\s]?\d{3}[\-\s]?\d{4}$/,"fi-FI":/^(\+?358|0)\s?(4(0|1|2|4|5|6)?|50)\s?(\d\s?){4,8}\d$/,"fo-FO":/^(\+?298)?\s?\d{2}\s?\d{2}\s?\d{2}$/,"fr-FR":/^(\+?33|0)[67]\d{8}$/,"he-IL":/^(\+972|0)([23489]|5[012345689]|77)[1-9]\d{6}/,"hu-HU":/^(\+?36)(20|30|70)\d{7}$/,"id-ID":/^(\+?62|0[1-9])[\s|\d]+$/,"it-IT":/^(\+?39)?\s?3\d{2} ?\d{6,7}$/,"ja-JP":/^(\+?81|0)[789]0[ \-]?[1-9]\d{2}[ \-]?\d{5}$/,"kk-KZ":/^(\+?7|8)?7\d{9}$/,"kl-GL":/^(\+?299)?\s?\d{2}\s?\d{2}\s?\d{2}$/,"ko-KR":/^((\+?82)[ \-]?)?0?1([0|1|6|7|8|9]{1})[ \-]?\d{3,4}[ \-]?\d{4}$/,"lt-LT":/^(\+370|8)\d{8}$/,"ms-MY":/^(\+?6?01){1}(([145]{1}(\-|\s)?\d{7,8})|([236789]{1}(\s|\-)?\d{7}))$/,"nb-NO":/^(\+?47)?[49]\d{7}$/,"nl-BE":/^(\+?32|0)4?\d{8}$/,"nn-NO":/^(\+?47)?[49]\d{7}$/,"pl-PL":/^(\+?48)? ?[5-8]\d ?\d{3} ?\d{2} ?\d{2}$/,"pt-BR":/^(\+?55|0)\-?[1-9]{2}\-?[2-9]{1}\d{3,4}\-?\d{4}$/,"pt-PT":/^(\+?351)?9[1236]\d{7}$/,"ro-RO":/^(\+?4?0)\s?7\d{2}(\/|\s|\.|\-)?\d{3}(\s|\.|\-)?\d{3}$/,"ru-RU":/^(\+?7|8)?9\d{9}$/,"sk-SK":/^(\+?421)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,"sr-RS":/^(\+3816|06)[- \d]{5,9}$/,"sv-SE":/^(\+?46|0)[\s\-]?7[\s\-]?[02369]([\s\-]?\d){7}$/,"th-TH":/^(\+66|66|0)\d{9}$/,"tr-TR":/^(\+?90|0)?5\d{9}$/,"uk-UA":/^(\+?38|8)?0\d{9}$/,"vi-VN":/^(\+?84|0)?((1(2([0-9])|6([2-9])|88|99))|(9((?!5)[0-9])))([0-9]{7})$/,"zh-CN":/^(\+?0?86\-?)?1[3456789]\d{9}$/,"zh-TW":/^(\+?886\-?|0)?9\d{8}$/};i["en-CA"]=i["en-US"],i["fr-BE"]=i["nl-BE"],i["zh-HK"]=i["en-HK"],e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,i.default)(e),function(e){var t="\\d{"+e.digits_after_decimal[0]+"}";e.digits_after_decimal.forEach(function(e,n){0!==n&&(t=t+"|\\d{"+e+"}")});var n="(\\"+e.symbol.replace(/\./g,"\\.")+")"+(e.require_symbol?"":"?"),r="[1-9]\\d{0,2}(\\"+e.thousands_separator+"\\d{3})*",i="("+["0","[1-9]\\d*",r].join("|")+")?",a="(\\"+e.decimal_separator+"("+t+"))"+(e.require_decimal?"":"?"),o=i+(e.allow_decimal||e.require_decimal?a:"");return e.allow_negatives&&!e.parens_for_negatives&&(e.negative_sign_after_digits?o+="-?":e.negative_sign_before_digits&&(o="-?"+o)),e.allow_negative_sign_placeholder?o="( (?!\\-))?"+o:e.allow_space_after_symbol?o=" ?"+o:e.allow_space_after_digits&&(o+="( (?!$))?"),e.symbol_after_digits?o+=n:o=n+o,e.allow_negatives&&(e.parens_for_negatives?o="(\\("+o+"\\)|"+o+")":e.negative_sign_before_digits||e.negative_sign_after_digits||(o="-?"+o)),new RegExp("^(?!-? )(?=.*\\d)"+o+"$")}(t=(0,r.default)(t,o)).test(e)};var r=a(n(7)),i=a(n(0));function a(e){return e&&e.__esModule?e:{default:e}}var o={symbol:"$",require_symbol:!1,allow_space_after_symbol:!1,symbol_after_digits:!1,allow_negatives:!0,parens_for_negatives:!1,negative_sign_before_digits:!1,negative_sign_after_digits:!1,allow_negative_sign_placeholder:!1,thousands_separator:",",decimal_separator:".",allow_decimal:!0,require_decimal:!1,digits_after_decimal:[2],allow_space_after_digits:!1};e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),c.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/([01][0-9]|2[0-3])/,a=/[0-5][0-9]/,o=new RegExp("[-+]"+i.source+":"+a.source),u=new RegExp("([zZ]|"+o.source+")"),l=new RegExp(i.source+":"+a.source+":"+/([0-5][0-9]|60)/.source+/(\.[0-9]+)?/.source),s=new RegExp(/[0-9]{4}/.source+"-"+/(0[1-9]|1[0-2])/.source+"-"+/([12]\d|0[1-9]|3[01])/.source),d=new RegExp(""+l.source+u.source),c=new RegExp(s.source+"[ tT]"+d.source);e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.includes(e.toUpperCase())};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=["AD","AE","AF","AG","AI","AL","AM","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SV","SX","SY","SZ","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","YE","YT","ZA","ZM","ZW"];e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.includes(e.toUpperCase())};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=["AFG","ALA","ALB","DZA","ASM","AND","AGO","AIA","ATA","ATG","ARG","ARM","ABW","AUS","AUT","AZE","BHS","BHR","BGD","BRB","BLR","BEL","BLZ","BEN","BMU","BTN","BOL","BES","BIH","BWA","BVT","BRA","IOT","BRN","BGR","BFA","BDI","KHM","CMR","CAN","CPV","CYM","CAF","TCD","CHL","CHN","CXR","CCK","COL","COM","COG","COD","COK","CRI","CIV","HRV","CUB","CUW","CYP","CZE","DNK","DJI","DMA","DOM","ECU","EGY","SLV","GNQ","ERI","EST","ETH","FLK","FRO","FJI","FIN","FRA","GUF","PYF","ATF","GAB","GMB","GEO","DEU","GHA","GIB","GRC","GRL","GRD","GLP","GUM","GTM","GGY","GIN","GNB","GUY","HTI","HMD","VAT","HND","HKG","HUN","ISL","IND","IDN","IRN","IRQ","IRL","IMN","ISR","ITA","JAM","JPN","JEY","JOR","KAZ","KEN","KIR","PRK","KOR","KWT","KGZ","LAO","LVA","LBN","LSO","LBR","LBY","LIE","LTU","LUX","MAC","MKD","MDG","MWI","MYS","MDV","MLI","MLT","MHL","MTQ","MRT","MUS","MYT","MEX","FSM","MDA","MCO","MNG","MNE","MSR","MAR","MOZ","MMR","NAM","NRU","NPL","NLD","NCL","NZL","NIC","NER","NGA","NIU","NFK","MNP","NOR","OMN","PAK","PLW","PSE","PAN","PNG","PRY","PER","PHL","PCN","POL","PRT","PRI","QAT","REU","ROU","RUS","RWA","BLM","SHN","KNA","LCA","MAF","SPM","VCT","WSM","SMR","STP","SAU","SEN","SRB","SYC","SLE","SGP","SXM","SVK","SVN","SLB","SOM","ZAF","SGS","SSD","ESP","LKA","SDN","SUR","SJM","SWZ","SWE","CHE","SYR","TWN","TJK","TZA","THA","TLS","TGO","TKL","TON","TTO","TUN","TUR","TKM","TCA","TUV","UGA","UKR","ARE","GBR","USA","UMI","URY","UZB","VUT","VEN","VNM","VGB","VIR","WLF","ESH","YEM","ZMB","ZWE"];e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){(0,r.default)(e);var t=e.length;if(!t||t%4!=0||i.test(e))return!1;var n=e.indexOf("=");return-1===n||n===t-1||n===t-2&&"="===e[t-1]};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/[^A-Z0-9+\/=]/i;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){(0,r.default)(e);var t=e.split(",");if(t.length<2)return!1;var n=t.shift().trim().split(";"),u=n.shift();if("data:"!==u.substr(0,5))return!1;var l=u.substr(5);if(""!==l&&!i.test(l))return!1;for(var s=0;s<n.length;s++)if(s===n.length-1&&"base64"===n[s].toLowerCase());else if(!a.test(n[s]))return!1;for(var d=0;d<t.length;d++)if(!o.test(t[d]))return!1;return!0};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^[a-z]+\/[a-z0-9\-\+]+$/i,a=/^[a-z\-]+=[a-z0-9\-]+$/i,o=/^[a-z0-9!\$&'\(\)\*\+,;=\-\._~:@\/\?%\s]*$/i;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),i.test(e)||a.test(e)||o.test(e)};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^(application|audio|font|image|message|model|multipart|text|video)\/[a-zA-Z0-9\.\-\+]{1,100}$/i,a=/^text\/[a-zA-Z0-9\.\-\+]{1,100};\s?charset=("[a-zA-Z0-9\.\-\+\s]{0,70}"|[a-zA-Z0-9\.\-\+]{0,70})(\s?\([a-zA-Z0-9\.\-\+\s]{1,20}\))?$/i,o=/^multipart\/[a-zA-Z0-9\.\-\+]{1,100}(;\s?(boundary|charset)=("[a-zA-Z0-9\.\-\+\s]{0,70}"|[a-zA-Z0-9\.\-\+]{0,70})(\s?\([a-zA-Z0-9\.\-\+\s]{1,20}\))?){0,2}$/i;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){if((0,r.default)(e),!e.includes(","))return!1;var t=e.split(",");return i.test(t[0])&&a.test(t[1])};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^\(?[+-]?(90(\.0+)?|[1-8]?\d(\.\d+)?)$/,a=/^\s?[+-]?(180(\.0+)?|1[0-7]\d(\.\d+)?|\d{1,2}(\.\d+)?)\)?$/;e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.locales=void 0,t.default=function(e,t){if((0,r.default)(e),t in u)return u[t].test(e);if("any"===t){for(var n in u){if(u.hasOwnProperty(n))if(u[n].test(e))return!0}return!1}throw new Error("Invalid locale '"+t+"'")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var i=/^\d{4}$/,a=/^\d{5}$/,o=/^\d{6}$/,u={AT:i,AU:i,BE:i,BG:i,CA:/^[ABCEGHJKLMNPRSTVXY]\d[ABCEGHJ-NPRSTV-Z][\s\-]?\d[ABCEGHJ-NPRSTV-Z]\d$/i,CH:i,CZ:/^\d{3}\s?\d{2}$/,DE:a,DK:i,DZ:a,EE:a,ES:a,FI:a,FR:/^\d{2}\s?\d{3}$/,GB:/^(gir\s?0aa|[a-z]{1,2}\d[\da-z]?\s?(\d[a-z]{2})?)$/i,GR:/^\d{3}\s?\d{2}$/,HR:/^([1-5]\d{4}$)/,HU:i,IL:a,IN:o,IS:/^\d{3}$/,IT:a,JP:/^\d{3}\-\d{4}$/,KE:a,LI:/^(948[5-9]|949[0-7])$/,LT:/^LT\-\d{5}$/,LU:i,LV:/^LV\-\d{4}$/,MX:a,NL:/^\d{4}\s?[a-z]{2}$/i,NO:i,PL:/^\d{2}\-\d{3}$/,PT:/^\d{4}\-\d{3}?$/,RO:o,RU:o,SA:a,SE:/^\d{3}\s?\d{2}$/,SI:i,SK:/^\d{3}\s?\d{2}$/,TN:i,TW:/^\d{3}(\d{2})?$/,US:/^\d{5}(-\d{4})?$/,ZA:i,ZM:a};t.locales=Object.keys(u)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,r.default)((0,i.default)(e,t),t)};var r=a(n(22)),i=a(n(21));function a(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),e.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/\//g,"&#x2F;").replace(/\\/g,"&#x5C;").replace(/`/g,"&#96;")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e),e.replace(/&amp;/g,"&").replace(/&quot;/g,'"').replace(/&#x27;/g,"'").replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&#x2F;/g,"/").replace(/&#x5C;/g,"\\").replace(/&#96;/g,"`")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){(0,r.default)(e);var n=t?"\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F":"\\x00-\\x1F\\x7F";return(0,i.default)(e,n)};var r=a(n(0)),i=a(n(23));function a(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,r.default)(e),e.replace(new RegExp("[^"+t+"]+","g"),"")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){(0,r.default)(e);for(var n=e.length-1;n>=0;n--)if(-1===t.indexOf(e[n]))return!1;return!0};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){t=(0,r.default)(t,i);var n=e.split("@"),d=n.pop(),c=[n.join("@"),d];if(c[1]=c[1].toLowerCase(),"gmail.com"===c[1]||"googlemail.com"===c[1]){if(t.gmail_remove_subaddress&&(c[0]=c[0].split("+")[0]),t.gmail_remove_dots&&(c[0]=c[0].replace(/\.+/g,s)),!c[0].length)return!1;(t.all_lowercase||t.gmail_lowercase)&&(c[0]=c[0].toLowerCase()),c[1]=t.gmail_convert_googlemaildotcom?"gmail.com":c[1]}else if(a.indexOf(c[1])>=0){if(t.icloud_remove_subaddress&&(c[0]=c[0].split("+")[0]),!c[0].length)return!1;(t.all_lowercase||t.icloud_lowercase)&&(c[0]=c[0].toLowerCase())}else if(o.indexOf(c[1])>=0){if(t.outlookdotcom_remove_subaddress&&(c[0]=c[0].split("+")[0]),!c[0].length)return!1;(t.all_lowercase||t.outlookdotcom_lowercase)&&(c[0]=c[0].toLowerCase())}else if(u.indexOf(c[1])>=0){if(t.yahoo_remove_subaddress){var f=c[0].split("-");c[0]=f.length>1?f.slice(0,-1).join("-"):f[0]}if(!c[0].length)return!1;(t.all_lowercase||t.yahoo_lowercase)&&(c[0]=c[0].toLowerCase())}else l.indexOf(c[1])>=0?((t.all_lowercase||t.yandex_lowercase)&&(c[0]=c[0].toLowerCase()),c[1]="yandex.ru"):t.all_lowercase&&(c[0]=c[0].toLowerCase());return c.join("@")};var r=function(e){return e&&e.__esModule?e:{default:e}}(n(7));var i={all_lowercase:!0,gmail_lowercase:!0,gmail_remove_dots:!0,gmail_remove_subaddress:!0,gmail_convert_googlemaildotcom:!0,outlookdotcom_lowercase:!0,outlookdotcom_remove_subaddress:!0,yahoo_lowercase:!0,yahoo_remove_subaddress:!0,yandex_lowercase:!0,icloud_lowercase:!0,icloud_remove_subaddress:!0},a=["icloud.com","me.com"],o=["hotmail.at","hotmail.be","hotmail.ca","hotmail.cl","hotmail.co.il","hotmail.co.nz","hotmail.co.th","hotmail.co.uk","hotmail.com","hotmail.com.ar","hotmail.com.au","hotmail.com.br","hotmail.com.gr","hotmail.com.mx","hotmail.com.pe","hotmail.com.tr","hotmail.com.vn","hotmail.cz","hotmail.de","hotmail.dk","hotmail.es","hotmail.fr","hotmail.hu","hotmail.id","hotmail.ie","hotmail.in","hotmail.it","hotmail.jp","hotmail.kr","hotmail.lv","hotmail.my","hotmail.ph","hotmail.pt","hotmail.sa","hotmail.sg","hotmail.sk","live.be","live.co.uk","live.com","live.com.ar","live.com.mx","live.de","live.es","live.eu","live.fr","live.it","live.nl","msn.com","outlook.at","outlook.be","outlook.cl","outlook.co.il","outlook.co.nz","outlook.co.th","outlook.com","outlook.com.ar","outlook.com.au","outlook.com.br","outlook.com.gr","outlook.com.pe","outlook.com.tr","outlook.com.vn","outlook.cz","outlook.de","outlook.dk","outlook.es","outlook.fr","outlook.hu","outlook.id","outlook.ie","outlook.in","outlook.it","outlook.jp","outlook.kr","outlook.lv","outlook.my","outlook.ph","outlook.pt","outlook.sa","outlook.sg","outlook.sk","passport.com"],u=["rocketmail.com","yahoo.ca","yahoo.co.uk","yahoo.com","yahoo.de","yahoo.fr","yahoo.in","yahoo.it","ymail.com"],l=["yandex.ru","yandex.ua","yandex.kz","yandex.com","yandex.by","ya.ru"];function s(e){return e.length>1?e:""}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),a=n(2),o=s(n(3)),u=s(n(5)),l=n(4);function s(e){return e&&e.__esModule?e:{default:e}}var d=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.childView=i.DOMDoc.createElement("div"),this.childView.innerHTML=a.deleteDialogTemple.trim(),this.actionButtonClicked=new o.default(this),this.model=t;var r=this.childView.querySelectorAll("[tc-data-model]");(0,i.bindPropertiesToElement)(r,{message:"This action delete <strong>"+t.title+"</strong> from database. Are you sure you want to continue?"});var s=this.childView.querySelector('[tc-data-action="ok"]'),d=this.childView.querySelector('[tc-data-dismiss="cancel"]'),c=this;s.onclick=function(){u.default.delete((0,l.getEntryUrlByID)(n.model.id)).then(function(){n.notifyObserver("success")}).catch(function(){return n.notifyObserver("failed")})},d.onclick=function(){c.actionButtonClicked.notify({action:"cancel"})}}return r(e,[{key:"notifyObserver",value:function(){return function(e){this.actionButtonClicked.notify({status:e,action:"ok"}),this.modalView&&this.modalView.dismiss()}}()},{key:"getViewElement",value:function(){return function(){return this.childView}}()}]),e}();t.default=d},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(e){return e&&e.__esModule?e:{default:e}}(n(3));var i=function(){return function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.valueChangeObserver=new r.default(null),Object.keys(t).forEach(function(e){var t=void 0;Object.defineProperty(n,e,{set:function(e){t=e,this.valueChangeObserver.notify()},get:function(){return t},enumerable:!0})}),Object.keys(t).forEach(function(e){n[e]=t[e]})}}();t.default=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),a=n(2),o=function(e){return e&&e.__esModule?e:{default:e}}(n(3));function u(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var l=function(){function e(){u(this,e),this.childView=(0,i.htmlToElement)(a.modalBoxTemplate),this.onclickEvent=new o.default(this),this.onDismissEvent=new o.default(this);var t=this;this.childView.onclick=function(e){t.onclickEvent.notify(e)}}return r(e,[{key:"setContent",value:function(){return function(e){var t=this.childView.querySelector(".modal-content");t.innerHTML="",t.appendChild(e);for(var n=this,r=this.childView.querySelectorAll("[tc-data-dismiss]"),i=0;i<r.length;i+=1)r[i].onclick=function(){n.onDismissEvent.notify(),n.dismiss()}}}()},{key:"getViewElement",value:function(){return function(){return this.childView}}()},{key:"dismiss",value:function(){return function(){this.onDismissEvent.notify(),i.DOMDoc.body.removeChild(this.getViewElement())}}()}]),e}(),s=new(function(){function e(){u(this,e),this.modalVieew=new l}return r(e,[{key:"open",value:function(){return function(e){var t=e,n=this.modalVieew.getViewElement();n.style.display="block",t.modalView=this.modalVieew,this.modalVieew.setContent(t.getViewElement()),i.DOMDoc.body.appendChild(n)}}()},{key:"onDismiss",value:function(){return function(e){this.modalVieew.onDismissEvent.attach(e)}}()},{key:"getModalView",value:function(){return function(){return this.modalVieew}}()}]),e}());t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),a=n(2);var o=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.childView=(0,i.htmlToElement)(a.loadingTemplate)}return r(e,[{key:"getViewElement",value:function(){return function(){return this.childView}}()}]),e}();t.default=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var i=new(function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.routes={}}return r(e,[{key:"registerRoutes",value:function(){return function(e,t,n){this.routes[e]={controller:t,requireAuth:n}}}()}]),e}());t.default=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),a=n(2),o=function(e){return e&&e.__esModule?e:{default:e}}(n(24));var u=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.signInPageTemplate=a.signInPageTemplate,this.viewElement=(0,i.htmlToElement)(this.signInPageTemplate),this.registerSignInEvent()}return r(e,[{key:"registerSignInEvent",value:function(){return function(){var e=this.viewElement.querySelector("#signinForm"),t=function(){var t=e.querySelector(".btn");if((0,i.validateForm)(e)){(0,i.showLoadingAnim)(t,"show");var n=(0,i.getFieldsAsObject)(e);o.default.login(n).then(function(){(0,i.showLoadingAnim)(t,"remove"),(0,i.gotoUrl)("#/dashboard")}).catch(function(){(0,i.showLoadingAnim)(t,"remove"),(0,i.showAlert)("Authentication Failed, check email or password","error")})}};e&&(e.querySelector(".btn").onclick=t)}}()},{key:"getViewElement",value:function(){return function(){return this.viewElement}}()}]),e}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){return function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,i=!1,a=void 0;try{for(var o,u=e[Symbol.iterator]();!(r=(o=u.next()).done)&&(n.push(o.value),!t||n.length!==t);r=!0);}catch(e){i=!0,a=e}finally{try{!r&&u.return&&u.return()}finally{if(i)throw a}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(1),o=n(4),u=f(n(14)),l=f(n(5)),s=n(2),d=f(n(8)),c=f(n(3));function f(e){return e&&e.__esModule?e:{default:e}}var v=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.viewElement=(0,a.htmlToElement)(s.profilePageTemplate),this.onReady=new c.default(this)}return i(e,null,[{key:"padValue",value:function(){return function(e){var t=Number(e);return t>=0&&t<10&&(t="0"+t),t}}()},{key:"roundTime",value:function(){return function(e,t,n){var r=e;return r<t?r=t:r>n&&(r=n),r}}()},{key:"inputChangeHandler",value:function(){return function(t){var n=t.target,r=n.getAttribute("data-unit"),i=n.value;r&&"hours"===r?i=e.roundTime(i,0,23):r&&"minutes"===r&&(i=e.roundTime(i,0,59)),n.value=parseInt(i,10)}}()},{key:"blurHandler",value:function(){return function(t){var n=t.target,r=n.value;n.value=e.padValue(r)}}()},{key:"consumeAPIResult",value:function(){return function(e){e.then(function(e){(0,a.showToast)(e.message,"success")}).catch(function(e){(0,a.showToast)(e.message,"error")})}}()},{key:"stepMinutesValue",value:function(){return function(e,t){var n=0;if(!e)return n;"up"===e?n=t%15==0?t+15:15*(parseInt(""+t/15,10)+1):"down"===e&&(n=t%15==0?t-15:15*parseInt(""+(0===t?60:t)/15,10));return n}}()},{key:"roundAndPadValue",value:function(){return function(t){return t<0?23:t>23?"00":e.padValue(t)}}()}]),i(e,[{key:"focusHandler",value:function(){return function(){var e=this;return function(t){var n=e.viewElement.querySelector("#hours"),r=e.viewElement.querySelector("#minutes"),i=t.target;r.classList.remove("hasFocus"),n.classList.remove("hasFocus"),i.classList.add("hasFocus")}}}()},{key:"getFocusedElement",value:function(){return function(){var e=this.viewElement.querySelector("#minutes"),t=this.viewElement.querySelector(".hasFocus");return t||(e.focus(),t=e),t}}()},{key:"minutesControlHandler",value:function(){return function(t){var n=this.viewElement.querySelector("#hours"),r=this.getFocusedElement(),i=t.getAttribute("data-direction"),a=e.stepMinutesValue(i,Number(r.value)),o=Number(n.value);a<=0?(r.value=59,o-=1,n.value=e.roundAndPadValue(o)):a>=60?(r.value="00",o+=1,n.value=e.roundAndPadValue(o)):r.value=e.padValue(a)}}()},{key:"hoursControlHandler",value:function(){return function(t){var n=t.getAttribute("data-direction"),r=this.getFocusedElement(),i=Number(r.value);n&&"down"===n?i-=1:n&&"up"===n&&(i+=1),r.value=e.roundAndPadValue(i)}}()},{key:"controlHandler",value:function(){return function(){var e=this;return function(t){var n=t.target,r=e.getFocusedElement();"minutes"===r.id?e.minutesControlHandler(n):"hours"===r.id&&e.hoursControlHandler(n)}}}()},{key:"timeInputController",value:function(){return function(){var t=this.viewElement.querySelector("#hours"),n=this.viewElement.querySelector("#minutes");t.onkeyup=e.inputChangeHandler,t.onchange=e.inputChangeHandler,t.onpaste=e.inputChangeHandler,t.oncut=e.inputChangeHandler,n.onkeyup=e.inputChangeHandler,n.onchange=e.inputChangeHandler,n.onpaste=e.inputChangeHandler,n.oncut=e.inputChangeHandler,t.onblur=e.blurHandler,n.onblur=e.blurHandler,t.onfocus=this.focusHandler(),n.onfocus=this.focusHandler();for(var r=this.viewElement.querySelectorAll(".time-controller-btn"),i=0;i<r.length;i+=1)r[i].onclick=this.controlHandler()}}()},{key:"bindProfile",value:function(){return function(e){if(!e)return null;var t=this.viewElement.querySelector("#profile").querySelectorAll("[tc-data-model]");return(0,a.bindPropertiesToElement)(t,e),t}}()},{key:"bindEntriesSummary",value:function(){return function(e){if(!e)return null;var t=e;t.lastModified=(0,a.trimDate)(t.lastModified);var n=this.viewElement.querySelector("#entrySummary").querySelectorAll("[tc-data-model]");return(0,a.bindPropertiesToElement)(n,e),n}}()},{key:"bindReminder",value:function(){return function(e){if(e.time){var t=e.time,n=e.from,i=e.to,o=t.split(":"),u=r(o,2),l=u[0],s=u[1],d=this.viewElement.querySelector("#reminder").querySelectorAll("[tc-data-model]");(0,a.bindPropertiesToElement)(d,{hours:l,minutes:s,from:n,to:i})}}}()},{key:"updatePasswordHandler",value:function(){return function(){var t=this;return function(n){n.preventDefault();var r=t.viewElement.querySelector("#changePassword"),i=(0,a.getFieldsAsObject)(r);i.newPassword===i.matchPassword?e.consumeAPIResult(l.default.post(o.changePassword,i)):(0,a.showToast)("Password doesn't match","error")}}}()},{key:"updateReminderHandler",value:function(){return function(){var t=this;return function(n){n.preventDefault();var r=t.viewElement.querySelector("#reminderForm"),i=(0,a.getFieldsAsObject)(r);i.time=i.hours+":"+i.minutes,e.consumeAPIResult(l.default.put(o.reminderUrl,i))}}}()},{key:"registerEvent",value:function(){return function(){this.viewElement.querySelector("#changePassword").querySelector("[tc-data-action]").onclick=this.updatePasswordHandler(),this.viewElement.querySelector("#reminderForm").querySelector("[tc-data-action]").onclick=this.updateReminderHandler()}}()},{key:"initialize",value:function(){return function(){var e=this;u.default.render(this.viewElement),this.timeInputController(),d.default.identify().then(function(t){var n=t.data,r=n.user,i=n.reminder,a=n.entry;e.bindProfile(r),e.bindReminder(i),e.bindEntriesSummary(a),e.registerEvent(),e.onReady.notify({})}).catch(function(t){(0,a.showToast)(t.message,"error"),e.onReady.notify({})})}}()},{key:"render",value:function(){return function(){var e=a.DOMDoc.getElementById("main");e&&(e.appendChild(this.viewElement),this.initialize())}}()},{key:"getViewElement",value:function(){return function(){return this.viewElement}}()}]),e}();t.default=v},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=s(n(14)),a=n(1),o=n(2),u=s(n(8)),l=s(n(3));function s(e){return e&&e.__esModule?e:{default:e}}var d=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.viewElement=null,this.onReady=new l.default(this)}return r(e,[{key:"render",value:function(){return function(){var e=a.DOMDoc.getElementById("main");e&&e.appendChild(this.viewElement)}}()},{key:"getViewElement",value:function(){return function(){return this.viewElement}}()},{key:"initialize",value:function(){return function(){var e=this;u.default.identify().then(function(){e.onReady.notify({}),(0,a.gotoUrl)("#/dashboard")}).catch(function(){e.viewElement=(0,a.htmlToElement)(o.homeTemplate),i.default.render(e.viewElement),e.onReady.notify({})})}}()}]),e}();t.default=d},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),a=n(4),o=function(e){return e&&e.__esModule?e:{default:e}}(n(5)),u=n(2);var l=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.signUpPageTemplate=u.signUpPageTemplate,this.viewElement=(0,i.htmlToElement)(this.signUpPageTemplate),this.registerSignUpEvent()}return r(e,[{key:"registerSignUpEvent",value:function(){return function(){var e=this.viewElement.querySelector("#signupForm"),t=function(){var t=e.querySelector(".btn");if((0,i.validateForm)(e)&&(0,i.matchPassword)(e)){(0,i.showLoadingAnim)(t,"show");var n=(0,i.getFieldsAsObject)(e);o.default.post(a.registrationEndpoint,n).then(function(){(0,i.showLoadingAnim)(t,"remove"),(0,i.gotoUrl)("#/dashboard")}).catch(function(e){var n=e.message;(0,i.showLoadingAnim)(t,"remove"),(0,i.showAlert)("Registration Failed:<br>"+n,"error")})}};e&&(e.querySelector(".btn").onclick=t)}}()},{key:"getViewElement",value:function(){return function(){return this.viewElement}}()}]),e}();t.default=l},function(e,t,n){"use strict";n.r(t);var r=n(6),i=n.n(r);class a extends Error{constructor(e,t=500,n="Unknown Error"){super(e),this.code=t,this.message=e,this.status=n}static wrapAndThrowError(e){throw new a(e.message)}static sendError(e,t){let n=e.code||500;(n<99||n>599)&&(n=500);const{message:r,status:i}=e;t.status(n).send({message:r,status:i})}}n.d(t,"padValue",function(){return u}),n.d(t,"getTimeString",function(){return l}),n.d(t,"isEmpty",function(){return s}),n.d(t,"validateName",function(){return d}),n.d(t,"validateEmailAndPassword",function(){return c}),n.d(t,"validateTime",function(){return v}),n.d(t,"validateEntry",function(){return p}),n.d(t,"validateLoginInfo",function(){return m}),n.d(t,"mapAndWrapDbPromise",function(){return h}),n.d(t,"sameDayDateComparison",function(){return y}),n.d(t,"mapArray",function(){return g});const o=["MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY"];function u(e){return e<10?`0${e}`:e}function l(e){if(!e)return null;return`${["Jan","Feb","Mar","April","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][e.getMonth()]} ${e.getDate()}, ${e.getFullYear()} ${u(`${e.getHours()}`)}:${u(`${e.getMinutes()}`)}`}function s(e){let t=e;return void 0===t||null===t||"string"==typeof(t=t.trim())&&0===t.length}function d(e){const t=/^[a-zA-Z]+$/;return s(e.firstName)||s(e.lastName)?"First Name or Last Name cannot be empty":i.a.matches(e.firstName,t)&&i.a.matches(e.lastName,t)?null:"First Name or Last Name can only contain characters between A - Z"}function c(e){return s(e.email)?"Email address is required":s(e.email)||i.a.isEmail(e.email)?s(e.password)||!i.a.isLength(e.password,{min:8})?"Password must be at least 8;\n\r":d(e):"Email address is not valid;"}function f(e){let t=!1;for(let n=0;n<o.length;n+=1)if(o[n]===e.toUpperCase()){t=!0;break}return t}function v(e){return s(e.time)||s(e.from)||s(e.to)?"'time', 'from', or 'to' field cannot be empty":i.a.matches(e.time,/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/i)?f(e.from)&&f(e.to)?null:"'from' or 'to' field is not a valid a day of the week":"Invalid Time input: format HH:MM\n\r"}function p(e){return s(e.title)?"'title' field cannot be empty":s(e.content)?"'content' field cannot be empty":i.a.isLength(e.title,{min:4})?null:"Title must be at least 4 characters long"}function m(e){return s(e.email)?"Email address is required":s(e.password)?"Require Password\n\r":null}function h(e,t){return e.then(e=>t(e)).catch(a.wrapAndThrowError)}function y(e){const t=new Date,n=parseInt(`${(t.getTime()-e.getTime())/864e5}`,10);return t.getDate()>e.getDate()&&n>0}function g(e,t){const n=[];return e.forEach(e=>{n.push(t(e))}),Promise.resolve(n)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,