!function(e){var n={};function t(a){if(n[a])return n[a].exports;var l=n[a]={i:a,l:!1,exports:{}};return e[a].call(l.exports,l,l.exports,t),l.l=!0,l.exports}t.m=e,t.c=n,t.d=function(e,n,a){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:a})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var l in e)t.d(a,l,function(n){return e[n]}.bind(null,l));return a},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=90)}({1:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};function l(e,n){for(var t=n.split("."),l=e;t.length;){var i=t.shift().trim();if(!("object"===(void 0===l?"undefined":a(l))&&i in l))return null;l=l[i]}return l}function i(e,n){var t=e,a=l(n,t.getAttribute("tc-data-model"));"INPUT"===t.nodeName||"SELECT"===t.nodeName||"TEXTAREA"===t.nodeName?t.value=a||"":t.innerHTML=a}function o(e,n){return e.test(n)}function s(e){return function(n,t){return l(e,t)}}n.htmlToElement=function(e){var n=document.createElement("template");return n.innerHTML=e.trim(),n.content.firstChild},n.getValue=l,n.bindPropertiesToElement=function(e,n){if(!n)return;for(var t=0;t<e.length;t+=1)i(e[t],n)},n.requiresSubstitution=o,n.getSubstituteValue=s,n.formatter=function(e,n){var t=/{{([^{]*?)}}/g,a=e;o(t,e)&&(a=e.replace(t,s(n)));return a},n.stopAlertTime=d,n.showAlert=function(e,n){d();var t=document.getElementById("alert");if(!t)return;t.className="",t.classList.add("alert"),t.classList.add(n);var a=t.querySelector(".alert-msg"),l=t.querySelector(".close-btn"),i=function(){return function(){t.style.display="none"}}();a.innerHTML=e,t.style.display="block",l.onclick=i,r=setTimeout(i,8e3)},n.getFieldsAsObject=function(e){var n={};return e.querySelectorAll("input").forEach(function(e){var t=e.getAttribute("name");n[t]=e.value}),e.querySelectorAll("select").forEach(function(e){var t=e.getAttribute("name");n[t]=e.options[e.selectedIndex].value}),n},n.showToast=function(e,n){clearTimeout(c);var t=document.getElementById("toast");if(!t)return;t.className="",t.classList.add("toast");var a=t.querySelector(".alert-msg"),l=t.querySelector(".close-btn"),i=function(){return function(){t.classList.remove("show"),t.classList.add("dismiss")}}();a.innerHTML=e,t.classList.add("show"),t.classList.remove("dismiss"),t.classList.add(n),l.onclick=i,c=setTimeout(i,8e3)},n.trimDate=function(e){return e.substring(0,e.length-5).trim()};var r=null;function d(){clearTimeout(r)}var c=null},2:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});n.modalBoxTemplate='\n<div id="modal-box" class="modal">\n    <div class="modal-content"></div>\n</div>',n.deleteDialogTemple='\n        <div class="modal-header">\n            <span class="modal-header-title" role="heading">\n                Confirm Delete\n            </span>\n            <span tc-data-dismiss="modal"  class="action-btn close" role="button" tabindex="0" aria-label="Close"></span>\n        </div>\n        <div tc-data-model="message" class="modal-body">This action delete entry from database. Are you sure you want to continue?\n        </div>\n        <div class="modal-footer">\n            <button tc-data-action="ok" name="ok" class="btn-ok">OK</button>\n            <button tc-data-dismiss="cancel"  name="cancel">Cancel</button>\n        </div>',n.entryListHeader='\n        <div class="header">\n            <span class="title">Your Diary Entries</span>\n            <div class="add-entry">\n                <a id="addEntry" title="Add Entry" class="btn create" role="button">Add Diary Entry</a>\n            </div>\n        </div>',n.entryListItemTemplate='\n            <div class="entry">\n                <p class="title" tc-data-model="title"></p>\n                <div class="content line-clamp">\n                    <p class="block-with-text" tc-data-model="content"></p>\n                </div>\n                <div class="footer">\n                    <div>\n                        <span>Last Modified:</span>&nbsp;\n                        <span tc-data-model="lastModified"></span>\n                    </div>\n                    <div class="dropdown">\n                        <a data-index="" tc-data-action="dropdown-toggle"\n                           class="dropdown-toggle-icon"></a>\n                        <ul class="dropdown-menu">\n                            <li><a tc-data-action="view">View</a></li>\n                            <li><a tc-data-action="edit">Edit</a></li>\n                            <li><a tc-data-action="delete">Delete</a></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>',n.createEntryTemplate='       \n    <div class="flexbox-parent scrollable">\n      <div id="alert" class="alert error">\n          <p class="alert-msg"></p>\n          <a href="javascript:void(0);" class="close-btn">&times;</a>\n      </div>\n      <div class="modal-header">\n          <div id="modal-header-title">\n              <p tc-data-model="lastModified"></p>\n              <input tc-data-model="title" placeholder="Title" class="form-input modal-header-input">\n              \x3c!--<span tc-data-model="title" class="modal-header-title"></span>--\x3e\n          </div>\n          <span tc-data-dismiss="modal" class="action-btn close" role="button" tabindex="0" aria-label="Close"></span>\n      </div>\n      <div class="grow-body modal-body">\n          <div class="create-entry">\n              <textarea placeholder="Dear Diary, " id="entry" autofocus></textarea>\n          </div>\n      </div>\n      <div class="modal-footer">\n        <button tc-data-action="save" type="button" class="btn-save">Save</button>\n        <button tc-data-dismiss="cancel" type="button" class="btn-cancel">Cancel</button>\n    </div>\n    </div>\n',n.viewEntryTemplate='\n     <div  class="scrollable">                \n        <div class="modal-header">\n            <div id="modal-header-title">\n                <p tc-data-model="lastModified"></p>\n                <span tc-data-model="title" class="modal-header-title"></span>\n            </div>\n            <span tc-data-dismiss="modal"  class="action-btn close" role="button" tabindex="0" aria-label="Close"></span>\n        </div>               \n        <div class="grow-body modal-body"> \n            <div class="content-container"></div>                \n        </div>  \n     </div>\n',n.loadingTemplate='\n    <div class="loading-container loading-bg">\n        <div class="loading-ring">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    </div>',n.emptyListTemple='<div class="empty-list"><span>No Entry</span></div>',n.navbarHeaderTemplate=' \n    <div>\n      <div class="nav-container">\n          <header class="nav-header">\n          <a class="navicon">\n            <svg xmlns="http://www.w3.org/2000/svg" width="23" height="19" viewBox="0 0 23 19">\n                      <g fill="none">\n                          <g fill="#555">\n                              <rect y="16" width="23" height="3" rx="1.5"></rect>\n                              <rect width="23" height="3" rx="1.5"></rect>\n                              <rect y="8" width="23" height="3" rx="1.5"></rect>\n                          </g>\n                      </g>\n                  </svg>\n          </a>\n          <a href="index.html" class="header-logo">\n              <span class="logo-img"></span>            \n          </a>\n          <div class="nav">\n              <ul class="logged-in">\n                  <li>\n                      <a href="dashboard.html">Dashboard</a>\n                  </li>\n                  <li>\n                      <a href="profile.html">Profile</a>\n                  </li>\n                  <li>\n                      <a class="logout-js">Logout</a>\n                  </li>\n              </ul>\n              <ul class="logged-out">\n                  <li>\n                      <a href="signin.html">Sign In</a>\n                  </li>\n                  <li>\n                      <a class="btn signup" href="signup.html">Sign Up</a>\n                  </li>\n              </ul>            \n          </div>\n      </header>     \n      </div>\n      <div class="side-nav">\n        <div class="nav">\n            <span tc-data-dismiss="side-nav"  class="action-btn close" role="button" tabindex="0" aria-label="Close"></span>\n            <ul class="logged-in">\n                <li>\n                    <a href="dashboard.html">Dashboard</a>\n                </li>\n                <li>\n                    <a href="profile.html">Profile</a>\n                </li>\n                <li>\n                    <a class="logout-js">Logout</a>\n                </li>\n            </ul>\n            <ul class="logged-out" style="display: none;">\n                <li>\n                    <a href="signin.html">Sign In</a>\n                </li>\n                <li>\n                    <a href="signup.html">Sign Up</a>\n                </li>\n            </ul>\n        </div>\n    </div>\n    </div>\n',n.floatingButton='\n    <a title="Add Entry" role="button">\n      <div class="floating-button show-on-mobile">\n          <span title="Add Entry" role="button" class="plus">&plus;</span>\n      </div>\n    </a>'},8:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a=function(){function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(n,t,a){return t&&e(n.prototype,t),a&&e(n,a),n}}(),l=t(1),i=t(2);var o=function(){function e(){var n=this;!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.vieewElement=document.getElementById("navbar"),this.vieewElement.style.display="none",this.vieewElement.appendChild((0,l.htmlToElement)(i.navbarHeaderTemplate));var t=this.vieewElement.querySelectorAll(".logout-js");t[0].onclick=e.logoutHandle,t[1].onclick=e.logoutHandle,this.vieewElement.querySelector('[tc-data-dismiss="side-nav"]').onclick=function(){n.hideOrShowSideNav("hide")},this.vieewElement.querySelector(".navicon").onclick=function(){n.hideOrShowSideNav("show")},this.vieewElement.querySelector(".side-nav").onclick=function(e){e.target.classList.contains("nav")||n.hideOrShowSideNav("hide")}}return a(e,null,[{key:"logoutHandle",value:function(){return function(){localStorage.clear("authenticationToken"),window.location.replace("index.html")}}()}]),a(e,[{key:"render",value:function(){return function(){this.vieewElement.style.display="flex";var e=this.vieewElement.querySelectorAll(".logged-out"),n=this.vieewElement.querySelectorAll(".logged-in");localStorage.authenticationToken?(n[0].style.display="flex",e[0].style.display="none",n[1].style.display="block",e[1].style.display="none"):(n[0].style.display="none",e[0].style.display="flex",n[1].style.display="none",e[1].style.display="block")}}()},{key:"hideOrShowSideNav",value:function(){return function(e){var n=this.vieewElement.querySelector(".side-nav"),t=n.querySelector(".nav");"hide"===e?(n.style.width="0",t.style.width="0"):(n.style.width="100vw",t.style.width="250px")}}()}]),e}();n.default=o},90:function(e,n,t){"use strict";var a=function(e){return e&&e.__esModule?e:{default:e}}(t(8));document.addEventListener("DOMContentLoaded",function(){(new a.default).render(),"undefined"!=typeof Storage&&localStorage.authenticationToken&&window.location.replace("dashboard.html")})}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,